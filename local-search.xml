<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo博客优化之文章置顶+置顶标签</title>
    <link href="/posts/4.html"/>
    <url>/posts/4.html</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/netcan/hexo-generator-index-pin-top">支持置顶的仓库</a></p><p>可以直接用以下命令安装</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs fortran">$ npm uninstall hexo-generator-<span class="hljs-built_in">index</span> --<span class="hljs-keyword">save</span><br>$ npm install hexo-generator-<span class="hljs-built_in">index</span>-pin-top --<span class="hljs-keyword">save</span><br></code></pre></td></tr></table></figure><p>然后在需要置顶的文章的Front-matter中加上top: true即可。</p><span id="more"></span><p><strong>设置置顶标志</strong></p><p>打开：/blog/themes/next/layout/_macro 目录下的post.swig文件，定位到</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;post-meta&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p>下面插入如下代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> post.top %&#125;</span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-thumb-tack&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">7D26CD</span>&gt;</span>置顶<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml">          </span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网站</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/02/25/hello-world/"/>
    <url>/2021/02/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu安装hugo教程</title>
    <link href="/posts/26.html"/>
    <url>/posts/26.html</url>
    
    <content type="html"><![CDATA[<h2 id="ubuntu安装hugo"><a href="#ubuntu安装hugo" class="headerlink" title="ubuntu安装hugo"></a>ubuntu安装hugo</h2><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>官网 <a href="https://git-scm.com/download/linux">https://git-scm.com/download/linux</a></p><p>sudo apt-get install git</p><h3 id="安装go"><a href="#安装go" class="headerlink" title="安装go"></a>安装go</h3><p><a href="https://golang.org/dl/">https://golang.org/dl/</a>     （有可能被墙）</p><p>下载go1.15.8.linux-amd64.tar.gz</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> tar -C /usr/local -xzf go<span class="hljs-number">1</span>.<span class="hljs-number">15</span>.<span class="hljs-number">8</span>.linux-amd<span class="hljs-number">64</span>.tar.gz<br></code></pre></td></tr></table></figure><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">export PATH=<span class="hljs-variable">$PATH</span><span class="hljs-symbol">:/usr/local/go/bin</span><br></code></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">go</span> <span class="hljs-keyword">version</span><br></code></pre></td></tr></table></figure><h3 id="下载hugo"><a href="#下载hugo" class="headerlink" title="下载hugo"></a>下载hugo</h3><p><a href="https://github.com/gohugoio/hugo/releases">https://github.com/gohugoio/hugo/releases</a></p><p>下载 hugo_extended_0.80.0_Linux-64bit.deb</p><p>终端输入</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> dpkg -i hugo_extended_<span class="hljs-number">0</span>.<span class="hljs-number">80</span>.<span class="hljs-number">0</span>_Linux-<span class="hljs-number">64</span>bit.deb<br></code></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">hugo <span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><p>创建blog</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hugo <span class="hljs-keyword">new</span> <span class="hljs-type">site</span> blog<br></code></pre></td></tr></table></figure><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>去官网下载主题 <a href="https://themes.gohugo.io/">https://themes.gohugo.io</a></p><p>我下载的是even <a href="https://themes.gohugo.io/hugo-theme-even">https://themes.gohugo.io/hugo-theme-even</a></p><p>再推荐一个主题 <a href="https://github.com/uPagge/uBlogger">https://github.com/uPagge/uBlogger</a></p><p>cd /blog</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/olOwOlo/</span>hugo-theme-even themes/even<br></code></pre></td></tr></table></figure><p>在exampleSite目录找到config.toml和content 复制到D:\blog目录下</p><p>在blog根目录下，终端输入下面代码   </p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">hugo <span class="hljs-params">--theme=even</span> <span class="hljs-params">--baseUrl=</span><span class="hljs-string">&quot;http://waimao365.github.io/&quot;</span> <span class="hljs-params">--buildDrafts</span><br></code></pre></td></tr></table></figure><p>#even改成你的主题</p><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span> <span class="hljs-string">/blog</span><br>hugo<br>hugo server<br></code></pre></td></tr></table></figure><p> <a href="http://localhost:1313/">http://localhost:1313</a></p><h3 id="建立本地和github仓库的连接"><a href="#建立本地和github仓库的连接" class="headerlink" title="建立本地和github仓库的连接"></a>建立本地和github仓库的连接</h3><p>输入github的帐户名和邮箱</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.name</span> <span class="hljs-string">&quot;waimao365&quot;</span><br>git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.email</span> <span class="hljs-string">&quot;88888@qq.com&quot;</span><br></code></pre></td></tr></table></figure><p>查看设置的用户名和密码</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">git <span class="hljs-built_in">config</span> <span class="hljs-comment">--list</span><br></code></pre></td></tr></table></figure><p>生成 SSH key 与 github 联系</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">ssh-keygen -t rsa -C “<span class="hljs-symbol">888888@</span>qq.com”<br></code></pre></td></tr></table></figure><p>一路回车  ubuntu设置显示隐藏文件，在用户目录找到.ssh </p><p>打开id_rsa.pub，复制里面的内容。 然后登录github，如果没有就注册一个账号，登录后右上角 头像 -&gt; Settings —&gt; SSH nd GPG keys —&gt; New SSH key。把公钥(id_rsa.pub)粘贴到 key 中，填好 title 并点击 Add SSH key</p><p>关联完之后可以在终端输入</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">ssh <span class="hljs-symbol">git@</span>github.com<br></code></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="上传到github"><a href="#上传到github" class="headerlink" title="上传到github"></a>上传到github</h3><p> cd到 /public<br>依次输入</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git init<br>git <span class="hljs-builtin-name">add</span> .<br>git commit -m “yyyy/mm/dd-hh:mm”<br>git remote <span class="hljs-builtin-name">add</span> origin git@github.com:waimao365/lubutu18.git<br>git push -u origin master<br></code></pre></td></tr></table></figure><h3 id="自动部署脚本"><a href="#自动部署脚本" class="headerlink" title="自动部署脚本"></a>自动部署脚本</h3><p><a href="https://www.dazhuanlan.com/2019/10/14/5da3e834e0c1d/">https://www.dazhuanlan.com/2019/10/14/5da3e834e0c1d/</a></p><p><a href="https://github.com/coderzh/coderzh-hugo-blog/blob/master/deploy.py">https://github.com/coderzh/coderzh-hugo-blog/blob/master/deploy.py</a></p><h2 id="常见错误处理"><a href="#常见错误处理" class="headerlink" title="常见错误处理"></a>常见错误处理</h2><h3 id="fatal-远程-origin-已经存在"><a href="#fatal-远程-origin-已经存在" class="headerlink" title="fatal: 远程 origin 已经存在"></a>fatal: 远程 origin 已经存在</h3><p>此时只需要将远程配置删除，重新添加即可；</p><p>git remote rm origin</p><h3 id="rejected-master-gt-master-non-fast-forward"><a href="#rejected-master-gt-master-non-fast-forward" class="headerlink" title="! [rejected]        master -&gt; master (non-fast-forward)"></a>! [rejected]        master -&gt; master (non-fast-forward)</h3><p>本地生成ReadMe文件</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git pull --rebase origin <span class="hljs-keyword">master</span> <span class="hljs-title"></span><br><span class="hljs-title">git</span> push origin <span class="hljs-literal">master</span><br></code></pre></td></tr></table></figure><p>如果不行，可以强制上传覆盖远程文件（慎用）</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> -f <span class="hljs-built_in">origin</span> master<br></code></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="安装typora写文章"><a href="#安装typora写文章" class="headerlink" title="安装typora写文章"></a>安装typora写文章</h3><p><a href="https://www.typora.io/#linux">https://www.typora.io/#linux</a></p><h3 id="安装Visual-Studio-Code写文章"><a href="#安装Visual-Studio-Code写文章" class="headerlink" title="安装Visual Studio Code写文章"></a>安装Visual Studio Code写文章</h3><p><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><p><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><p>Visual Studio Code设置中文</p><p>打开进入软件，Ctrl + Shift + P，切入到命令行模式。输入“Configure Language”  </p><h3 id="安装-Notepad-编辑主题文件"><a href="#安装-Notepad-编辑主题文件" class="headerlink" title="安装 Notepad++ 编辑主题文件"></a>安装 Notepad++ 编辑主题文件</h3><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs smali">sudo<span class="hljs-built_in"> add-apt-repository </span>ppa:notepadqq-team/notepadqq<br>sudo apt-get update<br>sudo apt-get install notepadqq<br></code></pre></td></tr></table></figure><p>卸载方法:</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs smali">sudo apt-get remove notepadqq<br>sudo<span class="hljs-built_in"> add-apt-repository </span>--removeppa:notepadqq-team/notepadqq<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hugo</category>
      
      <category>linux</category>
      
      <category>ubuntu</category>
      
      <category>网站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网站</tag>
      
      <tag>hugo</tag>
      
      <tag>linux</tag>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VScode简单教程</title>
    <link href="/posts/28.html"/>
    <url>/posts/28.html</url>
    
    <content type="html"><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="安装Visual-Studio-Code写文章及部署到github"><a href="#安装Visual-Studio-Code写文章及部署到github" class="headerlink" title="安装Visual Studio Code写文章及部署到github"></a>安装Visual Studio Code写文章及部署到github</h2><p>下载地址：   <a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><h3 id="修改成中文"><a href="#修改成中文" class="headerlink" title="修改成中文"></a>修改成中文</h3><p>1）打开vscode工具；</p><p>2）使用快捷键组合【Ctrl+Shift+p】，在搜索框中输入“configure display language”，点击确定后；</p><p>3）修改locale.json文件下的属性“locale”为“zh-CN”;</p><p>4）重启vscode工具；</p><p>打开文件夹 定位到 public目录，点击初始化，会在public生成一个.git的文件夹，点击全部提交</p><p>打开vscode，点击左下角master，</p><p>点击左边第三个按钮，再点三个小点</p><p>勾选源代码管理存储库,点代码库上的三个小点。</p><p>远程，添加远程储存库，从github添加远程储存库</p><p>等待几秒钟，选择你要部署的项目，命名一般用master或者mian</p><p>点击同步就就可以了。</p><p>非常简单吧！</p><p>大家一起测试吧！！！</p><p>谢谢!!!</p>]]></content>
    
    
    <categories>
      
      <category>hugo</category>
      
      <category>linux</category>
      
      <category>VScode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hugo</tag>
      
      <tag>linux</tag>
      
      <tag>VScode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用ssh复制粘贴安装archlinux教程</title>
    <link href="/posts/27.html"/>
    <url>/posts/27.html</url>
    
    <content type="html"><![CDATA[<h2 id="官方安装教程"><a href="#官方安装教程" class="headerlink" title="官方安装教程"></a>官方安装教程</h2><p><a href="https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p><h2 id="手敲键盘部分"><a href="#手敲键盘部分" class="headerlink" title="手敲键盘部分"></a>手敲键盘部分</h2><p>开启SSH</p><p>首先设置root的密码 passwd </p><p>回车之后输入root的密码即可 </p><p>打开sshd </p><p>systemctl start sshd </p><p>查看ip地址</p><p> ip addr</p><p>4、安装工具<br>pacman -Syy<br>pacman -S net-tools openssh</p><p>5、启动 ssh</p><p>systemctl start sshd</p><p>dhcpcd  #网线<br>wifi-menu # wifi<br>ping <a href="http://www.baidu.com/">www.baidu.com</a></p><p>ctrt+c  #退出ping </p><h2 id="复制粘帖部分"><a href="#复制粘帖部分" class="headerlink" title="复制粘帖部分"></a>复制粘帖部分</h2><p>用ssh软件登录</p><p>windows推荐Xshell        linux推荐putty</p><p>登录后就可以复制下面代码敲回车就可以了。</p><h3 id="硬盘分区"><a href="#硬盘分区" class="headerlink" title="硬盘分区"></a>硬盘分区</h3><p>查看磁盘信息  sda   </p><p>fdisk -l  # 查看磁盘信息  我查看的是sda 下面请把sda改成你的就可以了   </p><p>硬盘分区有两种方法，请选一种 cfdisk是图像化的  fdisk是纯命令的<br>#方法一：图像化的操作<br>cfdisk /dev/sda<br>分别用new新建三个分区 分别选择Type 选择类型<br>sda1   512M  EFI system<br>sda3    4G      linux swap      # 不要大于虚拟机实际内存<br>sda2   默认剩余全部 linux filesystem<br>分好后选择Write写入 选择<br>Quit退出  </p><p>#方法二：纯命令的操作</p><p>fdisk /dev/sda<br>输入m #显示菜单<br>输入p #显示硬盘情况<br>输入M 输入g   # 硬盘更改成GPT分区</p><p>输入n # 分区<br>先选择1 回车再回车再输入+512M<br>输入t 输入1  # 可以输入L查看格式<br>输入W<br>输入m<br>输入n输入n # 分区<br>先选择3 回车再回车再输入+4G<br>输入t 输入19<br>输入W<br>输入m<br>输入n输入n # 分区<br>先选择2 回车再回车再回车<br>#剩余目录会自动全部分配到这里<br>sda2无需更改格式 默认是就是linux filesystem<br>输入W<br>最后输入q退出分区<br>下面命令直接打复制粘贴就可以了  sda1，2，3 请改成你自己的 </p><p>#上面是两种硬盘分区教程，随便选一种吧，下面要格式化硬盘<br>fdisk -l  # 查看磁盘信息<br>下面的命令直接打复制粘贴就可以了  sda1，2，3 请改成你自己的 </p><h3 id="挂载并格式化"><a href="#挂载并格式化" class="headerlink" title="挂载并格式化"></a>挂载并格式化</h3><p>mkfs.fat -F32 /dev/sda1<br>mkfs.ext4 /dev/sda2<br>mkswap /dev/sda3<br>swapon /dev/sda3</p><p>挂载根分区到/mnt下    </p><p>mount /dev/sda2 /mnt </p><p>创建 boot 文件夹 来挂载EFI分区</p><p>mkdir /mnt/boot  </p><p>挂载EFI分区到 /mnt/boot 下 </p><p>mount /dev/sda1 /mnt/boot  </p><p>df 查看挂载情况</p><h3 id="编辑软件源"><a href="#编辑软件源" class="headerlink" title="编辑软件源"></a>编辑软件源</h3><p>nano /etc/pacman.d/mirrorlist  #fdisk -k 删除多余的源，fdisk -x 退出 y 回车<br>我选了下面三个，选一个也行<br>             <a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a><br>                         mirrors.tuna.tsinghua.edu.cn<br>Server = <a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch">https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</a><br>Server = <a href="http://mirrors.163.com/archlinux/$repo/os/$arch">http://mirrors.163.com/archlinux/$repo/os/$arch</a><br>Server = <a href="http://mirrors.aliyun.com/archlinux/$repo/os/$arch">http://mirrors.aliyun.com/archlinux/$repo/os/$arch</a></p><p>Server = <a href="https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$repo/os/$arch">https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$repo/os/$arch</a><br>Server = <a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch">https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</a><br>Server = <a href="http://mirrors.163.com/archlinux/$repo/os/$arch">http://mirrors.163.com/archlinux/$repo/os/$arch</a><br>Server = <a href="http://mirrors.163.com/archlinux-cn/$repo/os/$arch">http://mirrors.163.com/archlinux-cn/$repo/os/$arch</a></p><p>更新系统<br>pacman -Syy</p><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><p>安装必须的软件包 （不建议）</p><p>pacstrap /mnt base linux linux-firmware</p><p>安装加强版的软件包 （建议）</p><p>pacstrap /mnt base linux linux-firmware base-devel networkmanager intel-ucode vim git openssh net-tools</p><p>用以下命令生成 fstab 文件 (用 -U 或 -L 选项设置UUID 或卷标)：</p><p>genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</p><p>cat /mnt/etc/fstab<br>检查<br>vim /mnt/etc/fstab</p><h3 id="Change-root-到新安装的系统"><a href="#Change-root-到新安装的系统" class="headerlink" title="Change root 到新安装的系统"></a>Change root 到新安装的系统</h3><p>arch-chroot /mnt</p><p>#设置时区：<br> ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime </p><p>#同步时区<br> hwclock –systohc </p><p>安装vim<br>pacman -S vim</p><p>本地化：</p><p>设置系统语言 </p><p>vim /etc/locale.gen<br>nano /etc/locale.gen </p><p>把 en_US.UTF-8 UTF-8和zh_CN.UTF-8 UTF-8注释都去掉之后 按esc退出编辑模式，然后 :wq 保存退出</p><p>生成一下语言</p><p> locale-gen</p><p>最后设置缺省的语言，这里推荐使用英文，不然到时候进入命令模式的时候会出现中文乱码 </p><p>echo LANG=en_US.UTF-8 &gt;&gt; /etc/locale.conf<br>echo LANG=zh_CN.UTF-8 &gt;&gt; /etc/locale.conf<br>sudo vim /etc/locale.conf</p><p>这里使用一个箭头或者两个箭头都可以</p><p>设置 主机名</p><p>echo archlinux &gt;&gt; /etc/hostname</p><p>#网络配置<br>vim /etc/hosts  #输入下面内容</p><p>127.0.0.1 localhost<br>::1 localhost<br>127.0.1.1 archlinux.localdomain archlinux</p><p>127.0.0.1    localhost    localhost<br>::1          localhost   localhost<br>127.0.1.1    archlinux.localdomain    archlinux</p><p>保存并退出</p><p>安装网络管理（如果不安装这个服务的话，每次开机都得重新设置网络）<br>pacman -S networkmanager<br>pacman -S net-tools openssh<br>开机启动<br>systemctl enable NetworkManager sshd</p><p>设置root密码<br>passwd</p><p>安装一个其他用户<br>useradd -m -g wheel chenan </p><p>passwd chenan</p><p>pacman -S sudo</p><p>visudo   # 去掉%wheel=（ALL）ALL 前面的#号</p><h3 id="安装grub"><a href="#安装grub" class="headerlink" title="安装grub"></a>安装grub</h3><p>重新生成ramdisk环境<br>mkinitcpio -p linux</p><p>pacman -S grub efibootmgr<br>grub-install –target=x86_64-efi –efi-directory=/boot –bootloader-id=GRUB<br>grub-mkconfig -o /boot/grub/grub.cfg</p><p>exit 或按 Ctrl+d 退出 chroot 环境。</p><p>可选用 umount -R /mnt 手动卸载被挂载的分区：这有助于发现任何「繁忙」的分区，并通过 fuser(1) 查找原因。</p><p>最后，通过执行 reboot 重启系统</p><h2 id="再用ssh软件登录，安装桌面和服务"><a href="#再用ssh软件登录，安装桌面和服务" class="headerlink" title="再用ssh软件登录，安装桌面和服务"></a>再用ssh软件登录，安装桌面和服务</h2><h3 id="添加清华源"><a href="#添加清华源" class="headerlink" title="添加清华源"></a>添加清华源</h3><p>sudo vim /etc/pacman.conf<br>把multilib和它下面一行的 # 去掉，具体是把光标移到 # 那，按 x ，然后在文件里添加 archlinuxcn 源，按 i 输入<br>[archlinuxcn]<br>Server = <a href="https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch">https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</a></p><p>sudo pacman -Syu</p><p>sudo pacman -S archlinuxcn-keyring</p><p>sudo pacman -Syyu   #更新到最新系统</p><h3 id="安装x-服务"><a href="#安装x-服务" class="headerlink" title="安装x 服务"></a>安装x 服务</h3><p>sudo pacman -S xorg</p><h3 id="安装桌面环境"><a href="#安装桌面环境" class="headerlink" title="安装桌面环境"></a>安装桌面环境</h3><p>sudo pacman -S xfce4 xfce4-goodies</p><h3 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h3><p>sudo pacman -S ttf-dejavu wqy-bitmapfont wqy-microhei wqy-zenhei noto-fonts noto-fonts-emoji</p><h3 id="安装ligthdm"><a href="#安装ligthdm" class="headerlink" title="安装ligthdm"></a>安装ligthdm</h3><p>pacman -S lightdm lightdm-gtk-greeter</p><p>sudo pacman -S lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings<br>systemctl enable lightdm</p><p>systemctl enable lightdm.service</p><p>从图形界面进入到命令行界面</p><p>systemctl disable lightdm.service<br>从命令行进入到图形界面</p><p>systemctl enable lightdm.service<br>然后</p><p>systemctl start lightdm.service</p><h3 id="测试开启桌面"><a href="#测试开启桌面" class="headerlink" title="测试开启桌面"></a>测试开启桌面</h3><p>sudo systemctl start lightdm.service</p><h3 id="自动开启桌面"><a href="#自动开启桌面" class="headerlink" title="自动开启桌面"></a>自动开启桌面</h3><p>systemctl enable lightdm.service</p><h3 id="安装声卡驱动"><a href="#安装声卡驱动" class="headerlink" title="安装声卡驱动"></a>安装声卡驱动</h3><p>sudo pacman -S alsa-utils pulseaudio-alsa</p><h3 id="虚拟机显卡驱动"><a href="#虚拟机显卡驱动" class="headerlink" title="虚拟机显卡驱动"></a>虚拟机显卡驱动</h3><p>pcaman -S xf86-video-vesa</p><h3 id="安装软件商店"><a href="#安装软件商店" class="headerlink" title="安装软件商店"></a>安装软件商店</h3><p>sudo pacman -S pamac</p><h3 id="安装yay"><a href="#安装yay" class="headerlink" title="安装yay"></a>安装yay</h3><p>sudo pacman -S yay<br>sudo pacman -S pcaman</p><h3 id="英文改中文"><a href="#英文改中文" class="headerlink" title="英文改中文"></a>英文改中文</h3><p>sudo vim /etc/locale.conf<br>LANG=en_US.UTF-8  改成 LANG=zh_CN.UTF-8</p><h3 id="按照官网教程安装VMware-Tools"><a href="#按照官网教程安装VMware-Tools" class="headerlink" title="按照官网教程安装VMware Tools"></a>按照官网教程安装VMware Tools</h3><p><a href="https://wiki.archlinux.org/index.php/VMware/Install_Arch_Linux_as_a_guest">https://wiki.archlinux.org/index.php/VMware/Install_Arch_Linux_as_a_guest</a></p><p>sudo pacman -S xf86-input-vmmouse xf86-video-vmware mesa</p><p>sudo pacman -S open-vm-tools gtkmm3</p><p>sudo systemctl start vmtoolsd.service</p><p>sudo systemctl enable vmtoolsd.service</p><p>sudo systemctl start vmware-vmblock-fuse.service</p><p>sudo systemctl enable vmware-vmblock-fuse.service</p><p>sudo pacman -S gtkmm gtk2</p><p>sudo vim /etc/mkinitcpio.conf<br>MODULES=(）前面加# 下一行加上下面的代码<br>MODULES=(vsock vmw_vsock_vmci_transport vmw_balloon vmw_vmci vmwgfx)</p><h3 id="Xorg设置"><a href="#Xorg设置" class="headerlink" title="Xorg设置"></a>Xorg设置</h3><p>pacman -S xf86-input-vmmouse xf86-video-vmware mesa<br>yay -S xf86-input-vmmouse xf86-video-vmware mesa</p><p>vim /etc/X11/Xwrapper.config</p><p>needs_root_rights=yes</p><h3 id="安装小企鹅"><a href="#安装小企鹅" class="headerlink" title="安装小企鹅"></a>安装小企鹅</h3><p>sudo pacman -S fcitx fcitx-im fcitx-configtool</p><p>sudo pacman -S fcitx fcitx-im</p><h3 id="配置小企鹅输入法"><a href="#配置小企鹅输入法" class="headerlink" title="配置小企鹅输入法"></a>配置小企鹅输入法</h3><p>sudo vim ~/.xprofile</p><p>在文件中加入如下几行配置：</p><p>#fcitx<br>export LC_ALL=zh_CN.UTF-8<br>export GTK_IM_MODULE=fcitx<br>export QT_IM_MODULE=fcitx<br>export XMODIFIERS=”@im=fcitx”</p><h3 id="安装搜狗输入法"><a href="#安装搜狗输入法" class="headerlink" title="安装搜狗输入法"></a>安装搜狗输入法</h3><p>sudo pacman -S yay<br>yay -S fcitx-sogoupinyin<br>yay -S fcitx-qt4</p><p>从AUR下载安装包并安装<br>打开<a href="https://aur.archlinux.org/">https://aur.archlinux.org/</a><br><a href="https://aur.archlinux.org/packages/deepin.com.qq.im.light/">https://aur.archlinux.org/packages/deepin.com.qq.im.light/</a><br>解压<br>tar -zxvf deepin.com.qq.im.light.tar.gz<br>在解压后的目录输入<br>makepkg -s<br>编译完成后会生成一个.pkg.tar.xz的文件,再用pacman -U执行本地安装<br>pacman -U deepin.com.qq.im.light-7.9.14308deepin8-4-x86_64.pkg.tar.zst</p><p>tar -zxvf  deepin-wine-wechat.tar.gz</p><p>pacman -U deepin.com.qq.im.light.tar.gz</p><h3 id="谷歌输入法"><a href="#谷歌输入法" class="headerlink" title="谷歌输入法"></a>谷歌输入法</h3><p>sudo pacman -S fcitx-googlepinyin</p><h3 id="常用软件安装"><a href="#常用软件安装" class="headerlink" title="常用软件安装"></a>常用软件安装</h3><p>wps</p><p><a href="https://linux.wps.cn/">https://linux.wps.cn/</a><br>yay -S wps-office<br>安装中文<br>yay -S wps-office-mui-zh-cn</p><p>可以到软件商店设置里面开启AUR<br>找到wps-office-mui-zh-cn 点击构建  耐心等待几分钟，安装后 新建一个文档<br>右上角有个A字，点击，就可以选择中文，重启WPS 就是中文的了</p><p>yaourt -S deepin.com.qq.im</p><p>yaourt -S deepin-wine deepin-wine32</p><p>wps 依赖字体</p><p>sudo pacman -S ttf-wps-fonts</p><p>google-chrome<br>sudo pacman -S google-chrome</p><p>Markdown编辑器<br>sudo pacman -S typora</p><p>网易云音乐<br>sudo pacman -S netease-cloud-music<br>yaourt -S netease-cloud-music</p><p><a href="https://www.bilibili.com/video/BV14J411i72o?from=search&amp;seid=10908065740456618903">https://www.bilibili.com/video/BV14J411i72o?from=search&amp;seid=10908065740456618903</a><br><a href="https://github.com/xylzq/arch">https://github.com/xylzq/arch</a></p><h3 id="关于arch的一些实用软件"><a href="#关于arch的一些实用软件" class="headerlink" title="关于arch的一些实用软件"></a>关于arch的一些实用软件</h3><p>1.录屏软件</p><p>sudo pacman -S simplescreenrecorder<br>2.显示按键软件</p><p>sudo pacman -S screenkey<br>3.剪辑视频软件</p><p>sudo pacman -S kdenlive<br>汉化<br>sudo mv kdenlive.mo /usr/share/locale/zh_CN/LC_MESSAGES/</p><p>pan.baidu.com/s/1dFF8kp<br>4.修图软件</p><p>sudo pacman -S gimp</p><p>安装坚果云<br>sudo pacman -S nutstore</p><p>安装微信<br>sudo pacman -S electronic-wechat</p><p>安装<br>sudo pacman -S yaourt</p><p>网盘同步Rclone<br>sudo pacman -S rclone</p><p>gitkraken -Git管理工具</p><p>sudo pacman -S gitkraken<br>Vscode:visual-studio-code-bin<br>yay -S visual-studio-code-bin</p><p>Virtualbox<br>sudo pacman -S virtualbox </p><p>aur qq<br><a href="https://aur.archlinux.org/packages/deepin.com.qq.im.light/">https://aur.archlinux.org/packages/deepin.com.qq.im.light/</a></p><p><a href="https://github.com/orangbus/tool">https://github.com/orangbus/tool</a></p><p>画图软件 KRITA</p><p>安装AppImage软件<br>添加可执行权限<br>chmod a+x <em>.AppImage<br>执行它！<br>./</em>.AppImage</p><p>chmod a+x Qv2ray.v2.7.0-pre1.linux-x64.AppImage<br>./Qv2ray.v2.7.0-pre1.linux-x64.AppImage</p><h3 id="一个将deb包转换成pkg包的软件"><a href="#一个将deb包转换成pkg包的软件" class="headerlink" title="一个将deb包转换成pkg包的软件"></a>一个将deb包转换成pkg包的软件</h3><p>debtap配置安装<br>sudo pacman -S pkgfile<br>git clone <a href="https://github.com/helixarch/debtap">https://github.com/helixarch/debtap</a><br>cd debtap<br> sudo cp debtap /usr/local/bin<br> sudo debtap -u  </p><p>sudo vim /usr/bin/debtap</p><p>使用方法<br>   sudo debtap xxxx.deb</p><p>安装时会提示输入包名，以及license。包名随意，license就填GPL</p><p>安装转换好的本地包<br>   sudo pacman -U xxx.tar.xz</p><p>sudo debtap wps-office_11.1.0.9719_amd64.deb</p><p>sudo pacman -U wps-office-11.1.0.9719-1-x86_64.pkg.tar.zst</p><p>sudo debtap Tenvideo_universal_1.0.10_amd64.deb</p><p>sudo pacman -U tenvideo-universal-1.0.10-1-x86_64.pkg.tar.zst</p><h3 id="安装安卓模拟器xDroid"><a href="#安装安卓模拟器xDroid" class="headerlink" title="安装安卓模拟器xDroid"></a>安装安卓模拟器xDroid</h3><p><a href="https://www.linzhuotech.com/">https://www.linzhuotech.com/</a></p><p>系统更新<br>sudo pacman -Syu </p>]]></content>
    
    
    <categories>
      
      <category>archlinux</category>
      
      <category>linux</category>
      
      <category>电脑系统</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>电脑系统</tag>
      
      <tag>archlinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2分钟规则</title>
    <link href="/pages/baaa02/"/>
    <url>/pages/baaa02/</url>
    
    <content type="html"><![CDATA[<p>每当你发现很难开始执行某项任务时，可以试试将其缩减成2分钟的版本。</p><ul><li>看一本书 → 看一页书</li><li>写一篇文章 → 写一句话</li><li>跑10公里 → 穿上跑鞋</li><li>做100次俯卧撑 → 做1次俯卧撑</li><li>多吃蔬菜水果 → 吃一个水果</li><li>编写一个程序 → 编写一个函数 → 编写一行代码</li></ul><span id="more"></span><p>这样做的目的是使上手变得超级容易，让你先上手再说。一旦开始做了（这可能是最艰难的一步），你就会开始有动力，可能会继续做下去。</p><ul><li>阅读一页 → 阅读10页 → 读完第一章</li><li>写一个句子 → 写文章的开头 → 写出正文</li><li>穿上跑鞋 → 步行5分钟 → 跑步5分钟</li></ul><p>一旦开始，继续做下去就会容易得多。有时，你甚至会发现，自己在不知不觉间已经完成了任务。</p><blockquote><p>本文摘录自 <a href="https://hoanhan.co/2-minute-rule">https://hoanhan.co/2-minute-rule</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>更多</category>
      
      <category>实用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实用技巧</tag>
      
      <tag>文摘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>反向拆解让人上瘾的套路，找回自律</title>
    <link href="/pages/d6d331/"/>
    <url>/pages/d6d331/</url>
    
    <content type="html"><![CDATA[<h1 id="反向拆解让人上瘾的套路，找回自律"><a href="#反向拆解让人上瘾的套路，找回自律" class="headerlink" title="反向拆解让人上瘾的套路，找回自律"></a>反向拆解让人上瘾的套路，找回自律</h1><p>当你打开手机准备学习或者查个资料的时候，很有可能不知不觉的就脱离的正规… 某某app发来通知：xx明星官宣啦、xx手游重磅上线，一起开启修仙之旅吧！ xx结衣发布新番-4k画质&amp;AR体验、99+未读信息、支付宝到账100万元…. 你心想，就看一会，就一会儿… 不知不觉两三个小时过去了，你开始焦躁、后悔、自责。第二天，你又掉进相同的坑里。你可能会纳闷，为什么我的自制力这么差？为什么对某件事欲罢不能？</p><span id="more"></span><p>::: theorem 《欲罢不能》<br>数字时代比人类历史上的任何时代都更容易上瘾…Facebook、Instagram、网络色情、网购在下钩… 问题不出在人缺乏意志力上，而在于“屏幕那边有数千人在努力工作，为的就是破坏你的自律”<br>::: right<br>来自《欲罢不能-刷屏时代如何摆脱行为上瘾》一书<br>:::</p><p>我们正在被一个算法和娱乐所包裹的电子’海洛因’中却不自知，想要摆脱这些上瘾行为，第一步就是反向拆解那些让我们上瘾的产品的套路。《欲罢不能》书中总结了六个让人上瘾的钩子：</p><h3 id="1-诱人的目标"><a href="#1-诱人的目标" class="headerlink" title="1.诱人的目标"></a>1.诱人的目标</h3><ul><li>色情片</li><li>游戏中成为”王者”、层出不穷的高颜值皮肤…</li><li> …</li></ul><h3 id="2-无法抵挡无法预知的积极反馈"><a href="#2-无法抵挡无法预知的积极反馈" class="headerlink" title="2.无法抵挡无法预知的积极反馈"></a>2.无法抵挡无法预知的积极反馈</h3><ul><li>社交中的点赞功能</li><li>某音十几秒一条的视频，不需要你动脑就可以轻轻松松获得哈哈大笑的快感，有时候还有一种我学习到了的感觉，你永远猜不到下一条将会出现什么惊喜。你刷的越多算法就越精准，越知道你的情绪G点在哪里，你就越容易被俘获。</li><li>直播中的打赏被主播表示的感谢和送上的’么么哒’</li><li>…</li></ul><h3 id="3-渐进式的进步和改善的感觉"><a href="#3-渐进式的进步和改善的感觉" class="headerlink" title="3.渐进式的进步和改善的感觉"></a>3.渐进式的进步和改善的感觉</h3><ul><li><p>游戏中的升级策略</p></li><li><p>…</p></li></ul><h3 id="4-随着时间的推移越来越困难的任务"><a href="#4-随着时间的推移越来越困难的任务" class="headerlink" title="4.随着时间的推移越来越困难的任务"></a>4.随着时间的推移越来越困难的任务</h3><ul><li>游戏中的升级策略</li><li> …</li></ul><h3 id="5-需要解决却又暂未解决的紧张感"><a href="#5-需要解决却又暂未解决的紧张感" class="headerlink" title="5.需要解决却又暂未解决的紧张感"></a>5.需要解决却又暂未解决的紧张感</h3><ul><li>电影或电视剧结尾有意制造的一个悬念，给你一种未完成的紧张感，你迫切想知道后面会发生什么</li><li> …</li></ul><h3 id="6-强大的社会联系"><a href="#6-强大的社会联系" class="headerlink" title="6.强大的社会联系"></a>6.强大的社会联系</h3><ul><li><p>与队友相约开黑</p></li><li><p>游戏中能彰显地位、财富、能力等的装备（如：吃鸡游戏中的玛莎拉蒂皮肤）</p></li><li><p> …</p></li></ul><h2 id="找回自律，收获积极而长久的快乐"><a href="#找回自律，收获积极而长久的快乐" class="headerlink" title="找回自律，收获积极而长久的快乐"></a>找回自律，收获积极而长久的快乐</h2><p>获得快乐的方式，你可以选择沉迷在你的手机里刷视频、打游戏、煲剧，毫不费力的收货大把的快乐。你还可以选择一条更难的路：<strong>选择自律、选择延迟满足、选择会让你不那么舒服的努力和成长</strong>。</p><p>收获快乐的方式没有绝对的对与错，但是，如果快乐触手可及，这种廉价的快乐也就不值得珍惜，随时都可能抛弃。过后还可能让你浪费了大把时间，该做的正事没有完成，你感觉空虚、焦躁、自责… 既然如此，我们一起选择那条更难的路吧！</p><p>::: tip 上瘾的案例收集</p><p>想想你生活中让你上瘾的案例，对照上面让人上瘾的钩子，看看是哪个钩子吧~~欢迎留言哦~</p><p>:::</p>]]></content>
    
    
    <categories>
      
      <category>更多</category>
      
      <category>心情杂货</category>
      
    </categories>
    
    
    <tags>
      
      <tag>心理</tag>
      
      <tag>自律</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>笔记方法</title>
    <link href="/pages/e60c81/"/>
    <url>/pages/e60c81/</url>
    
    <content type="html"><![CDATA[<p>::: center</p><h2 id="康奈尔笔记法"><a href="#康奈尔笔记法" class="headerlink" title="康奈尔笔记法"></a>康奈尔笔记法</h2><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200716105752.jpg"></p><h2 id="思维导图法"><a href="#思维导图法" class="headerlink" title="思维导图法"></a>思维导图法</h2><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200716105747.jpg"></p><h2 id="金三角笔记法"><a href="#金三角笔记法" class="headerlink" title="金三角笔记法"></a>金三角笔记法</h2><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200716105753.jpg"></p><h2 id="曼陀罗九宫格笔记法"><a href="#曼陀罗九宫格笔记法" class="headerlink" title="曼陀罗九宫格笔记法"></a>曼陀罗九宫格笔记法</h2><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200716105748.jpg"></p><h2 id="记号记录法"><a href="#记号记录法" class="headerlink" title="记号记录法"></a>记号记录法</h2><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200716105749.jpg"></p><h2 id="六色笔记法"><a href="#六色笔记法" class="headerlink" title="六色笔记法"></a>六色笔记法</h2><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200716105750.jpg"></p><h2 id="加工笔记法"><a href="#加工笔记法" class="headerlink" title="加工笔记法"></a>加工笔记法</h2><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200716105751.jpg"></p><h2 id="整理笔记要点1-科学标记重点"><a href="#整理笔记要点1-科学标记重点" class="headerlink" title="整理笔记要点1-科学标记重点"></a>整理笔记要点1-科学标记重点</h2><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200716105746.jpg"></p><h2 id="整理笔记要点2-修改不涂改"><a href="#整理笔记要点2-修改不涂改" class="headerlink" title="整理笔记要点2-修改不涂改"></a>整理笔记要点2-修改不涂改</h2><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200716105745.jpg"></p><p>:::</p>]]></content>
    
    
    <categories>
      
      <category>更多</category>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记方法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>费曼学习法</title>
    <link href="/pages/f2a556/"/>
    <url>/pages/f2a556/</url>
    
    <content type="html"><![CDATA[<p>费曼学习法，我很喜欢的一个学习方法，简单来说，就是：通过向别人清楚的解说某一件事或是写一篇浅显易懂的教程文章，来确认自己是否真正弄懂了这件事。<br>可以说是在通过向别讲解过程中来对自身的 <strong>查缺补漏</strong>。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>费曼学习法分为4个步骤:</p><ol><li><strong>确定学习目标</strong></li></ol><p>你想学习的概念、内容、主题是什么。</p><ol start="2"><li><strong>模拟教学学习法</strong></li></ol><p>你要模拟自己是一位老师，面对完全不懂这个领域的人，用自己的话，尽可能具体形象地讲诉。这样的讲诉有助于你活学活用，触类旁通，联系生活具体情境。</p><ol start="3"><li><strong>回顾</strong></li></ol><p>反思第2步遇到的问题，哪些地方卡壳了，哪些地方对方没有真正听懂。找出问题的要害，把握关键环节。</p><ol start="4"><li><strong>简化</strong></li></ol><p>把这些遇到问题的地方，重新梳理理解，尽可能了解更多背景和相关知识，再用尽可能简化的方式重新表达，设法看穿本质。然后，返回第2步。</p><blockquote><p>参考：</p><p><a href="https://zhuanlan.zhihu.com/p/88209825">《费曼学习法：为何被称为史上最牛的学习法，它的本质究竟是什么？》</a></p><p><a href="https://www.jianshu.com/p/90be6a69528a">《费曼学习法》</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>更多</category>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习方法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>n1终极玩法Armbian-5.77安装docker宝塔openwrt和HomeAssistant</title>
    <link href="/posts/23.html"/>
    <url>/posts/23.html</url>
    
    <content type="html"><![CDATA[<h1 id="安装Armbian-5-77"><a href="#安装Armbian-5-77" class="headerlink" title="安装Armbian-5.77"></a>安装Armbian-5.77</h1><p><a href="https://www.right.com.cn/forum/thread-510423-1-1.html">https://www.right.com.cn/forum/thread-510423-1-1.html</a>  </p><h2 id="下载Armbian-5-77写入U盘"><a href="#下载Armbian-5-77写入U盘" class="headerlink" title="下载Armbian-5.77写入U盘"></a>下载Armbian-5.77写入U盘</h2><h2 id="替换低负载的dtb"><a href="#替换低负载的dtb" class="headerlink" title="替换低负载的dtb"></a>替换低负载的dtb</h2><p>meson-gxl-s905d-phicomm-n1-xiangsm.dtb  </p><h2 id="开启bbr"><a href="#开启bbr" class="headerlink" title="开启bbr"></a>开启bbr</h2><p>在/etc/sysctl.conf末尾添加下面两行:<br>net.core.default_qdisc=fq<br>net.ipv4.tcp_congestion_control=bbr<br>然后执行<br>sudo sysctl -p  </p><h2 id="写入emmc"><a href="#写入emmc" class="headerlink" title="写入emmc"></a>写入emmc</h2><p>./install.sh  </p><h2 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h2><p>如果有外国IP就不用更换源了<br>sudo nano /etc/apt/sources.list</p><p>修改源为国内源<br>deb <a href="http://mirrors.tuna.tsinghua.edu.cndebian/">http://mirrors.tuna.tsinghua.edu.cndebian</a> stretch main contrib non-free<br>deb <a href="http://mirrors.tuna.tsinghua.edu.cn/debian">http://mirrors.tuna.tsinghua.edu.cn/debian</a> stretch-updates main contrib non-free<br>deb <a href="http://mirrors.tuna.tsinghua.edu.cn/debian-security">http://mirrors.tuna.tsinghua.edu.cn/debian-security</a> stretch/updates main contrib non-free<br>deb <a href="http://mirrors.tuna.tsinghua.edu.cn/debian">http://mirrors.tuna.tsinghua.edu.cn/debian</a> stretch-backports main  </p><p>保存后，更新源<br>执行 apt-get update 命令即可更新源<br>执行 apt-get upgrade 更新软件  </p><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>输入 armbian-config<br>选择Software，回车确认 接着选择Softy，回车确认 最后选择docker，空格勾选，回车确认开始安装<br>然后，按tab键，选择OK，回车确认 最后等docker程序自动安装完成  </p><h2 id="docker安装portainer"><a href="#docker安装portainer" class="headerlink" title="docker安装portainer"></a>docker安装portainer</h2><p>docker pull portainer/portainer<br>docker run -d -p 9888:9000 -v /var/run/docker.sock:/var/run/docker.sock –restart=always –name prtainer portainer/portainer<br>如果遇到安装失败一般都是源的问题，换IP可以解决  </p><h2 id="挂载docker数据到数据盘"><a href="#挂载docker数据到数据盘" class="headerlink" title="挂载docker数据到数据盘"></a>挂载docker数据到数据盘</h2><p>考虑到N1只有6G可用储存，我们可以将dockers安装到数据盘，接入U盘或者硬盘，输入<br>df -i，比如查询硬盘为  /dev/sda1<br>将硬盘挂载到mnt （其他目录也可以）<br>输入mount /dev/sda1 /mnt<br>输入 blkid /dev/sda1 查询 得到数据<br>UUID=”a78e3c99-2754-034e-abd1-36后面省略<br>输入命令开机自动挂载<br>echo ‘UUID=a78e3c99-2754-034e-abd1-36后面省略 /mnt ext4 defaults 0 0’ &gt;&gt; /etc/fstab<br>输入 mount -a<br>检查是否挂载好  df -h<br>备份docker数据<br>cp -r /var/lib/docker_data /var/lib/docker<br>移动docker数据到硬盘<br>mv /var/lib/docker /mnt/docker<br>把硬盘的目录发送到N1<br>ln -s /mnt/docker /var/lib/docker</p><h2 id="docker安装openwrt"><a href="#docker安装openwrt" class="headerlink" title="docker安装openwrt"></a>docker安装openwrt</h2><p>docker pull unifreq/openwrt-aarch64:r20.04.08<br>ip link set eth0 promisc on<br>modprobe pppoe<br>docker network create -d macvlan –subnet=192.168.123.0/24 –gateway=192.168.123.1 -o parent=eth0 macnet<br>docker run –restart always -d –network macnet –privileged –ip=192.168.123.2 unifreq/openwrt-aarch64:r20.04.08 /sbin/init<br>大家根据自己的实际IP改下代码<br>再登录portainer管理页面，点container<br>vi /etc/config/network<br>按i改网关信息，op的ip要改成跟主路由同网关，比如192.168.123.2或者192.168.123.3，改好后依次按返回键，:wq保存退出。再点disconnect，在containers那勾选op 点restart重启op。 (部分op需手动复制粘贴以下两条<br>192.168.2.1改成你主路由ip。不复制进去就登陆不了op<br>option gateway ‘192.168.123.1’<br>option dns ‘114.114.114.114 223.5.5.5’<br>另外再教大家安装下载好的openwrt<br>导入本地编译好的rootfs.tar.gz并部署<br>随便导入一个文件夹  cd /到这个文件夹<br>docker import openwrt-armvirt-64-default-rootfs.tar.gz openwrt:R9.9.15<br>再输入<br>docker run –restart always -d –network macnet –privileged –ip=192.168.123.5 openwrt:R9.9.15 /sbin/init<br>vi /etc/config/network<br>设置网关为192.168.123.5<br>重启openwrt 输入192.168.123.5 就可以登陆了<br>默认的账号root 密码password  </p><h1 id="安装Home-Assistant"><a href="#安装Home-Assistant" class="headerlink" title="安装Home Assistant"></a>安装Home Assistant</h1><p>docker run -d –restart=always –name=”home-assistant” -e TZ=Asia/Shanghai -v /var/lib/docker/homeassistant:/config -p 8123:8123 -v /etc/localtime:/etc/localtime:ro –net=host homeassistant/aarch64-homeassistant:0.88.1</p><p>  具体参考另一篇文章<br>  <a href="https://163168.xyz/posts/6.html">https://163168.xyz/posts/6.html</a></p><h1 id="安装宝塔搭建网站"><a href="#安装宝塔搭建网站" class="headerlink" title="安装宝塔搭建网站"></a>安装宝塔搭建网站</h1><p>安装过程直接看这里<br><a href="https://hub.docker.com/r/startwish/n1-bt-lnmp">https://hub.docker.com/r/startwish/n1-bt-lnmp</a></p><p>默认的信息<br>宝塔面板登录页面是</p><p>你的IP:8888/startwish<br>账号startwish</p><p>密码startwish</p><p>系统root账户的密码是startwish<br>可以通过宝塔搭建自己的网站了！！！</p>]]></content>
    
    
    <categories>
      
      <category>N1</category>
      
      <category>docker</category>
      
      <category>宝塔</category>
      
      <category>openwrt</category>
      
      <category>Home Assistant</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>N1</tag>
      
      <tag>宝塔</tag>
      
      <tag>openwrt</tag>
      
      <tag>Home Assistant</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hugo搭建和使用教程</title>
    <link href="/posts/22.html"/>
    <url>/posts/22.html</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  做博客就图个稳定，一次性买了10年的域名，搭配免费的github，适合做长期博客。<br>  之前安装的hexo，可玩性非常强，前面文章有写一些关于hexo的安装使用教程，用了一年多，也发现了一些问题，hexo版本更新各种不兼容，访问速度慢，，很影响心情，自己都懒得搭理博客了，国内cdn加速需要备案，只是做个小站，不想太麻烦。<br>  所幸，无意中发现荒野无灯大神把站转移到hugo，访问速度非常快，于是自己马上搭建了一个，打开文章页面基本上是秒开，之前hexo打开文章大约要5-6秒，用不同设备，不同网络测试很多次，hugo博客的访问速度要快4倍以上。并且文章越多，hugo的优势就越明显，为避免以后迁移麻烦，所以赶紧把博客迁到了hugo。主题也是我喜欢的，非常简洁。<br>  下面开始教程吧！！！</p><h1 id="安装hugo"><a href="#安装hugo" class="headerlink" title="安装hugo"></a>安装hugo</h1><p>下载hugo <a href="https://gohugo.io/">https://gohugo.io</a><br>解压到任意目录，比如D:\hugo\bin<br>将Hugo添加到Windows的环境变量 PATH中<br>系统变量和用户变量都添加D:\hugo\bin<br>下载Git <a href="https://git-scm.com/">https://git-scm.com</a>  并安装<br>下载Go语言开发环境 <a href="https://golang.org/dl">https://golang.org/dl</a>  并安装<br>打开Git Bash 输入 hugo version 出现hugo static site generator相关信息表示安装完成<br>打开D盘 右键点击 git bash here<br>输入hugo new site blog</p><h1 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h1><p>去官网下载主题  <a href="https://themes.gohugo.io/">https://themes.gohugo.io</a><br>我下载的是even  <a href="https://themes.gohugo.io/hugo-theme-even">https://themes.gohugo.io/hugo-theme-even</a><br>cd /blog<br>git clone <a href="https://github.com/olOwOlo/hugo-theme-even">https://github.com/olOwOlo/hugo-theme-even</a> themes/even<br>安装好后 打开D:\blog\themes\even\exampleSite<br>找到config.toml和content 复制到D:\blog目录下<br>输入<br>hugo –theme=even –baseUrl=”ch0769.github.io” –buildDrafts<br> #even改成你的主题 ch0769.github.io也改成你的网址<br> 出现 public 文件夹  cd /public<br> 依次输入<br> git init<br> git add .<br> git commit -m “yyyy/mm/dd-hh:mm”<br> git remote add origin <a href="https://github.com/ch0769/ch0769.github.io.git">https://github.com/ch0769/ch0769.github.io.git</a><br> git push -u origin master</p><p>cd /blog<br>hugo<br>hugo server<br>可以本地预览了 <a href="http://localhost:1313/">http://localhost:1313</a></p><h1 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h1><p>hugo new post\hugo搭建和使用教程.md<br>会在D:\blog\content\post  hugo搭建和使用教程.md<br>可以下载Visual Studio Code编辑和修改文章，记得换行前要先打两个空格，再按回车键。 </p><h1 id="hugo使用教程"><a href="#hugo使用教程" class="headerlink" title="hugo使用教程"></a>hugo使用教程</h1><h2 id="添加固定链接"><a href="#添加固定链接" class="headerlink" title="添加固定链接"></a>添加固定链接</h2><p>这篇教程的加法参考如下<br>title: hugo搭建和使用教程<br>date: 2020-06-01 15:55:32<br>url: /hugodajian.html<br>（hugodajian 可以改成数字或者任意字母）</p><h2 id="写文章后部署"><a href="#写文章后部署" class="headerlink" title="写文章后部署"></a>写文章后部署</h2><p>在blog目录输入hugo<br>在blog/public目录依次输入<br>git add .<br>git commit -m “yyyy/mm/dd-hh:mm”<br>git push -u origin master  </p><h2 id="Netlify-自动编译部署生成-Web-网站"><a href="#Netlify-自动编译部署生成-Web-网站" class="headerlink" title="Netlify 自动编译部署生成 Web 网站"></a>Netlify 自动编译部署生成 Web 网站</h2><p>官方首页：<a href="https://www.netlify.com/">https://www.netlify.com</a>  </p><h2 id="快速在Netlify建立Jekyll、Hexo、Hugo静态博客"><a href="#快速在Netlify建立Jekyll、Hexo、Hugo静态博客" class="headerlink" title="快速在Netlify建立Jekyll、Hexo、Hugo静态博客"></a>快速在Netlify建立Jekyll、Hexo、Hugo静态博客</h2><p>网站首页：<a href="https://www.staticgen.com/">https://www.staticgen.com/</a><br>教程可以看这里 <a href="https://kuleyu.github.io/hexolog/post/31808.html">https://kuleyu.github.io/hexolog/post/31808.html</a>   </p><h2 id="写文章日期格式"><a href="#写文章日期格式" class="headerlink" title="写文章日期格式"></a>写文章日期格式</h2><p>date: 2020-06-01 15:55:32  </p><h2 id="从hexo导入文章到hugo的固定链接设置"><a href="#从hexo导入文章到hugo的固定链接设置" class="headerlink" title="从hexo导入文章到hugo的固定链接设置"></a>从hexo导入文章到hugo的固定链接设置</h2><p>hexo设置 permalink: posts/:abbrlink.html<br>文章页面设置 abbrlink: 1   （每篇文章加一个数）<br>hugo固定链接设置<br>文章里面的<br>abbrlink: 1<br>改成<br>url: /posts/1.html<br>域名从hexo解析到hugo后，固定链接是不变的<br>也可以不用阿拉伯数字，随便输入其他字母也是可以的，这个看个人喜欢了。  </p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>绑域名非常简单，大家可以翻我前面的教程。<br>这里发现一个问题<br>绑定域名后<br>输入  git push -u origin master  出现错误如下<br>git上传文件出错[rejected] master -&gt; master (fetch first) error: failed to push some refs to<br>这个是因为github中的README.md文件不在本地代码目录中，可以通过如下命令进行代码合并<br>git pull –rebase origin master<br>再输入<br>git push origin master<br>就可以了。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网站</tag>
      
      <tag>hugo</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue资源</title>
    <link href="/pages/12df8ace52d493f6"/>
    <url>/pages/12df8ace52d493f6</url>
    
    <content type="html"><![CDATA[<h1 id="vue资源"><a href="#vue资源" class="headerlink" title="vue资源"></a>vue资源</h1><h2 id="官方资源"><a href="#官方资源" class="headerlink" title="官方资源"></a>官方资源</h2><ul><li><a href="http://vuejs.org/guide/">官方指南</a></li><li><a href="http://vuejs.org/api/">API 参考</a></li><li><a href="https://github.com/vuejs/vue">GitHub 回购</a></li><li><a href="https://github.com/vuejs/vue/releases">发行说明</a></li><li><a href="https://vuejs.org/v2/style-guide/">样式指南</a></li><li><a href="https://news.vuejs.org/">Vue.js 新闻</a></li></ul><h2 id="外部资源"><a href="#外部资源" class="headerlink" title="外部资源"></a>外部资源</h2><ul><li><a href="https://gist.github.com/hashrock/f575928d0e109ace9ad0">vue.js 资料まとめ(日语)</a>by @hashrock</li><li><a href="http://vue-newsletter.com/">Vue.js 新闻稿</a>-每周精选的 Vue.js 新闻的剂量</li><li><a href="http://vuetips.com/">Vue.js 提示</a>-成为更好的 Vue.js 开发人员的提示</li><li><a href="https://en.wikipedia.org/wiki/Vue.js">Vue.js Wikipedia</a></li><li><a href="https://www.vuejsradar.com/">Vue.js Radar</a>-精选的新闻通讯和网站，涵盖了新的 Vue.js 版本/贡献。</li><li><a href="https://vuenews.io/">Vue 新闻</a>-专注于最新 Vue.js 新闻和信息的社交网站。</li><li><a href="https://hackr.io/tutorials/learn-vue-js">Vue 精选资源</a>-推荐的 Vue.js 课程和教程。</li><li><a href="https://builtforvue.com/">BuiltForVue</a>-所有 Vue.js 组件和软件包的 NPM 镜像。</li><li><a href="https://vueschool.io/">Vue School</a>-通过核心成员和行业专家的视频课程学习 Vue.js</li><li><a href="https://vuedose.tips/">VueDose</a>。有关忙碌的开发人员的 Vue 生态系统的提示和技巧。</li><li><a href="https://vuelibs.org/">Vuelibs</a>。基于 awesome-vue 存储库的 Vue.js 库和组件的简约列表。</li></ul><h2 id="工作门户"><a href="#工作门户" class="headerlink" title="工作门户"></a>工作门户</h2><ul><li><a href="https://vuejobs.com/">Vue.js 职位-VueJobs</a>-一个 Vue.js 职位门户，可为您所有的 Vue.js 职位招聘或录用。</li><li><a href="https://github.com/sudheerj/vuejs-interview-questions">Vue.js 面试问题</a>-300 个 VueJS 面试问题和答案列表</li></ul><h2 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h2><ul><li><a href="https://twitter.com/vuejs">Twitter</a></li><li><a href="http://forum.vuejs.org/">官方论坛</a></li><li><a href="https://github.com/vuejs/vue-requests">vue-requests</a>-请求您希望存在的 Vue.js 模块或获取有关模块的想法</li></ul><h2 id="会议"><a href="#会议" class="headerlink" title="会议"></a>会议</h2><ul><li><a href="http://conf.vuejs.org/">VueConf</a></li><li><a href="http://vuejs.london/">Vue.js 伦敦</a></li><li><a href="http://vueconf.us/">VueConf US</a></li><li><a href="https://vuetoronto.com/">VueConf 多伦多</a></li></ul><h2 id="播客"><a href="#播客" class="headerlink" title="播客"></a>播客</h2><ul><li><a href="http://www.fullstackradio.com/30">Full Stack Radio＃30(11-23-2015)</a></li><li><a href="https://devchat.tv/js-jabber/187-jsj-vue-js-with-evan-you">JavaScript Jabber＃187(11-25-2015)</a></li><li><a href="https://changelog.com/184/">Changelog＃184(11-27-2015)</a></li><li><a href="http://softwareengineeringdaily.com/2015/12/29/front-end-javascript-with-evan-you/">软件工程日报(2015 年 12 月 29 日)</a></li><li><a href="https://javascriptair.com/episodes/2016-03-30/">JavaScript Air 016(2016 年 3 月 30 日)</a></li><li>[Codecasts＃2-Falando Sobre Vuejs e Web Components(2016-08-19)<a href="https://soundcloud.com/codecasts/2-falando-sobre-vuejs-e-web-components">pt-BR]</a></li><li><a href="http://www.fullstackradio.com/50">Full Stack Radio＃50(09-21-2016)</a></li><li>[和 Vue.js 框架的作者聊聊前端框架开发背后的故事<a href="http://teahour.fm/2015/08/16/vuejs-creator-evan-you.html">zh-CN]</a></li><li><a href="https://modernweb.podbean.com/e/mw-s04e09-evan-yu-sarah-drasner/">MW S04E08-Vue.js 与 Evan You 和 Sarah Drasner(04-27-2017)</a></li><li><a href="https://changelog.com/rfc/12">提交请求＃12-众筹开源(Vue.js)(06-15-2017)</a></li><li><a href="http://thewebplatformpodcast.com/132-vuejs">The Web Platform Podcast 132：Vue.js(07-27-2017)</a></li><li><a href="https://devchat.tv/js-jabber/jsj-276-vue-js-maximilian-schwarzmuller">带有 MaximilianSchwarzmüller 的 JavaScript Jabber＃276(08-29-2017)</a></li><li><a href="https://softwareengineeringdaily.com/2017/12/01/animating-vuejs-with-sarah-drasner/">使用 Sarah Drasner 动画 VueJS(软件工程日报 01-12-2017)</a></li><li><a href="https://devchat.tv/views-on-vue">Vue 观看次数(Vue 每周播客开始于 2018 年 3 月 6 日)</a></li><li><a href="https://news.vuejs.org/">官方 Vue.js 新闻播客</a></li><li><a href="https://qit.cloud/search/vue">通过 QIT 技术播客索引器播出的 Vue 播客列表</a></li><li><a href="https://devnaestrada.com.br/2018/01/05/vale-pena-vuejs.html">DNE 138-Vale a pena VueJS 吗？(01-05-2018)</a></li><li><a href="https://cynicaldeveloper.com/podcast/99/">Cynical Developer＃99(10-15-2018)</a></li><li><a href="https://syntax.fm/show/130/the-vuejs-show-scott-teaches-wes">语法＃130(03-27-2019)</a></li></ul><h2 id="Youtube-渠道"><a href="#Youtube-渠道" class="headerlink" title="Youtube 渠道"></a>Youtube 渠道</h2><ul><li><a href="https://www.youtube.com/vuenyc">VueNYC</a></li><li><a href="https://www.youtube.com/channel/UC9dJjbYeXjirDYYVfUD3bSw">VueConf 欧盟</a></li></ul><h2 id="官方例子"><a href="#官方例子" class="headerlink" title="官方例子"></a>官方例子</h2><ul><li><a href="http://vuejs.org/guide/">基本示例</a></li><li><a href="https://github.com/vuejs/vue/tree/dev/examples/todomvc">Vue.js TodoMVC</a></li><li><a href="https://github.com/anfelor/TodoMVC-CoffeeScript-and-Vue.js">CoffeeScript 版本</a></li><li><a href="https://github.com/vuejs/vue-hackernews">Vue.js HackerNews Clone</a></li><li><a href="https://github.com/vuejs/vue-hackernews-2.0">Vue.js 2.0 HackerNews Clone</a></li></ul><h2 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h2><ul><li><a href="https://laracasts.com/series/learn-vue-2-step-by-step">Vue.js 屏幕录像</a>关于 Laracasts -Auth0 博客上的<a href="https://auth0.com/blog/vuejs2-authentication-tutorial/">Vuejs 2 身份验证教程</a></li><li>[Scotch.io 上的<a href="https://scotch.io/tutorials/create-a-github-file-explorer-using-vue-js">使用 Vue.js 创建 GitHub File Explorer</a></li><li><a href="http://vegibit.com/vue-js-tutorial/">Vue.js 教程</a>关于 Vegibit</li><li><a href="http://skyronic.com/2015/12/28/vue-project-scratch/">Vue.js 使用 webpack，vue-loader 和热重装从零开始构建设置</a></li><li><a href="http://skyronic.com/2016/01/03/vuex-basics-tutorial/">Vuex 基础：教程和说明</a></li><li><a href="https://www.youtube.com/watch?v=l1KHL-TX3qs">Vuex 简介视频-来自伦敦 Vue.js 聚会＃1 的 James Browne</a> -Laravist 上的<a href="https://laravist.com/series/vue-js-1-0-in-action-series">Vue.js 中文系列视频教程</a></li><li>[craigmckenna.com 上的<a href="http://craigmckenna.com/develop-a-reactive-invoice-app-using-vue-js/">使用 Vue.js 开发反应式发票应用程序</a></li><li><a href="https://www.youtube.com/watch?v=TGSJjDahlrQ">带有葡萄牙语的 Laravel 和 Vue.js 的混合应用示例</a>，作者@vedovelli -oguzhan.in 上的<a href="http://oguzhan.in/vue-js-ile-uygulama-gelistirme/">Vue.js 土耳其语简介</a></li><li><a href="https://www.youtube.com/watch?v=IlFk3cyRB0Y&list=PLM-Y_YQmMEqD2EWfWpSbiV3WgShRRW3FE&index=7">Vue.js 西班牙语视频教学系列(3-8-2016)</a>在 YouTube 上由 JuanAndrésNúñez 制作</li><li>[Stude.net 上的<a href="https://styde.net/curso-de-vue-js/">Vue.js 西班牙语电视广播系列</a> -bhnddowinf 上的<a href="https://github.com/bhnddowinf/vuejs-learn">讲解 Vue.js 官网中文-含代码，百度云，youtube</a></li><li>[Pusher 上的<a href="https://blog.pusher.com/exploring-real-time-apps-with-vuejs-es2016-and-webpack/">使用 VueJS，ES2015 和 Webpack 探索实时应用]</a> -sekolahkoding.com 上的<a href="https://www.sekolahkoding.com/track/belajar-vue-js">印尼语中的 Vue.js</a></li><li><a href="https://www.youtube.com/playlist?list=PL5r0NkdgM0UOxb4Hl81FV5UIgexwTf8h7">.dev 中来自 Scratch 系列的 Vue.js 俄语</a></li><li>[Flask，RethinkDB，Vue.js，ч。<a href="http://codeguida.com/post/526/">СтвореннясервісудлязберіганняфайлівзFlask。1</a>乌克兰</li><li><a href="https://www.youtube.com/playlist?list=PLjwdMgw5TTLW-mAtlR46VajrKs4dep3y0">VueJS 2 法语教程</a>Françaispar Grafikart</li><li><a href="https://github.com/jayway/vue-js-workshop">Jayway Vue.js 2 研讨会。使用 vue-router，vuex 和 vue-resource 构建一个电子商务站点</a></li><li><a href="http://wijmo.com/blog/how-to-create-great-vuejs-applications-using-wijmo-controls/">如何使用 Wijmo 控件创建出色的 VueJS 应用程序</a> -bhnddowinf 上的<a href="https://github.com/bhnddowinf/vuejs2-learn">讲解 Vue.js 2 官网中文-含代码，百度云，youtube</a></li><li><a href="https://www.gitbook.com/book/xpepermint/vue-js-cheatsheet/details">Vue.js 备忘单：服务器端应用程序，路由器，Vuex 存储，GraphQL 等</a>由<a href="https://twitter.com/kristijansedlak">@xpepermint</a></li><li><a href="https://www.theodo.fr/blog/2016/10/medium-like-image-loading-with-vue-js/">使用 Vue.js 加载类似图片的媒体</a></li><li>[Metric Loop]上的<a href="https://metricloop.com/blog/how-to-use-vuex-in-a-laravel-spark-project">如何在 Laravel Spark 项目中使用 Vuex</a> /metricloop.com/blog)</li><li>[Metric Loop]上的<a href="https://metricloop.com/blog/how-to-set-up-set-up-modules-in-vuex">如何在 Vuex 中设置模块</a>(<a href="https://metricloop.com/blog">https://metricloop.com/blog</a> ) -关于 Laracasts 的<a href="https://laracasts.com/series/learn-vue-2-step-by-step">学习 Vue 2：循序渐进</a></li><li><a href="http://javascript.ctolib.com/docs/read/vue-js-c-index.html">Vue.js 中文教程</a></li><li><a href="https://www.sitepoint.com/up-and-running-vue-js-2-0/">在 Vue.js 2.0 框架上启动和运行</a>在 SitePoint 上</li><li>[Metric Loop]上的<a href="https://metricloop.com/blog/how-to-make-api-calls-with-vuex">如何使用 Vuex 进行 API 调用</a>(<a href="https://metricloop.com/blog">https://metricloop.com/blog</a> )</li><li>[度量循环](https：// metricloop)上的<a href="https://metricloop.com/blog/how-to-use-vuex-to-build-a-feature">如何使用 Vuex 构建功能</a>。 com / blog) -DevMarketer 在 YouTube 上发布了<a href="https://www.youtube.com/playlist?list=PLwAKR305CRO_1yAao-8aZiQnBqJeyng4O">Vue.js 2.0 基础知识</a></li><li>[无知的 Vuex-Vue 的应用程序数据存储上缺少的入门手册](<a href="https://medium.com/js-dojo/vuex-for-the-clueless-the-missing-primer-on-vues-application-data">https://medium.com/js-dojo/vuex-for-the-clueless-the-missing-primer-on-vues-application-data</a> -store-33fa51ffc3af＃.2j25xpfui)</li><li><a href="https://www.youtube.com/watch?v=Jxefsv5Zqkw&t=3s">实时网格组件 Laravel，Vue.js，Vuex 和 Socket.io</a></li><li><a href="https://www.udemy.com/vuejs-2-the-complete-guide">VueJS 2-完整指南(包括 Vuex)-Udemy 教程</a></li><li><a href="https://egghead.io/courses/develop-web-apps-with-vue-js">在<a href="https://egghead.io/">egghead.io</a>上使用 Vue.js 开发 Web 应用</a></li><li><a href="https://www.youtube.com/playlist?list=PL55RiY5tL51p-YU-Uw90qQH419BM4Iz07">Vue.js 2-入门</a></li><li><a href="https://www.youtube.com/playlist?list=PL55RiY5tL51pT0DNJraU93FhMzhXxtDAo">Vue.js 2 和 Vuex(基本)</a></li><li><a href="http://fatihacet.com/">Fatih Acet</a>在 YouTube 上的<a href="https://www.youtube.com/playlist?list=PLa3NvhdFWNipwk1KXeUpVQnAiAfuBw4El">TürkçeVueJSEğitimVideoları</a></li><li>[通过六个步骤从头开始在 Vue.js 中构建 JSON 树视图组件](<a href="https://devblog.digimondo.io/building-a-json-tree-view-component-in-vue-js-from-scratch">https://devblog.digimondo.io/building-a-json-tree-view-component-in-vue-js-from-scratch</a> -由<a href="https://www.twitter.com/arvidkahldev">Arvid Kahl</a>在<a href="https://devblog.digimondo.io/">digimondo devblog</a>上的-in-six-steps-ce0c05c2fdd8＃.738ok0l4p)</li><li><a href="https://youtu.be/7pmw5gvWAf8">Vue！-Illya Klymov 在 YouTube 上的 OpenLecture 2017.01 俄语</a>(<a href="https://github.com/xanf/">@xanf</a>)</li><li><a href="https://twro.xn--com[vue-clivue-g76vmusk12rb72hux8dd8fjv2aeo9a.xn--js]-7v2fya4975ahfh/">@afropolymath</a>(<a href="https://afropolymath.svbtle.com/bootstrapping-your-first-vue-js-project/)%E3%80%82">https://afropolymath.svbtle.com/bootstrapping-your-first-vue-js-project/)。</a> com / afropolymath)</li><li>[@分离]的<a href="https://github.com/Detachment/Build-vue-hackernews-2.0-from-scratch">从头开始构建 vue-hackernews-2.0</a>(<a href="https://github.com/Detachment">https://github.com/Detachment</a>)</li><li>[使用 vue-kindergarten 为您的 Vue.js 和 Nuxt.js 应用程序提供基于角色的授权](<a href="https://medium.com/@JiriChara/role-based-authorization-for-your-vue-js-and-nuxt-">https://medium.com/@JiriChara/role-based-authorization-for-your-vue-js-and-nuxt-</a> js 应用程序使用 vue 幼儿园-fd483e013ec5＃.kp81np177)</li><li><a href="http://matthiashager.com/complete-vuejs-application-tutorial">完整的 Vue.js 应用程序教程-使用 Vue 创建简单的预算应用程序</a>，作者为<a href="https://github.com/matthiaswh">@matthiaswh</a></li><li><a href="https://snipcart.com/blog/vuejs-tutorial-seo-example">Vue.js 教程：经过渲染的 SEO 友好示例</a></li><li>[Vue.js 简介，供仅了解足够的 jQuery 的人使用](<a href="https://medium.com/@mattrothenberg/vue-js-introduction-for-people-who-know-just-enough-jquery-to">https://medium.com/@mattrothenberg/vue-js-introduction-for-people-who-know-just-enough-jquery-to</a> -通过 eab5aa193d77 获取)</li><li><a href="https://www.sitepoint.com/fetching-data-third-party-api-vue-axios/">使用 Vue.js 和 Axios 从第三方 API 获取数据</a></li><li><a href="https://www.packtpub.com/web-development/fun-projects-vue-2-video">Vue 2 的趣味项目(视频)</a>，作者：Packt 的 Peter van Meijgaard。(2017 年 4 月)</li><li>[Vue JS：同时运行 Express 和 Webpack Dev Server](Henrik Fogelberg)在媒体上的(<a href="https://medium.com/dailyjs/vue-js-simultanelyly-running-express-and-webpack-dev-server-292f4a7ed7a3">https://medium.com/dailyjs/vue-js-simultanelyly-running-express-and-webpack-dev-server-292f4a7ed7a3</a>)</li><li>[The Net Ninja]在 YouTube 上发布了<a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9gQcYgjhBoeQH7wiAyZNrYa">Vue JS 2 教程</a>(<a href="https://www.thenetninja.co.uk/">https://www.thenetninja.co.uk</a>)</li><li><a href="https://www.storyblok.com/tp/add-a-headless-CMS-to-vuejs-in-5%E5%88%86%E9%92%9F">在 5 分钟内将无头 CMS 添加到 VueJ 中</a></li><li><a href="https://github.com/dengwanc/dengwanc.github.io/issues/11">vue 架构中的观察者</a></li><li><a href="http://tutorialzine.com/2016/08/building-your-first-app-with-vue-js/">使用 Vue.js 构建您的第一个应用</a></li><li><a href="http://tutorialzine.com/2016/03/5-practical-examples-for-learning-vue-js/">5 个学习 Vue.js 的实用示例</a></li><li>[@jesalg]的<a href="https://jes.al/2017/05/migrating-from-knockoutjs-to-vuejs/">从 KnockoutJS 迁移至 VueJS</a>(<a href="https://twitter.com/jesalg">https://twitter.com/jesalg</a>)</li><li><a href="https://medium.com/@rap2h/create-a-quiz-with-vue-js-ed1e8e0e8294">通过 Vue.js 创建测验</a>由[@ rap2h](<a href="https://twitter.com/">https://twitter.com/</a> rap2h)</li><li>[@chadcampbell]的<a href="https://ecofic.com/courses/vue-getting-started/">Vue.js：入门</a>(<a href="https://twitter.com/chadcampbell">https://twitter.com/chadcampbell</a>)</li><li><a href="https://www.youtube.com/watch?v=we4zuQIXmnw">Vue.js 2 和 Firebase-构建实时单页 Web 应用程序</a></li><li><a href="https://www.youtube.com/watch?v=p-7Zi9xYt2M">Vue.js 2 和 Vue 资源-具有外部 API 访问权限的实际应用程序</a></li><li><a href="https://scrimba.com/playlist/playlist-38">面向初学者的 Vue.js 交互式屏幕录像</a></li><li>[AliGÖREN]在 YouTube 上发布的<a href="https://www.youtube.com/watch?v=uC5b2VDATDU">Vue.JS ile NASAAPI’ınıKullanarak VeriÇekme</a>(<a href="https://aligoren.com/">https://aligoren.com</a>)</li><li><a href="https://www.packtpub.com/web-development/web-development-vuejs-2-video">使用 Vue.js 2 进行 Web 开发(视频)</a>，作者是 Packt 的 Olga Filipova。(2017 年 6 月)</li><li><a href="https://blog.pusher.com/build-realtime-chart-with-vuejs-pusher/">使用 VueJS 和 Pusher 建立实时图表</a></li><li><a href="https://github.com/sdras/intro-to-vue">Vue 简介，前端大师课程的回购</a></li><li><a href="https://css-tricks.com/guides/vue/">关于 CSS 技巧的 Vue 指南</a></li><li><a href="https://medium.com/coding-blocks/using-typescript-in-your-vue-app-c4aba0bbc8bc">在您的 VueJS 应用中使用打字稿</a> -关于 nodelover 的<a href="http://nodelover.me/courses">Vue.js 视频系列，免费，入门，实战</a> -ninghao.net 上的<a href="https://ninghao.net/course/4256">Vue.js 预览</a></li><li>[@chadcampbell]的<a href="https://www.ecofic.com/about/blog/vue-dev-machine-setup/">Vue.js：开发机器设置</a>(<a href="https://twitter.com/chadcampbell">https://twitter.com/chadcampbell</a>)</li><li><a href="https://www.liquidlight.co.uk/blog/article/building-a-vue-v2-js-app-using-vue-router/">使用 Vue-router 构建 Vue v2 JS 应用</a> <a href="https://twitter.com/mikestreety">@mikestreety</a></li><li>[@Atom_Hernandez][<a href="https://medium.com/@davidatomhernandez/how-to-a-simple-carousel-with-vue-138715d615d7)%E5%88%B6%E4%BD%9C%E8%87%AA%E5%B7%B1%E7%9A%84%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC]">https://medium.com/@davidatomhernandez/how-to-a-simple-carousel-with-vue-138715d615d7)制作自己的旋转木马]</a>(<a href="https://twitter.com/">https://twitter.com</a> / Atom_Hernandez)</li><li>[使用官方 Vue 测试工具和 Jest 对 Vue.js 组件进行单元测试](<a href="https://alexjoverm.github.io/series/Unit-Testing-Vue-js-Components-with-the-Official-Vue-Testing-">https://alexjoverm.github.io/series/Unit-Testing-Vue-js-Components-with-the-Official-Vue-Testing-</a> <a href="https://twitter.com/alexjoverm">@alexjoverm</a>的 Tools-and-Jest /)</li><li>[<a href="https://snipcart.com/blog/vuejs-transitions-animations">创建 Vue.js 过渡和动画：实时示例</a>，作者为<a href="https://twitter.com/UdyUXDev">@udyuxdev</a></li><li><a href="https://alligator.io/vuejs/creating-custom-plugins/">创建自定义 Vue.js 插件</a></li><li><a href="https://medium.com/js-dojo/async-in-vue-js-part-1-28d96f751a2e">VueJS 第 1 部分中的异步</a></li><li><a href="https://medium.com/js-dojo/async-in-vuejs-part-2-45e81c836e38">VueJS 第 2 部分中的异步</a></li><li>[@mikestreety]<a href="https://www.mikestreety.co.uk/blog/vue-js-using-localstorage-with-the-vuex-store)%E4%BD%BF%E7%94%A8[%E4%B8%8D%E5%B8%A6%E6%8F%92%E4%BB%B6%E7%9A%84">https://www.mikestreety.co.uk/blog/vue-js-using-localstorage-with-the-vuex-store)使用[不带插件的</a> Vuex 存储使用 localStorage] //twitter.com/mikestreety)</li><li>[@mikestreety]的<a href="https://www.youtube.com/watch?v=ESg0k2zdME4">使用道具通过 Vue Router 访问组件内的 URL 参数</a>(@mikestreety)(<a href="https://twitter.com/mikestreety">https://twitter.com/mikestreety</a>)</li><li>[使用 Pm2 和 Nginx 在生产中部署 Vue.js — SSR(Vuetify)](<a href="https://medium.com/@kamerk22/deploy-vue-js-ssr-vuetify-on-production-with-pm2-and-">https://medium.com/@kamerk22/deploy-vue-js-ssr-vuetify-on-production-with-pm2-and-</a> nginx-ec7b5c0748a3)</li><li><a href="https://laracasts.com/series/testing-vue">laracast</a>上的<a href="http://testingvue.com/">Testing Vue Components</a></li><li>[[CodyLSeibert]的[<a href="https://www.youtube.com/watch?v=Fa4cRMaTDUI&t=">使用 Vue.js 和 Express.js 构建全栈 Web 应用]</a>(<a href="https://twitter.com/CodyLSeibert">https://twitter.com/CodyLSeibert</a> )</li><li><a href="https://www.packtpub.com/application-development/vuejs-2-recipes-video">Vue.js 2 条食谱(视频)</a>，由 Packt 的 Peter van Meijgaard 撰写。(2017 年 9 月)</li><li>[Sabe.io]上的<a href="https://sabe.io/tutorials/getting-started-with-vue-js">Vue.js 入门</a>(<a href="https://sabe.io/">https://sabe.io/</a>)</li><li><a href="https://chu1204505056.gitee.io/byui-bookmarks/awesome/Peter">使用 Vue 2 构建您的第一个高级 CRUD 应用程序(视频)</a>(<a href="https://www.packtpub.com/web-development/building-your-first-advanced-crud-application-vue-2-video)%E8%8C%83%C2%B7%E8%BF%88%E5%8A%A0%E5%BE%B7">https://www.packtpub.com/web-development/building-your-first-advanced-crud-application-vue-2-video)范·迈加德</a>(Pack Meitgaard)(2017 年 7 月)</li><li><a href="https://joshua1988.github.io/web-development/vuejs/vuejs-tutorial-for-beginner/">프론트엔드Vue.js입문서</a></li><li>[Inflearn]上的<a href="https://www.inflearn.com/course/vue-pwa-vue-js-%EA%B8%B0%EB%B3%B8/">누구나다루기쉬운Vue.js(视频)</a> ](<a href="https://www.inflearn.com/)%EF%BC%8C%E7%94%B1[Captain">https://www.inflearn.com/)，由[Captain</a> Pangyo](<a href="https://joshua1988.github.io/">https://joshua1988.github.io/</a>)</li><li><a href="https://snipcart.com/blog/vuejs-blog-demo#tutorial">在 2 小时内建立一个 Vue.js 博客顶部</a>在<a href="https://snipcart.com/">Snipcart</a></li><li>[Sales Bhatnagar <a href="https://www.twitter.com/sachinbee">@sachinbee</a>的<a href="https://www.udemy.com/getting-started-with-vue-js">VueJS 2 入门</a> <a href="https://udemy.com/">Udemy</a></li><li>[Sabe.io]上的<a href="https://sabe.io/tutorials/getting-started-with-vuex">Vuex 入门：在 Vue.js 中管理状态</a>(<a href="https://sabe.io/">https://sabe.io/</a>)</li><li>[Sergii Stotskyi 的<a href="https://medium.com/@sergiy.stotskiy/vue-acl-with-casl-781a374b987a">使用 CASL 的 Vue2 ACL]</a></li><li>[简化 JavaScript 选择-Angular 诉 React 诉 Vue(视频)](<a href="https://www.packtpub.com/application-development/javascript-choice-made-easy-%E2%80%93-angular-">https://www.packtpub.com/application-development/javascript-choice-made-easy-%E2%80%93-angular-</a> v-react-v-vue-video)，Packt 的 Daniel Kmak。(2017 年 11 月) -Storyblok 博客上的<a href="https://www.storyblok.com/tp/how-to-auth0-vuejs-authentication">使用 Auth0 的 Vuejs 2.5+身份验证教程</a></li><li><a href="https://graphcms.com/docs/getting-started/beginners_guide_with_vue/">带有 Vue 的 GraphCMS 初学者指南</a>在 GraphCMS 上</li><li><a href="https://github.com/Microsoft/vscode-recipes/tree/master/vuejs-cli">在 Chrome 和 VS Code 中调试 Vue.js</a>此食谱展示了如何将 Debugger for Chrome 扩展程序与 VS Code 一起使用调试由 Vue CLI 生成的 Vue.js 应用程序。</li><li>[Packet Sachin Bhatnagar 的<a href="https://www.packtpub.com/web-development/getting-started-vue-js-2-video">Vue JS 2 入门(视频)</a>。(2018 年 1 月)</li><li><a href="https://hackernoon.com/building-a-movie-app-interface-with-vue-js-cdc8aeb5db0b">使用 Vue.js 构建电影应用界面</a>，作者是 Hassan Djirdeh，[@ djirdehh](https： //twitter.com/djirdehh)</li><li><a href="https://hackernoon.com/lets-build-a-custom-vue-js-router-7de634be87c4">让我们建立一个自定义的 Vue.js 路由器</a>，作者：Hassan Djirdeh，[@djirdehh](https：// twitter .com / djirdehh)</li><li><a href="https://medium.com/@BjornKrols/getting-started-with-vue-webpack-4-babel-edd3e577421e">由 Vue，Webpack 4 和 Babel 入门</a>，作者是 Bjorn Krols，[@ KrolsBjorn](https ：//twitter.com/KrolsBjorn)</li><li><a href="https://medium.com/@BjornKrols/integrating-and-customising-bootstrap-4-in-vue-js-cbc29ba7688e">如何将 Bootstrap 4 添加到您的 Vue 项目</a>，作者：Bjorn Krols，<a href="https://twitter.com/KrolsBjorn">@ KrolsBjorn</a></li><li>[如何将语义 UI 添加到您的 Vue 项目中](作者：Bjorn Krols，<a href="https://codeburst.io/how-to-add-semantic-ui-to-your-vue-project-cc8c4783a673">@KrolsBjorn</a>( <a href="https://twitter.com/KrolsBjorn">https://twitter.com/KrolsBjorn</a>)</li><li>[Bjorn Krols 的<a href="https://codeburst.io/tutorial-how-to-add-eslint-to-your-vue-js-project-ccfb84fab9">如何将 ESLint 添加到您的 Vue 项目</a>，<a href="https://twitter.com/KrolsBjorn">@KrolsBjorn</a></li><li><a href="https://chu1204505056.gitee.io/byui-bookmarks/awesome/Bjorn">如何通过 Vue 中的 URL 查询参数使内容动态化</a>(<a href="https://medium.com/@BjornKrols/tutorial-dynamic-content-via-url-query-parameters-in-vue-js-d2df19b66633">https://medium.com/@BjornKrols/tutorial-dynamic-content-via-url-query-parameters-in-vue-js-d2df19b66633</a>) Krols，<a href="https://twitter.com/KrolsBjorn">@KrolsBjorn</a></li><li><a href="https://medium.com/@BjornKrols/how-to-enable-history-mode-for-aws-s3-hosted-vue-applications-3bf40d51d9a7">如何为 AWS S3 托管的 Vue 应用程序启用历史记录模式</a>作者：Bjorn Krols，<a href="https://twitter.com/KrolsBjorn">@KrolsBjorn</a></li><li>[Bjorn Krols 的<a href="https://medium.com/@BjornKrols/a-basic-introduction-to-debugging-vue-applications-using-breakpoints-2ef76ce419f2">使用断点调试 Vue 应用程序的基本介绍</a>，<a href="https://twitter.com/KrolsBjorn">@ KrolsBjorn</a></li><li><a href="https://snipcart.com/blog/vuejs-ecommerce-headless-buttercms">使用 ButterCMS 无头后端构建 Vue.Js 电子商务应用程序</a></li><li><a href="https://vueschool.io/">MASTER VUE.JS</a></li><li><a href="https://pusher.com/tutorials/voting-app-go-vuejs">使用 Go 和 Vue.js 构建投票应用程序</a></li><li><a href="https://pusher.com/tutorials/collaborative-painting-vuejs">使用 Vue.js 构建协作绘画应用程序</a></li><li><a href="https://pusher.com/tutorials/realtime-payment-dashboard-stripe">使用 Stripe 构建实时付款信息中心</a></li><li><a href="https://pusher.com/tutorials/cryptocurrency-tracker-vue">使用 Vue.js 构建加密货币跟踪器</a></li><li><a href="https://pusher.com/tutorials/design-feedback-vuejs">使用 Vue.js 构建设计反馈应用程序</a></li><li><a href="https://testdriven.io/developing-a-single-page-app-with-flask-and-vuejs">使用 Flask 和 Vue.js 开发单页应用</a></li><li><a href="https://testdriven.io/accepting-payments-with-stripe-vuejs-and-flask">使用 Stripe，Vue.js 和 Flask 接受付款</a></li><li>[serverlarup.net 上的<a href="https://serversideup.net/courses/api-driven-development-laravel-vuejs/">使用 Laravel 和 VueJS 进行 API 驱动的开发(免费课程)</a></li><li><a href="https://medium.com/fullstackio/managing-state-in-vue-js-23a0352b1c87">在 Vue.js 中管理状态</a>，作者：哈桑·吉尔德(Hassan Djirdeh)，<a href="https://twitter.com/djirdehh">@djirdehh</a></li><li><a href="https://www.packtpub.com/web-development/real-world-projects-vuejs-video">由 Vue.js 制作的真实世界项目</a>，由 Packt 的 Daniel Khalil 撰写。(2018 年 8 月)</li><li>[Heartbeat(Vue + NW.js 视频系列)]<a href="https://goo.gl/8p3msR)%EF%BC%8C%E4%BD%9C%E8%80%85%EF%BC%9A@@">https://goo.gl/8p3msR)，作者：@@</a> ackzell(<a href="https://github.com/ackzell)(2017-2018)">https://github.com/ackzell)(2017-2018)</a></li><li><a href="https://www.youtube.com/watch?v=ZYUWsjUxxUQ">带有 Nuxt.js 的 Firebase 服务器端渲染 Vue 应用程序(带有 JavaScript 框架的服务器端渲染)</a></li><li><a href="https://www.youtube.com/watch?v=Y5XX2lruhxs">Firebase 使用 Nuxt.js(使用 JavaScript 框架的服务器端渲染)测量 Vue SSR 性能)</a></li><li><a href="https://dev.to/denisinvader/creating-an-interactive-map-with-d3-and-vue-4158">使用 D3 和 Vue 创建交互式地图</a>(2018 年 10 月)</li><li><a href="https://blog.lichter.io/posts/the-guide-to-write-universal-ssr-ready-vue-compon">编写通用的，支持 SSR 的 Vue 组件的指南</a></li><li>[Vue School]的<a href="https://vueschool.io/courses/vuejs-fundamentals">Vue.js 基础知识</a>(<a href="https://vueschool.io/">https://vueschool.io</a>)</li><li><a href="https://vueschool.io/courses/vuex-for-everyone">Vuex for Everyone</a>由<a href="https://vueschool.io/">Vue School</a></li><li>[Vue School]的<a href="https://vueschool.io/courses/vuejs-form-validation">Vue.js 表单验证</a>(<a href="https://vueschool.io/">https://vueschool.io</a>)</li><li>[Vue School]的<a href="https://vueschool.io/courses/the-vuejs-master-class">Vue.js 大师班</a>(<a href="https://vueschool.io/">https://vueschool.io</a>)</li><li>[Vue School]的<a href="https://vueschool.io/courses/vuejs-firebase-realtime-database">Vue.js Firebase 实时数据库</a>(<a href="https://vueschool.io/">https://vueschool.io</a>)</li><li>[Vue School]的<a href="https://vueschool.io/courses/vuejs-firebase-authentication">Vue.js Firebase 身份验证</a>(<a href="https://vueschool.io/">https://vueschool.io</a>)</li><li>[Vue School]的<a href="https://vueschool.io/courses/dynamic-forms-vuejs">带有 Vue.js 的动态表单</a>(<a href="https://vueschool.io/">https://vueschool.io</a>)</li><li>[Vue School]的<a href="https://vueschool.io/courses/custom-vuejs-directives">Custom Vue.js Directives</a>(<a href="https://vueschool.io/">https://vueschool.io</a>)</li><li><a href="https://www.packtpub.com/application-development/vuejs-application-development-essentials-video">Vue.js 应用程序开发要点</a>，作者是 Packt 的 BartłomiejPotaczek。(2018 年 10 月)</li><li><a href="https://www.packtpub.com/application-development/troubleshooting-vuejs-video">对 Vue.js 进行故障排除</a>，作者：克里斯蒂安·赫尔(Packet Hur)，帕特。(2018 年 10 月)</li><li><a href="https://www.packtpub.com/application-development/nuxtjs-vuejs-steroids-video">Nuxt.js-类固醇上的 Vue.js</a>，作者：MaximilianSchwarzmüller，Packt。(2018 年 10 月)</li><li><a href="https://medium.com/quasar-framework/building-an-electron-file-explorer-with-quasar-and-vue-7bf94f1bbf6">使用 Quasar(和 Vue)构建电子文件资源管理器</a>，作者：@@ hawkeye64](<a href="https://github.com/hawkeye64)%E3%80%82">https://github.com/hawkeye64)。</a>(2018 年 11 月)</li><li>[Udemy]上的<a href="https://www.udemy.com/build-web-apps-with-vuejs-firebase/learn/v4/overview">使用 Vue JS 2 和 Firebase 构建 Web 应用程序</a>(https：// [The Net Ninja]的 <a href="http://www.udemy.com/)(https://www.thenetninja.co.uk/)">www.udemy.com/)(https://www.thenetninja.co.uk/)</a></li><li>[Udemy]上的<a href="https://www.udemy.com/vuejs-2-the-complete-guide/learn/v4/overview">Vue JS 2-完整指南(包括 Vue Router 和 Vuex)</a>( <a href="https://www.udemy.com/)%EF%BC%8CMaximilianSchwarzm%C3%BCller">https://www.udemy.com/)，MaximilianSchwarzmüller</a></li><li>[使用 Vue.js，Vuex，Vuetify 和 Firebase 的 SPA 应用程序(第 1 部分)](<a href="https://www.jenniferbland.com/spa-application-using-vue-js-vuex-vuetify-and-firebase-part">https://www.jenniferbland.com/spa-application-using-vue-js-vuex-vuetify-and-firebase-part</a> -1 /)由 Jennifer Bland <a href="https://github.com/ratracegrad">@ratracegrad</a>。(2018 年 11 月)</li><li>[使用 Vue.js，Vuex，Vuetify 和 Firebase 的 SPA 应用程序(第 2 部分)](<a href="https://www.jenniferbland.com/spa-application-using-vue-js-vuex-vuetify-and-firebase-part">https://www.jenniferbland.com/spa-application-using-vue-js-vuex-vuetify-and-firebase-part</a> -2 /)由 Jennifer Bland <a href="https://github.com/ratracegrad">@ratracegrad</a>。(2018 年 11 月)</li><li>[使用 Vue.js，Vuex，Vuetify 和 Firebase 的 SPA 应用程序(第 3 部分)](<a href="https://www.jenniferbland.com/spa-application-using-vue-js-vuex-vuetify-and-firebase-part">https://www.jenniferbland.com/spa-application-using-vue-js-vuex-vuetify-and-firebase-part</a> -3 /)由 Jennifer Bland <a href="https://github.com/ratracegrad">@ratracegrad</a>。(2018 年 11 月)</li><li>[使用 Vue.js，Vuex，Vuetify 和 Firebase 的 SPA 应用程序(第 4 部分)](<a href="https://www.jenniferbland.com/spa-application-using-vue-js-vuex-vuetify-and-firebase-part">https://www.jenniferbland.com/spa-application-using-vue-js-vuex-vuetify-and-firebase-part</a> -4 /)，作者是 Jennifer Bland <a href="https://github.com/ratracegrad">@ratracegrad</a>。(2018 年 11 月)</li><li>[詹妮弗·布兰德(Jennifer Bland)<a href="https://github.com/ratracegrad">@ratracegrad</a>将<a href="https://www.jenniferbland.com/adding-internationalization-to-a-vue-application/">国际化添加到 Vue 应用程序</a> )。(2018 年 11 月)</li><li><a href="https://www.packtpub.com/web-development/practical-projects-vue-js-2-video">由 Vue JS 2 编写的实用项目</a>，作者是 Packt 的 Jack Herrington。(2018 年 12 月)</li><li>[Lessipe](https：// lessipe)的<a href="https://www.lessipe.com/">Lessipe</a>上的<a href="https://lessipe.com/course/15">Vue.js기초다지기(视频)</a> .com /)</li><li><a href="https://www.packtpub.com/web-development/full-stack-web-development-vuejs-and-nodejs-video">由 Vue.js 和 Node.js 进行的全栈 Web 开发</a>，作者 Haider Rehman， Packt。(2019 年 1 月)</li><li><a href="https://designcode.io/vue">Designer for Vue</a>，由 Design + Code 提供(2019 年 2 月)</li><li>[Talat Tufekci]的<a href="https://www.onbirkod.com/vue-js-giris-1/">Vue 土耳其语简介</a>(<a href="https://www.onbirkod.com/">https://www.onbirkod.com</a>)</li><li>[Talat Tufekci]的<a href="https://www.onbirkod.com/vue-js-2-vue-resource/">使用土耳其语的 Vue-Resource 提取数据</a>(<a href="https://www.onbirkod.com/">https://www.onbirkod.com</a>)</li><li>[Talat Tufekci]的<a href="https://www.onbirkod.com/vue-js-3-vue-router-ile-bir-spa-uygulamasi/">使用土耳其语 Vue-router 的 Spa 应用程序</a> /<a href="http://www.onbirkod.com/">www.onbirkod.com</a>)</li><li>[Talat Tufekci]的<a href="https://www.onbirkod.com/vue-js-4-vue-cli-ile-hazir-gelen-proje-sablonlari/">使用土耳其语的 Vue-cli 创建 Vue 项目</a> <a href="https://www.onbirkod.com/">https://www.onbirkod.com</a>)</li><li>[Taul Tufekci]的<a href="https://www.onbirkod.com/vue-js-5-bilesenlerin-birbiriyle-haberlesmesi-ve-vuex/">Vue 组件和土耳其语 Vuex 之间的消息传递</a> .onbirkod.com)</li><li>[作者：Michael Thiessen]<a href="https://michaelnthiessen.com/dynamically-add-class-name/">如何在vue中动态添加类名称</a></li><li><a href="https://www.youtube.com/watch?v=FdC4Mjljd3k">使用 ScaffoldHub 使用 Vue JS，Node JS 和 SQL 或 MongoDB 构建图书馆 Web 应用程序</a>作者 Felipe Lima [@scaffoldhub_io](https：// twitter.com/scaffoldhub_io)</li><li><a href="https://medium.com/saibbyweb/building-a-real-time-location-tracking-app-with-nativescript-vue-under-350-lines-%E4%BB%A3%E7%A0%81%E4%B8%BA8b51ad40d657">使用 NativeScript + Vue 构建实时位置跟踪应用</a>，由 Saibbyweb 撰写</li></ul><h2 id="事例"><a href="#事例" class="headerlink" title="事例"></a>事例</h2><ul><li><a href="http://forum.vuejs.org/topic/39/starter-application-with-jwt-auth-sample-backend-api">使用 Laravel 中的 JWT Auth +示例后端 API 的入门应用程序</a></li><li><a href="https://github.com/brandonjpierce/node-webkit-boilerplate">节点 Webkit + Vue 示例</a>@brandonjpierce</li><li><a href="https://github.com/superlloyd/VueSamples">Vue 样本</a>@superlloyd</li><li><a href="https://github.com/kazupon/vue-router-hackernews">使用 vue.js + vue-router 的 HackerNews 克隆</a>，作者@kazupon</li><li><a href="https://github.com/bradstewart/electron-boilerplate-vue">电子+ Vue 示例</a>，@ bradstewart</li><li>[Boris Okunskiy]的<a href="https://github.com/inca/voie-example">单页应用程序示例(Vue + Voie)</a>(<a href="https://github.com/inca">https://github.com/inca</a>)</li><li><a href="https://github.com/rajabishek/begin">开始-用 Vue +流明编写的 Task Manager SPA</a>，作者是<a href="https://github.com/rajabishek">Raj Abishek</a></li><li>[BosNaufal]的<a href="https://github.com/BosNaufal/vue-mini-shop">Vue Mini Shop</a>(<a href="https://github.com/BosNaufal">https://github.com/BosNaufal</a>)</li><li><a href="https://github.com/mul14/vue-soundcloud">Vue SoundCloud</a>由<a href="https://github.com/mul14">mul14</a></li><li><a href="https://github.com/haydenbbickerton/feature-requests-app">功能请求(Laravel + Vue 组合)</a>由<a href="https://github.com/haydenbbickerton">haydenbbickerton</a></li><li>[@ yjj5855]的<a href="https://github.com/yjj5855/node-vue-server-webpack">Vue Cookbook(Vue1.0 + Express)</a>(<a href="https://github.com/yjj5855)%EF%BC%9A%E6%BC%94%E7%A4%BA%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%B1%8F%E5%B9%95%E6%B8%B2%E6%9F%93">https://github.com/yjj5855)：演示服务的第一个屏幕渲染</a></li><li><a href="https://github.com/websemantics/strong-together">Strong Together</a>-一个启动器项目，基于 Browserify 和 Semantic-，以独立或 Laravel / Laravel Spark 项目的形式构建单页 Vue.js 应用程序， ui)由<a href="https://github.com/websemantics">WebSemantics</a></li><li><a href="https://github.com/sjerrys/vuetest">vuetest：在 iframe 中具有用户身份验证，bootstrap ui，上传器，所见即所得编辑器的广告管理网站</a></li><li><a href="https://github.com/andylei18/vue-shopping">vue-shopping</a>由<a href="https://github.com/andylei18">andylei18</a></li><li><a href="https://github.com/shinygang/Vue-cnodejs">Vue-cnodejs，060</a>由<a href="https://github.com/shinygang">@shinygang</a></li><li><a href="https://github.com/hilongjw/vue-zhihu-daily">vue-zhihu-daily</a>由<a href="https://github.com/hilongjw">hilongjw</a></li><li><a href="https://github.com/gustaYo/vue-chess">VueChess</a>- [gustaYo]的多人在线国际象棋游戏(<a href="https://github.com/gustaYo">https://github.com/gustaYo</a>)</li><li><a href="https://github.com/gustaYo/ngexplorer-vuejs-client">Ngexplorer-vuejs-client</a>- <a href="https://github.com/gustaYo/ngexplorer-MEAN">Nugexplorer</a>的正式客户端](<a href="https://github.com/gustaYo">https://github.com/gustaYo</a>)</li><li>[Vue 2048(Vue + Webpack)][https：// pengfu](https：// pengfu](<a href="https://github.com/pengfu)%E7%9A%84https://pengfu.github.io/vue-2048/)%EF%BC%9A%E6%B5%81%E8%A1%8C%E7%9A%84">https://github.com/pengfu)的https://pengfu.github.io/vue-2048/)：流行的</a> 2048 游戏使用 Vue 实现，Webpack，Sass，ES6</li><li>[BosNaufal]的<a href="https://github.com/BosNaufal/vue-simple-pwa">Vue Simple PWA</a>(<a href="https://github.com/BosNaufal">https://github.com/BosNaufal</a>)</li><li><a href="https://github.com/aweber1/tour-of-heroes-vue2">Tour of Heroes(Vue 2.0)</a>：Angular 2.0 的 Vue 2.0 端口[Tour of Heroes](https：// angular。 io / docs / ts / latest / tutorial /)演示应用程序。亮点：ES6 / 7，渲染功能，JSX，<a href="https://github.com/revue/revue">revue</a>(Vue 的 Redux 绑定)，[vue-router](<a href="https://github.com/vuejs/">https://github.com/vuejs/</a> vue-router)，<a href="https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb-base">Airbnb eslint</a>，webpack。由<a href="https://github.com/aweber1">@ aweber1</a></li><li><a href="https://github.com/echoVic/vue-table-pagination">vue-table-pagination</a>由<a href="https://github.com/echovic">echovic</a>进行分页的表</li><li><a href="https://github.com/delay/feathers-vue-blog-admin-demo">Feathers and Vue 2.0 Blog Admin Demo</a>演示了如何在 Vue 2.0 中使用 Feathers。它包含[delay]的身份验证，vue 路由器，vue 无限加载和角色(<a href="https://github.com/delay">https://github.com/delay</a>)</li><li><a href="https://github.com/cs1707/vue-zhihudaily-2.0">vue-zhihudaily-2.0</a>Zhihudaily 演示程序是使用 Vue 2.0，vue-router 和 vuex 构建的，并具有服务器端渲染功能。由<a href="https://github.com/cs1707">cs1707</a></li><li><a href="https://github.com/fishenal/Todos_Vuejs">vue-demo-todolist</a>是一个简单的 vue2.0 演示，它使用 Vue 2.0 vue-cli 构建。通过<a href="https://github.com/fishenal">fishenal</a></li><li>[liueans]的<a href="https://github.com/liujians/vue-adminLte-vue-router">vue-AdminLte</a>(<a href="https://github.com/liujians">https://github.com/liujians</a>)</li><li><a href="https://github.com/ycwalker/CMS-of-Blog">vue(2.0)+ Node.js：博客内容管理系统(CMS)</a>，作者@ycwalker</li><li><a href="https://github.com/gustaYo/ngexplorer-quasar">ngexplorer-quasar</a>- <a href="https://github.com/gustaYo/ngexplorer-MEAN">Ngexplorer</a>的实现与[quasar 框架](https： //gust.Yo 的//github.com/rstoenescu/quasar-framework)(<a href="https://github.com/gustaYo">https://github.com/gustaYo</a>)</li><li><a href="https://github.com/moonou/zhihu-daily-vue">zhihu-daily-vue</a><a href="https://github.com/moonou">moonou</a>基于 vue2.0 的 zhihu 日报</li><li><a href="https://github.com/qxl1231/generator-loopback-vue">loopback-vue</a>loopback + vue + vue-resource，ionic-app，vue 页面分页功能，验证权限控制，访问令牌机制，凭证，CI ，docker <a href="https://github.com/qxl1231">qxl1231</a></li><li><a href="https://github.com/kfei/vue-s3-dropzone">vue-s3-dropzone</a>Vue.js 拖放组件可将文件无服务器上传到 AWS S3</li><li><a href="https://github.com/TIGERB/easy-vue">easy-vue</a>一个简单的示例，使用 vue 在 vue 2.0，vuex 2.0，vue-router 2.0，vue-infinite-scroll 2.0， [TIGERB]的 vue-progressbar 2.0(<a href="https://github.com/tigerb">https://github.com/tigerb</a>)</li><li>[度量循环]的<a href="https://github.com/metricloop/vuex-events-messaging-demo">Vuex 事件消息演示</a>(<a href="https://metricloop.com/blog">https://metricloop.com/blog</a>)</li><li><a href="https://github.com/akifo/vue-memo">vue-memo</a>使用 Vue.js(&gt; 2.x。)，vue-router(&gt; 2.x。)，vuex( &gt; 2.x。)，vuex-router-sync @ next(&gt; 3.x。)和 Firebase(&gt; 3.6.x)，作者为<a href="https://github.com/akifo">akifo</a></li><li><a href="https://github.com/ChangJoo-Park/Resume-Vue">Resume Vue</a>[ChangJoo Park]的基于 JSON 的基于 Vue 2.0 的简历(<a href="https://github.com/ChangJoo-Park/">https://github.com/ChangJoo-Park/</a>) -使用<a href="http://phoenixframework.org/">Phoenix Framework</a>，Vue 和 Vue Router(<a href="https://chu1204505056.gitee.io/byui-bookmarks/awesome/https%EF%BC%9A/"><em>demo</em></a>开发的<a href="https://github.com/Angarsk8/phoenix_vuejs_authentication_example">具有 JWT 身份验证的应用示例</a> phoenix-vue-auth.herokuapp.com))<a href="https://github.com/Angarsk8">@ Angarsk8</a></li><li><a href="https://github.com/shershen08">在 Vue 2.0 中使用路由器示例 CRUD 应用</a>(<a href="https://github.com/shershen08/vue.js-v2-crud-application)(https://github.com/shershen08)">https://github.com/shershen08/vue.js-v2-crud-application)(https://github.com/shershen08)</a></li><li>[@mgyongyosi]的<a href="https://github.com/mgyongyosi/VuejsSSRSample">ASP.NET Core Vue.js 服务器端呈现示例</a>(<a href="https://github.com/mgyongyosi">https://github.com/mgyongyosi</a>)</li><li><a href="https://github.com/sejr/vuefire-quickstart">vuefire-quickstart</a>-通过<a href="https://github.com/sejr">@sejr</a>记录的带 Webpack 和 eslint 的 Firebase 集成。</li><li><a href="https://github.com/rokups/hello-vue-django">hello-vue-django Vue.js 和 Django 集成入门项目，带有热代码重载</a></li><li><a href="https://github.com/Angarsk8/loopa-news">实时社交新闻应用</a>，是由<a href="http://phoenixframework.org/">Phoenix</a>，Vue，Vue Router 和 Vuex([_demo _](https ：//loopa-news.herokuapp.com))，作者为<a href="https://github.com/Angarsk8">@ Angarsk8</a></li><li><a href="https://github.com/CaiYiLiang/simply-calculator-vuejs">vue-calculator</a>是一个使用 Vue 2.0 构建的简单计算器，vue-cli(webpack-simple)。通过<a href="https://github.com/CaiYiLiang">CaiYiLiang</a></li><li><a href="https://github.com/CaiYiLiang/vue-demos/tree/master/wikipediaViewer-vuejs">Wikipedia-viewer</a>一个简单的 Wikipedia-viewer 页面，使用 vue2.x，vue-router，vue-cli(webpack)构建-simple)和 ajax(jsonp)。通过<a href="https://github.com/CaiYiLiang">CaiYiLiang</a></li><li><a href="https://github.com/superman66/vue2.x-douban">vue2.x-douban</a>使用 vue2.x，vue-router 和 axios(豆瓣电影)构建豆瓣电影的简单方法。通过<a href="https://github.com/superman66">超人</a></li><li><a href="https://github.com/jcc/vue-laravel-example">vue-laravel-example</a>Vue-Laravel-示例是使用 Laravel 设置 Vue 的简单示例。通过<a href="https://github.com/jcc">Jiajian Chan</a></li><li><a href="https://github.com/hal0gen/vue-foundation">vue-foundation</a>一个演示应用程序，将 VueJS 与<a href="https://github.com/zurb/foundation-sites">Zurb Foundation</a>集成，使用 webpack vue-cli f</li><li><a href="https://github.com/MarkPieszak/aspnetcore-Vue-starter">aspnetcore-Vue-starter</a>一个 VueJS 2 入门模板，它是 asp.net MVC dotnetcore 项目的一部分。该模板包括 VueJS 客户端应用程序和后端 API 控制器。</li><li><a href="https://github.com/yujiahaol68/reddit-app">vue-reddit-app</a>使用 Vue 2 构建的 Reddit SPA <a href="https://yujiahaol68.github.io/reddit-app/"><em>demo</em></a>。 X，Vue 路由器 2，Vuex 和 axios。<a href="https://github.com/yujiahaol68">@ yujiahaol68</a>使用 Muse-UI 和 vue-cli Webpack 模板</li><li><a href="https://github.com/pluto1114/vue-music-qq">vue-music-qq</a>一个 qq-music 项目基于 vue-cli。页面简单流畅</li><li><a href="https://github.com/ShuvoHabib/Vue-JSX-and-Vue-Redux-Navigation-Tab">带有 Vue-Redux 和 Plain VueJSX 的 NavigationTab</a>导航选项卡同时具有普通 Vue JSX 和 Vue + Redux 绑定</li><li><a href="https://veggiemap.herokuapp.com/">Veggie Map</a>使用 Vuejs + Vue 路由器+ Leaflet 和 Firebase 的交互式演示</li><li><a href="https://github.com/johnnynotsolucky/samples/tree/master/vuejs-d3">vuejs-d3</a>示例如何使用 d3 进行可视化的示例。</li><li><a href="https://github.com/YuheiNakasaka/vue-twitter-client">vue-twitter-client</a>使用 Vue 2.X，Vuex，electron-vue 和 Electron 构建的 Twitter 客户端应用程序</li><li><a href="https://github.com/jeneser/douban">Douban</a>使用 Vue2.x + Vuex + Vue-router + vue-resource 创建的很棒的 douban 示例。通过<a href="https://github.com/jeneser">jeneser</a></li><li><a href="https://github.com/storyblok/vuejs-boilerplate">Storyblok vuejs-boilerplate</a>-集成 Storyblok 的组件系统，允许创建可编辑的网站。</li><li><a href="https://github.com/Ethaan/vuexpresso">Vuexpresso</a>-使用 VueX，Vue-Router，Vue-Apollo，webpack，GraphQL，Apollo-client，express 和 mongo 的样板</li><li><a href="https://github.com/ndabAP/vue-sails-example">带有 Sails.js 示例项目的 Vue.js</a>-该项目适用于单页应用程序的新手，并希望通过实际学习例。</li><li><a href="https://github.com/eddyekofo94/pyramidVue.git">Vue.js＆Pyramid Web 框架应用程序</a>-使用 Pylons Pyramid Webframework 后端 Vuejs webpack2，vue-router，yarn(数据包管理器)的样板</li><li><a href="https://github.com/ErickPetru/vue-feathers-chat">vue-feathers-chat</a>在前端使用 Vue，在后端使用 Feathers 进行的示例实时聊天，但仅使用 Socket.IO-Client 进行通信</li><li><a href="https://github.com/JackGit/xplan/">vue-xplan</a>使用 Vue 和 three.js 创建的旋转地球演示页面</li><li><a href="https://github.com/Chanran/vueSocketChatroom">vueSocketChatRoom</a>使用 vue2.x，vuex2.x，vue-router2.x，vux2.x，socket.io 的套接字聊天室</li><li><a href="https://github.com/Binaryify">@Binaryify</a>的<a href="http://binaryify.github.io/vue-tetris/">vue-tetris(使用 Vue，Vuex，不可变代码 Tetris 编码)</a>：使用 Vue，Vuex，Immutable 编码俄罗斯方块。</li><li><a href="https://github.com/Kasheftin">@kasheftin</a>的<a href="https://kasheftin.github.io/route-planner-vue/">route-planner-vue</a>：用于规划具有多个路线的工具 Google 地图上可排序的图层，可拖动的方向，标记和形状。</li><li><a href="https://github.com/ssshooter/MyDiary-Vue/blob/master/README.En.md">MyDiary-Vue</a>使用 Vue 2.X 构建的日记应用程序，还具有联系人和待办事项列表功能</li><li><a href="https://aligoren.com/">AliGÖREN</a>在 Github 上的<a href="https://github.com/vue-project">VueJS 示例项目</a></li><li><a href="https://github.com/voluntadpear/todomvc-vue-webpack">todo-mvc-webpack</a>由<a href="https://github.com/voluntadpear">voluntapear</a>使用 webpack-basic 在 Vue 2 上实现 TodoMVC 模板，并带有显示 vuex，vue-router，中央事件总线和 VueFire 的示例。</li><li>[gustaYo]的<a href="https://github.com/gustaYo/vue-chess-storybook">Chess Storybook Example</a>与 Vue 2.0(<a href="https://github.com/gustaYo">https://github.com/gustaYo</a>)</li><li><a href="https://github.com/sdras/vue-weather-notifier">Vue Weather Notifier</a>一个带有 SVG 和 Vuex 的小型示例动画应用程序</li><li><a href="https://github.com/sdras/nuxt-type">Nuxt 类型</a>一个带有 Nuxt 的示例 Vue 项目，用于路由/ SSR 到演示页面转换</li><li><a href="https://github.com/wmui/vueblog">VueBlog</a>一个博客系统，支持<a href="https://github.com/wmui">wmui</a>的服务端渲染</li><li><a href="https://github.com/Piterden/cinemateka">Cinemateka</a>-用 Vue v1 和 Laravel 5 制作的 SPA 的示例。电影和活动时间表。俄罗斯的评论。</li><li><a href="https://github.com/the6thm0nth/vue-2.x-boilerplate">vue-2.x-boilerplate</a>-适用于 Vue 项目 Vuex + vue-router 的简单入门套件</li><li><a href="https://github.com/rhapsodyn/vue-minesweeper">vue-minesweeper</a>-由[rhapsodyn]开发的带有 vuejs 的致命简单扫雷游戏(<a href="https://github.com/rhapsodyn">https://github.com/rhapsodyn</a>)</li><li><a href="https://github.com/OXOYO/X-Flowchart-Vue">X-Flowchart-Vue</a>- [OXOYO]的 SVG 和 Vue 流程图编辑器(<a href="https://github.com/OXOYO">https://github.com/OXOYO</a>)</li><li><a href="https://github.com/johndatserakis/koa-vue-notes-web">koa-vue-notes-web</a>-充实的 SPA，在后端使用 Koa 2.3，在前端使用 Vue 2.4。包括功能齐全的用户身份验证组件，针对用户笔记的 CRUD 操作以及 Vuex 存储模块。</li><li><a href="https://github.com/ittus/vuejs-firebase-shopping-cart">Vuejs 购物车</a>-使用 Vuejs 和 Firebase 的购物车示例</li><li><a href="https://github.com/rchung95/PokedexVueJs">PokedexVueJs</a>@ rchung95</li><li><a href="https://github.com/aofdev/vuefire-auth">vuefire-auth</a>使用 Firebase 进行 Vuefire Vue2-Auth-Email 验证</li><li><a href="https://github.com/aofdev/vuefire-realtimedatabase">vuefire-realtimedatabase</a>具有 Firebase 的 Vuefire Vue2-RealtimeDatabaseCRUD</li><li><a href="https://github.com/aofdev/vuefire-storage">vuefire-storage</a>具有 Firebase 的 Vuefire Vue2-Storage</li><li><a href="https://github.com/deepak-singh/vue-blog-pwa">vue2-PWA-Blog</a>@ deepak-singh</li><li><a href="https://github.com/aofdev/vue-firebase-auth-vuex">vue-firebase-auth-vuex</a>具有 Vuex 的 Vue2 Firebase 身份验证，并支持渐进式 Web 应用程序</li><li><a href="https://github.com/joshua1988/vue-chart-starter-kit">vue-chart-stater-kit</a>使用 Vue 路由器，Vue 图表，Element-UI 的快速入门</li><li><a href="https://github.com/qianyinghuanmie/vue2.0-demos">vue2.0-demos</a>使用 mint-ui，Element-UI，并有一些演示(选择城市等)</li><li><a href="https://github.com/edge/conway">conway</a>Conway 在 Vue 中的生活游戏。</li><li><a href="https://github.com/igeligel/vuex-feature-scoped-structure">vuex-feature-scoped-structure</a>功能范围 vuex 应用程序结构的示例应用程序</li><li><a href="https://github.com/ooade/vuex-examples">vuex-examples</a>-有关使用 Vuex 构建真实世界应用程序的简单示例</li><li><a href="https://github.com/bahmutov/vue-vuex-todomvc">vue-vuex-todomvc</a>-示例 TodoMVC Vue.js 应用程序具有通过 REST 的 Vuex 存储和服务器后端以及使用<a href="https://www.cypress.io/">赛普拉斯(Cypress)的全套 E2E 测试。 io</a>测试运行程序。</li><li><a href="https://github.com/skysign/vuejs-sqljs-boilerplate">vuejs-sqljs-boilerplate</a>-这是同时使用 Vue.js 和 sql.js 的样板</li><li><a href="https://github.com/OXOYO/X-WebDesktop-Vue">X-WebDesktop-Vue</a>- [OXOYO]基于 Vue 的 WebDesktop 系统(<a href="https://github.com/OXOYO">https://github.com/OXOYO</a>)</li><li><a href="https://github.com/Jamaks/vuejs-music-player">vuejs-music-player</a>-一个 Vue.js 精简音乐播放器</li><li><a href="https://github.com/sarneeh/vuejs-example-stock-trader">Vue.js 最佳实践示例项目</a>-使用 Vue.js + Vue 路由器+ Vuex + Vuelidate 的最佳实践示例项目</li><li>[Vue.js <a href="https://github.com/jasscia/one">一个]客户端</a>- [一个]用 Vue2.5 编写的客户端</li><li><a href="https://github.com/DominikAngerer/auth0-vue">Vue.js 2.5，带有 vue-cli v3，包括使用 auth0 进行身份验证</a>，作者多米尼克·安格(Dominik Angerer)，Storyblok</li><li><a href="https://github.com/SierraSoftworks/vue-template">Skeleton Vue + TypeScript</a>-TypeScript，VueJS，ElementUI，Vue Router，Vuex，材质图标，BrowserSync，Dockerfile</li><li><a href="https://twitter.com/jesalg">@jesalg</a>的<a href="https://github.com/jesalg/penv-starter">PENV Starter</a>-有关如何在 VueJS，Express 和 PostgreSQL 中使用的基本示例连词。</li><li><a href="https://github.com/ntkme/vue-relay-examples">vue-relay-examples</a>-使用 vue-relay 的示例应用程序的集合。</li><li><a href="https://github.com/alefesouza/laravel-vue-boilerplate">laravel-vue-boilerplate</a>-具有用户 CRUD 的 Laravel 5.5 SPA 样板，使用 Vue.js 2.5，Bootstrap 4，TypeScript，Sass，Pug 和笑话。</li><li><a href="https://github.com/viljamis/vue-design-system">Vue 设计系统</a>-用于使用 Vue.js 构建 UI 设计系统的开源样板。</li><li><a href="https://github.com/faisaltheparttimecoder/bulma-vuejs-demo-website">Vue Bulma 演示</a>-一个简单的演示网站，可联合检查 Bulma / Vue JS 和 express。</li><li><a href="https://github.com/kadro/vue-boilerplate">准备好使用 TypeScript，vuex，vue-router，HMR 等进行生产的入门应用程序</a></li><li><a href="https://github.com/wmhello/laravel_template_with_vue">vue.js 与 laravel 结合的前阶段分离开发模板</a>-laravel 护照/ Vue.JS 和 Element UI 的模板网站。</li><li><a href="https://www.packtpub.com/web-development/hands-web-development-vuejs-video">由 Vue.js 进行的 Web 开发动手</a>，作者：Roman Kuba，Packt。(2018 年 5 月)</li><li><a href="https://github.com/PowerDos/Mall-Vue">Vue 在线商城</a>-在线 SPA 演示，基于 VUE 开发的前分离电子商城前端项目</li><li><a href="https://github.com/elaijuh/fue">FUE</a>-使用 Vue.js + Vue 路由器+ Vuex + Vuetify + FeathersJS 的 Admin SPA 客户端和服务器端样板</li><li><a href="https://github.com/ffxsam/vue-typescript-cookbook/blob/master/README.md">Vue + TypeScript 食谱</a>-一本小小的食谱，涵盖了一些不太明显的解决方案，供人们开始使用 Vue + TypeScript</li><li><a href="https://vuejsexamples.com/">Vuejs 示例</a></li><li><a href="https://github.com/SoftwareAteliers/asp-net-core-vue-starter">ASP.NET Core Vue 入门 CLI 3.0</a>使用 Vue CLI 3.0 和自定义配置(默认 TypeScript，Vue，路由器)的 Vue 入门模板，Vuex，Vuetify)通过<a href="https://github.com/SoftwareAteliers">@SoftwareAteliers</a>与 ASP。＆＃8203; NET Core 集成(2018 年 9 月)</li><li><a href="https://github.com/soroushchehresa/vue-soundcloud">vue-soundcloud</a>由<a href="https://github.com/soroushchehresa">Soroush Chehresa</a>用 Vue.js 2 构建的 Soundcloud 客户端。</li><li><a href="https://github.com/crisgon/vue-cart">vue-cart</a>一个由 vue，vuex 和 vue 路由器制成的简单购物车。通过<a href="https://github.com/crisgon">crisgon</a></li><li><a href="https://github.com/kavalcante/nuxt-element-apollo">Nuxt + Apollo + Element</a>一个带有 Nuxt，Element(自定义主题)和 Vue Apollo 的 Vue.js SSR 样板。</li><li><a href="https://github.com/walleeeee/daily-zhihu">vue-daily-zhihu</a>由<a href="https://github.com/walleeeee">walleeeee</a>使用 Vue 2.0 和 vue-router＆vuex 构建的简单演示)</li><li><a href="https://github.com/setholito/charcoal">木炭</a>使用 Vue CLI 3.0 并由[Seth Davis]用 Bulma 样式设置的入门模板(<a href="https://github.com/setholito">https://github.com/setholito</a>)</li><li><a href="https://github.com/danijelh/aspnetcore-vue-typescript-template">带有 TypeScript 的多页 ASP.NET Core Vue</a>-多页 ASP.NET Core Vue，Typescript，Vuex，Vue 路由器，布尔玛，Sass 和 Jest 应用程序。有关如何在.NET Core MVC 中将 Vue.js 用作多页(多个迷你 spa)应用程序的模板/起点。</li><li><a href="https://github.com/visualjerk/vue-cion-design-system">CION-Vue.js 的设计系统样板</a>-一个主要为 Vue.js 应用程序设计的设计系统。它利用设计令牌，带有集成代码游乐场的生活风格指南以及用于常见 UI 任务的可重用组件。</li><li><a href="https://github.com/latovicalmin/vuejs-websockets-example">Vue websockets 示例</a>-使用 Vue.js 2 + Node 项目的 Websockets 使用的基本示例，以获取完整的工作示例。</li><li><a href="https://github.com/FatDong1/vue-blog">Vue(2.0)+ Node.js：一个博客</a>，作者@ FatDong1</li><li><a href="https://github.com/alexander-elgin/vue-todo-list">vue-todo-list</a>待办事项列表示例应用程序基于 Vue + Vuex + Vuetify + Vee-Validate</li><li><a href="https://github.com/ModusCreateOrg/ionic-vue-examples/">Vue.js 和 Ionic v4 示例</a>-一组如何在 Vue.js 中使用 Ionic v4 的示例</li><li><a href="https://github.com/MuratcanSenturk/MuratcanSenturk.github.io">使用 Vue，Vuex 和 Vue-Router 的个人网站</a>- <a href="https://github.com/MuratcanSenturk">MuratcanŞentürk 用 vue，vuex 和 vue-router 制作的简单网站示例</a></li><li><a href="https://github.com/Trifectuh/Client-Vue">客户端 Vue.js</a>- <a href="https://client-vue.herokuapp.com/">演示</a>-Vue.js 客户端端，用于[Justin Wash]的微型，快速加载，无 node.js 的单页应用程序(<a href="https://github.com/Trifectuh">https://github.com/Trifectuh</a>)</li><li><a href="https://github.com/arunredhu/vuejs_boilerplate">大型 Vue.js 应用样板+ Vuex</a></li><li><a href="https://github.com/Seokky/vue-snake-game">无画布的 Vue.js 上的蛇游戏</a></li><li><a href="https://github.com/yemiwebby/vue-group-chat-app">使用 CometChat 构建 Vue 聊天应用</a></li></ul><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><ul><li><a href="https://www.packtpub.com/web-development/majesty-vuejs">Vue.js je 下</a>，作者：Alex Kyriakidis 和 Packt 的 Kostas Maniatis。(2016 年 11 月)</li><li><a href="https://www.packtpub.com/web-development/learning-vuejs-2">学习 Vue.js 2</a>，作者：Packt 的 Olga Filipova。(2016 年 12 月)</li><li><a href="https://leanpub.com/vuejs2">Vue.js 2 的威严</a>，作者：Alex Kyriakidis 和 Lestapub 的 Kostas Maniatis。(2017 年 3 月)</li><li><a href="https://www.packtpub.com/web-development/vuejs-2-cookbook">Vue.js 2 Cookbook</a>，作者是 Andrea Passaglia，Packt。(2017 年 5 月)</li><li><a href="https://www.manning.com/books/vue-js-in-action">Vue.js 实战</a>，作者 Erik Hanchett 和 Benjamin Listwon(2018 年春季)</li><li><a href="https://www.manning.com/books/testing-vuejs-applications">测试 Vue.js 应用程序</a>作者 Edd Yerburgh(2018 年夏季)</li><li><a href="https://www.packtpub.com/web-development/vuejs-2-and-bootstrap-4-web-development">Vue.js 2 和 Bootstrap 4 Web 开发</a>，Packt 的 Olga Filipova。(2017 年 9 月) -Casa doCódigo 的 Leonardo Vilarinho 的<a href="https://www.casadocodigo.com.br/products/livro-frontend-vue">Front-end com Vue.js</a>。(2017 年 11 月) -Packt 的 Guillaume Chau 撰写的<a href="https://www.packtpub.com/web-development/vuejs-2-web-development-projects">Vue.js 2 个 Web 开发项目</a>。(2017 年 11 月)</li><li><a href="https://www.packtpub.com/application-development/full-stack-vuejs-2-and-laravel-5">Full-Stack Vue.js 2 和 Laravel 5</a>，Packt Anthony Gore。(2017 年 12 月)</li><li>[Package Mike Street 的<a href="https://www.packtpub.com/application-development/vuejs-2x-example">Vue.js 2.x 示例</a>。(2017 年 12 月) -Oleksandr Kocherhin 的<a href="https://masteringvuejs.com/">Mastering Vue.js</a>。(2018 年 1 月)</li><li><a href="https://www.fullstack.io/vue/">Fullstack Vue：Vue.js 完整指南</a>，作者：哈桑·迪吉德(Hassan Djirdeh)，内特·默里(Nate Murray)和阿里·勒纳(Ari Lerner)。(2018 年 3 月) -Packt 的 Paul Halliday 撰写的<a href="https://www.amazon.com/dp/178883979X">Vue.js 2 设计模式和最佳做法</a>。(2018 年 3 月)</li><li><a href="https://www.amazon.com/dp/1788999932">Vuex 快速入门指南</a>，作者：Packt 的 Andrea Koutifaris。(2018 年 4 月)</li><li><a href="https://www.amazon.com/Full-Stack-Web-Development-Vue-js-Node/dp/1788831144">使用 Vue.js 和 Node 进行全栈 Web 开发</a>，作者：Aneeta Sharma，Packt。(2018 年 5 月) -Flavio Copes 的<a href="https://vuehandbook.com/">Vue 手册</a>。(2018 年 7 月)</li><li><a href="https://www.amazon.com/dp/1788839463">ASP.NET Core 2 和 Vue.js</a>，作者：Stuart Ratcliffe，Packt。(2018 年 7 月)</li><li>[Vue.js：解释性解释](Casa doCódigo 的 Caio Incau)(<a href="https://www.casadocodigo.com.br/products/livro-vue)%E3%80%82">https://www.casadocodigo.com.br/products/livro-vue)。</a>(2017 年 9 月)</li><li><a href="https://www.apress.com/us/book/9781484237809">了解 Vue.js</a>，作者是 Brett Nelson，Apress。(2018 年 8 月)</li><li><a href="https://leanpub.com/vue-book">精益：构建与部署</a>，作者 Leanpub 的 Daniel Schmitz。(2018 年 9 月)</li><li><a href="https://www.packtpub.com/application-development/building-applications-spring-5-and-vuejs-2">由 Spring 5 和 Vue.js 2 构建应用程序</a>，作者：James J. Ye，Packt。(2018 年 10 月)</li><li><a href="https://www.packtpub.com/application-development/vuejs-quick-start-guide">Vue.js 快速入门指南</a>，Packt 的 Ajdin Imsirovic。(2018 年 10 月) -Frederik Dietz 撰写的<a href="https://fdietz.github.io/vue-component-patterns-course.html">Vue.js 组件模式课程</a>(2019 年 4 月)</li></ul><h2 id="博客文章"><a href="#博客文章" class="headerlink" title="博客文章"></a>博客文章</h2><ul><li><a href="https://medium.com/@malgamves/vue-x-hasura-graphql-d66f585a3ba5">Vue x Hasura GraphQL</a></li><li><a href="https://medium.com/@malgamves/using-graphql-mutations-in-vue-js-3b4570234edf">在 Vue.js 中使用 GraphQL 突变</a></li><li><a href="https://medium.appbase.io/learn-how-to-build-a-github-search-explorer-app-with-vue-js-c66f61d6e152">了解如何使用 Vue.JS 构建数据驱动的搜索 UI</a></li><li><a href="https://medium.com/@croo/using-gitlab-ci-cd-to-auto-deploy-your-vue-js-application-to-aws-s3-9affe1eb3457">使用 GitLab CI / CD 将 Vue.js 应用程序自动部署到 AWS S3</a></li><li><a href="https://mherman.org/blog/dockerizing-a-vue-app/">将 Vue 应用程式码头化</a></li><li><a href="https://testdriven.io/blog/deploying-flask-to-heroku-with-docker-and-gitlab/">使用 Docker 和 Gitlab CI 将 Flask and Vue 应用程序部署到 Heroku</a></li><li>[Kevin Peters]的<a href="https://medium.com/3yourmind/large-scale-vuex-application-structures-651e44863e2f">大型 Vuex 应用程序结构</a></li><li>[Kevin Peters]的<a href="https://medium.com/@kevin_peters/composed-computed-properties-in-vue-js-87b4507af079">在 Vue.js 中构成计算属性</a></li><li><a href="https://medium.com/@kevin_peters/learn-how-to-refactor-vue-js-single-file-components-on-a-real-world-example-501b3952ae49">通过实际示例了解如何重构 Vue.js 单个文件组件</a>由<a href="https://twitter.com/kevinpeters_">Kevin Peters</a></li></ul><h2 id="开源的"><a href="#开源的" class="headerlink" title="开源的"></a>开源的</h2><ul><li><a href="https://github.com/pagekit/pagekit">PageKit</a>-使用 Symfony 组件和 Vue.js 构建的模块化轻量级 CMS。</li><li><a href="https://github.com/cheapsteak/npmcharts.com">npmcharts.com</a>-比较 npm 软件包并发现下载趋势。</li><li><a href="https://github.com/phanan/koel">Koel</a>-可以正常工作的个人音乐流服务器。</li><li><a href="https://github.com/mrgodhani/raven-reader">Raven 阅读器</a>-使用原子电子和 vue.js 制作的简单 RSS 阅读器。</li><li><a href="https://github.com/Zhangdroid/Gokotta">Gokotta</a>-由电子和 vue 构建的简单音乐播放器。</li><li><a href="https://github.com/misterGF/CoPilot">CoPilot</a>-基于 AdminLTE 和 vue.js 集成的管理门户。</li><li><a href="https://github.com/pepf/retrospectify">Retrospectify</a>-在敏捷团队中进行协作回顾的简单工具。</li><li><a href="https://github.com/jade-press/jade-press">jade-press</a>-基于 mongodb，nodejs，koa，vue 等的 Cms。</li><li><a href="https://github.com/astralapp/astral">astralapp</a>-轻松组织 GitHub Stars。</li><li><a href="https://github.com/egoist/eme">EME</a>-优雅的 Markdown 编辑器。</li><li><a href="https://github.com/SidKwok/github-explorer">Github-explorer</a>-一个可以帮助您更好地检查 github 的水疗中心。</li><li><a href="https://github.com/typicode/hotel">酒店</a>-从浏览器启动开发服务器，并在几秒钟内获得本地域。</li><li><a href="https://github.com/surfbirdapp/surfbird">Surfbird</a>-使用现代网络技术编写的 Twitter 客户端。</li><li><a href="https://github.com/approach0/search-engine">Approach0</a>-一个可识别数学的搜索引擎。</li><li><a href="https://github.com/devfake/flox">Flox</a>-自托管电影，系列和动漫观看列表。</li><li><a href="https://github.com/samiheikki/javascript-guessing-game">JavaScript Guessing Game</a>-用于识别 JavaScript 工具和库的游戏。</li><li><a href="https://github.com/viko16/vue-ghpages-blog">vue-ghpages-blog</a>-Vue.js 2 + Webpack 2 基于 GitHub 页面的博客。</li><li><a href="https://github.com/Vuedo/vuedo">Vuedo</a>-使用 Laravel 和 Vue.js 构建的博客平台。</li><li><a href="https://github.com/pluto1114/vue-music163">vue-music163</a>-一个 Vue.js 音乐项目。</li><li><a href="https://github.com/zhangxin840/tomato5">Tomato5</a>-实时协作工具，它将 Pomodoro 技术与团队状态共享板结合在一起。</li><li><a href="https://github.com/freearhey/web-learn">Web 学习</a>-一种服务，可让您轻松访问有关 Web 开发和编程的数千个视频教程。</li><li><a href="https://github.com/palerdot/exceljson">ExcelJSON</a>-一种将 CSV，TSV 与 JSON 相互转换的工具。</li><li><a href="https://github.com/forehalo/materialize-blog">Materialize-blog</a>-使用 Laravel5.3 和 Vue2.x 构建的材料博客。</li><li><a href="https://github.com/ChangJoo-Park/vue-component-generator">VueCompomnentGenerator</a>-在浏览器上生成 vue 单个文件组件。</li><li><a href="https://github.com/super-dev/SDR-News">SDR 新闻</a>-来自多个来源(Reddit，Hacker News 和 Prominent Blogs)的 Web 设计人员和开发人员新闻。</li><li><a href="https://github.com/jcc/blog">PJ Blog</a>-使用 Laravel 和 Vue.js 构建的开源博客。</li><li><a href="https://github.com/qazbnm456/lulumi-browser">Lulumi-browser</a>-Lulumi-browser 是使用 Vue.js 2 和 Electron 编码的轻型浏览器。</li><li><a href="https://github.com/bstavroulakis/vue-wordpress-pwa">vue-wordpress-pwa</a></li><li><a href="https://github.com/koumoul-dev/openapi-viewer">OpenAPI 3 查看器</a>-浏览并测试 OpenAPI 3.0 规范中描述的 REST API</li><li><a href="https://github.com/oguzhaninan/Stacer">Stacer</a>-Linux 系统优化程序和监视</li><li><a href="https://github.com/cmllr/distrochooser">Distrochooser.de</a>-Linux 初学者的入门指南</li><li><a href="https://github.com/oguzhaninan/Buka">Buka</a>-电子书管理</li><li><a href="https://github.com/egoist/docute">文档</a>-一个无需构建过程即可编写文档的框架</li><li><a href="https://github.com/ericjjj/pm86">pm86</a>-Node.js 应用网站的生产流程经理</li><li><a href="https://github.com/ericjjj/vms">vms</a>-一个 Vue.js 2.0 管理系统</li><li><a href="https://github.com/rigor789/nativescript-vue">nativescript-vue</a>-NativeScript 渲染器的 Vue.js 实现。</li><li><a href="https://github.com/fireyy/piper">piper</a>-基于 Vue 的拖放式移动网站构建器。</li><li><a href="https://github.com/lincenying/mmf-blog-vue2">mmf-blog-vue2</a>-基于 Vue2(Vue-router，Vuex)和 Webpack2 的博客。</li><li><a href="https://github.com/iutbay/mm">媒体管理器</a>-Web 文件管理器。</li><li><a href="https://github.com/dyu/bookmarks">dyu / bookmarks</a>-一个由 leveldb 驱动的自包含，自托管的书签应用程序，由 Vue2.1.x 构建。</li><li><a href="https://github.com/tangram-js/json-schema-editor">JSON 模式编辑器</a>-JSON 模式的直观编辑器。使用 Vue.js 2 和 Firebase 开发。</li><li><a href="https://github.com/apertureless/npm-stats">npm-stats</a>-npm 包下载统计信息面板</li><li><a href="https://github.com/devjin0617/vue2-admin-lte">vue2-admin-lte</a>-一个将 AdminLTE 转换为可与 Vuejs(v2.x)一起使用的项目。</li><li><a href="https://github.com/dockeron/dockeron">Dockeron</a>-基于 Electron + Vue.js 构建的桌面 Docker 项目。</li><li><a href="https://github.com/alicin/flamme">Flamme</a>-一个基于 Education 和 Vue.js 构建的开源 Tinder 桌面客户端，用于教育目的</li><li><a href="https://github.com/Caiyeon/goldfish">Goldfish</a>-使用 VueJS，Golang 和 Bulma CSS 构建的 HashiCorp Vault UI</li><li><a href="https://github.com/wxs77577/adminify">管理</a>-基于<a href="https://vuetifyjs.com/">Vuetify</a>的管理控制台，请选中[在线演示](http：// adminify。 genyii.com)</li><li><a href="https://github.com/alicin/promptie">提示</a>-用 Vue.js 编写的框架，用于在 Web 浏览器中创建类似命令行的界面。</li><li><a href="https://github.com/clarkdo/hare">Hare</a>-🐇 基于 Vue.js 2.x，Koa 2.x，Element-UI 和 Nuxt.js 的应用程序样板</li><li><a href="https://github.com/cristijora/vue-paper-dashboard">Paper-Dashboard</a>-为 Vue 制作的 Creative Tim Paper Dashboard</li><li><a href="https://github.com/otezz/AdminLTE-VueJS2">AdminLTE-VueJS2</a>-一个在 AdminLTE 上实现 VueJS(v2.x)的开源项目。</li><li><a href="https://github.com/lucduong/vue-material-dashboard">材质仪表板</a>-为 Vue 制作的创意 Tim 材质仪表板</li><li><a href="https://github.com/mazipan/explore-github">Explore-Github</a>-VueJS 2 Github Explorer 使用 API v3</li><li><a href="https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template">CoreUI</a>-由 Vue.js 支持的开源管理模板</li><li><a href="https://github.com/mazipan/chucknorris">ChuckNorris</a>-使用 VueJS + api.chucknorris.io 构建的 Chuck Norris 笑话生成器</li><li><a href="https://github.com/paulschwoerer/leafplayer">LeafPlayer</a>-一个简单，快速，私有的音乐流服务器。</li><li><a href="https://github.com/tangram-js/json-editor">JSON 编辑器</a>-一种可识别架构的 JSON 编辑器。用 Vue2 开发。</li><li><a href="https://github.com/voten-co/voten">Voten</a>-使用 Vue2 和 Laravel 构建的类似 Reddit 的平台。</li><li><a href="https://github.com/Rud156/News-Weaver">News Weaver</a>-使用 VueJS 和 VuetifyJS 制作的基于 Web 的 RSS 阅读器/聚合器</li><li><a href="https://wakeupbilliejoe.com/">唤醒 Billie Joe！</a>-根据绿日的歌曲“唤醒我，当九月结束”而倒计时到十月的网站。使用 Vue 和 Firebase 创建。</li><li><a href="https://github.com/NoDivide/astrum">Astrum</a>-旨在包含在任何 Web 项目中的轻量级模式库。</li><li><a href="https://github.com/aofdev/vue-pwa-vision">vue2-pwa-vision</a>-带有 Vue2 + Vuetify +渐进式 Web App 的人脸检测 Google Cloud Vision</li><li><a href="https://github.com/aofdev/vue-pwa-rekognition">vue2-pwa-rekognition</a>-使用 Vue2 + Vuetify + Progressive Web App 进行人脸检测的 Amazon Rekognition</li><li><a href="https://github.com/ammobinDOTca/ammobin-client">AmmoBin.ca</a>-有关加拿大在线弹药价格的元搜索网站</li><li><a href="https://github.com/mubaidr/SPA-asp.net-api-vuejs-">SPA-asp.net-api-vuejs-</a>-用于使用基本任务管理和消息传递的 Vue.js 单页应用程序 ASP .NET Webapi 2 和 SQL Server</li><li><a href="https://github.com/mubaidr/Book-Trading-Club">Book-Trading-Club</a>-与您所在地区的其他图书读者进行贸易或借阅图书。使用 nodejs 和 vuejs2 构建</li><li><a href="https://github.com/mubaidr/vuejs-extension-pack">vuejs-extension-pack vscode</a>-扩展 packf 或 vscode，具有用于 Vue.js 开发的流行 VS Code 扩展。</li><li><a href="https://github.com/Requarks/wiki">Wiki.js</a>-基于 NodeJS，Git 和 Markdown 构建的现代，轻量级且功能强大的 Wiki 应用程序</li><li><a href="https://github.com/aofdev/vue-pwa-speech">vue-pwa-speech</a>-在 Vue2 + Vuetify + Progressive Web App 上使用 Google Cloud 进行文字演讲</li><li><a href="https://github.com/aofdev/vue-speech-streaming">vue-speech-streaming</a>-在渐进式 Web App 上执行流式语音识别可通过 Google Cloud Speech + socket.io 实时生成语音到文本</li><li><a href="https://github.com/limichange/my-animation-list">我的动画列表</a>-一个易于获取 CSS 动画代码的工具</li><li><a href="https://github.com/aofdev/vue-input-streaming">vue-input-streaming</a>-使用 Pusher 进行 TextInput 流实时和双向数据绑定广播</li><li><a href="https://github.com/eggplanetio/tidytab">TidyTab</a>-一个 Chrome 扩展程序，用于整理这些标签。</li><li><a href="https://github.com/headwirecom/peregrine-cms">peregrine-cms</a>-基于 Vue.js 和 Apache Sling 的可选 CMS</li><li><a href="https://github.com/concept-to-clinic/concept-to-clinic">concept-to-clinic</a>-具有 Vue.js 界面的肺癌预测项目</li><li><a href="https://github.com/louisbourque/grid-awesome">grid-awesome</a>-使用 css 显示为网格布局生成样板 css：grid; 属性。</li><li><a href="https://github.com/cristijora/vue-light-bootstrap-dashboard">Light Bootstrap 仪表板</a>-为 Vue 制作的创意 Tim Light Bootstrap 仪表板</li><li><a href="https://github.com/picocodes/hubaga">Hubaga</a>-适用于开发人员和其他数字商店的免费轻量级 WordPress 电子商务插件。</li><li><a href="https://github.com/ndro/vue-webpack-buefy">vue-webpack-buefy</a>-具有全功能 Webpack 和 Buefy 的 Vue.js 入门</li><li><a href="https://github.com/bkzl/coypu">Coypu</a>-类似文本编辑器的每周计划</li><li><a href="https://github.com/skyhark-projects/core-server">核心服务器</a>-高度可扩展的 VueJs 框架，具有集成的 API 系统和多种高级功能。</li><li><a href="https://github.com/NNTin/discord-logo">discord-logo</a>-基于 SVG 的 Vue.js 动画不和谐徽标生成器。(<a href="https://nntin.github.io/discord-logo/">Github 页面</a>)</li><li><a href="https://github.com/mubaidr/node-vue-template">node-vue-template</a>-用于使用 Node.js(API)和 Vue.js(SPA)构建完整应用程序的入门模板，其中包括一些软件包和配置，以帮助快速开始开发。</li><li><a href="https://github.com/DivanteLtd/vue-storefront">vue-storefront</a>-Vue.js 店面-电子商务的 PWA。100％离线，与平台无关，无头，支持 Magento2。</li><li><a href="https://github.com/freedomotic/fd-vue-webapp">fd-vue</a>-IoT 框架的 Vue.js 客户端</li><li><a href="https://github.com/cheng-kang/wildfire">wildfire</a>-其他注释插件的替代品。</li><li><a href="https://github.com/ridereceipts/ridereceipts">收据</a>-简单的自动化桌面应用程序，可以从 Uber 和 Lyft 下载并整理您的税款发票。</li><li><a href="https://github.com/mubaidr/vue-chrome-extension-boilerplate">vue-chrome-extension-boilerplate</a>-使用 Vue.js 和 Webpack 进行 Chrome 扩展的样板</li><li><a href="https://github.com/MarsZone/TimeMark">TimeMark</a>-一个可以记录您的时间的时间管理器，还将开发更多功能。</li><li><a href="https://github.com/laravel-enso/enso">Laravel Enso</a>-由 Bulma，VueJS 和 Laravel 构建的 SPA 管理面板，开箱即用地打包了很多功能。</li><li><a href="https://github.com/lauthieb/code-notes">代码说明</a>-针对使用 Electron＆Vue.js 构建的开发人员的简单代码段管理器。</li><li><a href="https://github.com/Splode/pomotroid">Pomotroid</a>-简单，美观且可自定义的 Pomodoro 计时器。</li><li><a href="https://github.com/bradoyler/xmr-miner">XMR Miner</a>-加密货币(XMR)挖掘应用程序，使用 Vue.js 构建并使用 D3 进行可视化</li><li><a href="https://github.com/bradoyler/xmr-paper">XMR Paper</a>-Monero 钱包生成器，使用 Vue.js 构建</li><li><a href="https://github.com/sh0cked/joy-proxy">JoyProxy</a>-Chrome 扩展程序，用于处理代理设置</li><li><a href="https://github.com/mubaidr/activity-automation">活动自动化</a>-管理日常活动并及时获取报告。</li><li><a href="https://github.com/generateui/jsettlers-web">jsettlers-web</a>流行的德国棋盘游戏，用赚来的资源建造六角形，定居点，城市，道路</li><li><a href="https://github.com/tamiat/tamiat">Tamiat CMS</a>-Tamiat 是面向前端的 CMS，使用 Vue.JS 作为前端，并与 Firebase 集成了后端功能。</li><li><a href="https://github.com/vuegg/vuegg">vuegg</a>-vue GUI 生成器：一次性创建模型和代码！它通过其可视化编辑器利用页面，组件和样式的创建。为您的下一个 vuejs 项目生成所有脚手架代码。</li><li><a href="https://github.com/podlove/podlove-web-player">Podlove Web Player</a>-经过 Podcast 优化的基于 HTML5 的音频播放器，具有章节，字幕和嵌入功能。</li><li><a href="https://github.com/kaleguy/leovue">Leo Vue</a>-使用开源 Leo 概述编辑器/ IDE 创建带有嵌套菜单的 Web 应用程序，并支持内容中的 Vue 组件。</li><li><a href="https://github.com/MisRob/Justine">Justine</a>-使用 Vue 组件作为文档模板的可配置 HTML 文档生成器(当前支持 JSDoc)</li><li><a href="https://sh0cked.github.io/deezer-vue/">Deezer-Vue</a>-使用 Vue \ Vuex 构建的 Deezer 客户端</li><li><a href="https://vuep.run/">Vuep.run</a>-Vue 的在线 SFC 编辑器</li><li><a href="https://github.com/VeryWow/v-oogle">V·oogle</a>-Google.com，已修订</li><li><a href="https://github.com/tatyshev/pomidorus">Pomidorus</a>-使用 Vue 和 D3 构建 Pomodoro 时间跟踪器 🍅</li><li><a href="https://hubble.js.org/">Hubble</a>-：telescope：浏览 GitHub Stars 的历史。</li><li><a href="https://vuepress.vuejs.org/">Vuepress</a>-简约的 Vue 驱动的静态网站生成器</li><li><a href="https://github.com/jaywink/socialhome">Socialhome</a>-具有社交网络功能的联合富个人资料生成器</li><li><a href="https://github.com/herbat73/GenVue">GenVue</a>-一个可托管的 Web 应用程序，允许机密用户上传和共享基于 Vue.js，Vuetifyjs 和 NetCore WebAPI 堆栈的私有文件</li><li><a href="https://github.com/BlackHole1/vue-array">vue-array</a>-Vue 下的数组对象操作，Vue 下的数组对象操作使用此包可操作数组。Vue 可以监视阵列中的更改</li><li><a href="https://github.com/laqul/laqul">Laqu-l</a>-具有 Quasar Framework，带有 OAUTH 2.0 身份验证的 GraphQL API 后端，Firebase 就绪，多语言功能等的完整应用入门套件。</li><li><a href="https://github.com/v1Labs/protovue">Protovue</a>-一个原型组件库，可帮助设计人员和开发人员快速搭建抽象的应用程序布局。</li><li><a href="https://github.com/raniesantos/chattier">Chattier</a>-使用 Laravel 5.6，Vue.js 2 和 Bulma(Buefy 组件+ Bulmaswatch 主题)构建的 SPA 社交网络。还使用 JWT 身份验证。</li><li><a href="https://github.com/johndatserakis/chrome-ribbon-reminder">chrome-ribbon-reminder</a>-使用 Vue 和 Async / Await 编写的 Chrome 扩展程序。使用弹出显示并更改徽章计数。</li><li><a href="https://www.faviator.xyz/">收藏夹</a>-一个简单的简单收藏夹生成器。</li><li><a href="https://github.com/modularsoftware/genealogy">模块化家谱</a>-使用 Laravel 5.7，Vue.js 2.5 和各种组件的家谱/族谱管理系统。工作正在进行中。</li><li><a href="https://github.com/vladocar/Minimal-Notes">最小注释</a>-使用 Vue.js 构建 Web 应用</li><li><a href="https://github.com/serversideup/roastandbrew">烘焙</a>一个应用程序，旨在帮助咖啡爱好者在学习 Laravel + Vue.js 的同时找到他们的下一杯咖啡。</li><li><a href="https://github.com/benweet/stackedit/">堆栈编辑</a>-浏览器内 Markdown 编辑器</li><li><a href="https://bael-theme.jake101.com/">Bael 博客模板</a>-静态生成的博客模板，该模板使用 Netlify CMS 作为后端，使用 Netlify 进行托管。具有野蛮美学，模糊搜索，无服务器电子邮件注册等功能。</li><li><a href="https://buefy-shop.now.sh/">Buefy Shop</a>示例商店，开源的，具有 Nuxt，Stripe，Firebase，Bulma 和无服务器功能。</li><li><a href="https://github.com/Lt0/sysmon">sysmon</a>用于 Linux 的 AB / S 模式系统监视器。您可以在任何地方通过 Web 浏览器远程监视系统资源的使用情况。</li><li><a href="https://github.com/DOkwufulueze/eth-vue">eth-vue</a>一个松露盒子，提供您快速构建具有 Vue.js 身份验证功能的以太坊 dApp 所需的一切，包括易于部署到 Vue.js 的配置。 Ropsten 网络。它还具有 Gravatar 功能。</li><li><a href="https://github.com/ssshooter/nippon-color">Nippon-color</a>受 nipponcolors 点 com 的启发。这是使用 vue-cli 3 的日本彩色 PWA 版本。</li><li><a href="https://github.com/saleina/SaleinaCMS">Saleina CMS</a>一个静态网站内容管理系统，使用 git 作为后端使用 vue 构建。</li><li><a href="https://github.com/mimecorg/vuido">Vuido</a>用于创建本机桌面应用程序的框架。它可以使用本机 GUI 组件在 Windows，OS X 和 Linux 上运行。</li><li><a href="https://github.com/ahmetzeybek/YouGet">YouGet</a>YouTube 视频/音频/字幕下载器+ Cutter</li><li><a href="https://github.com/wesssel/vue-pug-stylus">Vue Pug 手写笔</a>Vue + Pug +手写笔样板 💚🐶🖌</li><li><a href="https://github.com/Bartozzz/crypto-news">Crypto News</a>允许您转换加密货币，查看每个 ICO 的最新新闻和汇率–来自一个加密货币世界的所有数据。</li><li><a href="https://github.com/Alexays/Epiboard">Epiboard</a>一个新的选项卡页面扩展，具有材料设计和有用的功能：new：：tada：</li><li><a href="https://github.com/zhudyos/duic">zhudyos / duic</a>分布式配置中心：新：</li><li><a href="https://github.com/ivanlori/Vuemmerce">Vuemmerce</a>使用 Vue.js 和 Bulma 框架构建的免费电子商务模板：新：</li><li><a href="https://github.com/alirizaadiyahsi/Nucleus">Nucleus</a>分层体系结构 ASP.NET Core API 和 Vuejs 客户端应用程序启动模板</li><li><a href="https://github.com/STS-Rosario/carpoolear">Carpoolear</a>阿根廷拼车应用程序的开源 Vue.js 前端(移动和 Cordova 应用程序)：[Carpoolear](<a href="https://carpoolear.com./">https://carpoolear.com。</a> ar)</li><li><a href="https://github.com/bazzite/statusfy">Statusfy</a>：Statusfy 是一个状态页面系统，易于使用且完全开源。</li><li><a href="https://github.com/Arattian/DynamoDb-GUI-Client">DynamoDb-GUI-Client</a>：DynamoDb 的跨平台 GUI 客户端</li><li><a href="https://github.com/SnakeyHips/RosterWebApp">RosterWebApp</a>开源名册 Web 应用程序，允许对员工/团队的名册进行工作会议和其他功能。</li><li><a href="https://github.com/rash0/Vue-Ecom">Vue 电子商店 Templet</a>-带有 vue / vuex / vue-router 和 bootstrap4 的电子商务 Templet。</li><li><a href="https://kitty-ipsum.com/">Kitty Ipsum</a>-生成由不同语言的“喵”组成的 lorem ipsum。</li><li><a href="https://git-superstar.firebaseapp.com/">Git Superstar</a>-计算您的 git 星级和顶级存储库。</li><li><a href="https://twill.io/">Twill</a>-用于 Laravel 的开源 CMS 工具包，可帮助开发人员快速创建直观，强大而灵活的自定义管理控制台。</li><li><a href="https://mathbot.com/">MATH_BOT</a>-通过对机器人编程来学习数学。</li><li><a href="https://github.com/Piterden/vue-crossword">Vue 填字游戏</a>-一个基于 Vue.js 的填字游戏构建器和填充前端应用程序。使用<a href="https://codesandbox.io/s/github/Piterden/vue-crossword/tree/master/">CodeSandbox</a>构建。</li><li><a href="https://github.com/Hoogkamer/vue-org-chart">Vue 组织结构图</a>-免费管理和发布您的交互式组织结构图(orgchart)，无需网络服务器。</li><li><a href="https://github.com/ModusCreateOrg/beep">哔</a>-使用 Vue.js 和 Ionic 4 构建的帐户安全扫描程序</li><li><a href="https://github.com/szczepanmasny/vue-crud">Vue CRUD</a>-基于 Vue.js 的 REST-ful CRUD 系统。Vue CRUD 允许您轻松创建快速应用程序，例如 CMS 或 CRM。</li><li><a href="https://vue-hq.netlify.com/">Vue HQ 管理员仪表板</a>–由 Vue，Sass，Firestore 和 Netlify 支持的现代管理仪表板。</li><li><a href="https://github.com/satriaajiputra/mtodo">MToDo</a>-带有简单身份验证的迷你待办事项列表，该身份验证是使用 Vue.js 和 JSON Server 作为数据模拟构建的。非常适合作为发现有关真实 Vue.js 参考的任何人的参考</li><li><a href="https://github.com/Orogenesis/FireX-Proxy">FireX 代理</a>-FireX 代理是用户值得信赖的 Chrome 和 Firefox 浏览器扩展程序，可让您解除阻止任何网站的权限并私密安全地浏览 Web。🛡</li><li><a href="https://github.com/silent-lad/VueSolitaire">VueSolitaire</a>-接龙(spider，klondike)包含在 Vue.js 中。</li><li><a href="https://thermal.codecarrot.net/">Thermal</a>-一站式访问所有 Git 存储库。</li><li><a href="https://github.com/qmk/qmk_configurator">QMK Configurator</a>-Vue.js 中的 QMK 固件键盘配置 UI。</li><li><a href="https://github.com/Janglee123/eplee">Eplee</a>用 Vue.js 和 Electron.js 制作的甜美，简单的 epub 阅读器。</li><li><a href="https://github.com/gothinkster/vue-realworld-example-app">vue-realworld-example-app</a>-示例性全栈 Medium.com 克隆</li><li><a href="https://github.com/dailynowco/daily">每日</a>-精选的开发新闻已传递到您的新标签页 👩🏽‍💻</li><li><a href="https://github.com/alexusmai/laravel-file-manager">Laravel 文件管理器</a>-Laravel 的强大文件管理器</li><li><a href="https://github.com/JayeshLab/vue-crypto-dashboard">Vue 加密仪表板</a>-用 Vue.js 制作的 Cryptocurrency 仪表板</li></ul><h2 id="商业产品"><a href="#商业产品" class="headerlink" title="商业产品"></a>商业产品</h2><ul><li><a href="http://wijmo.com/products/wijmo-5/">Wijmo</a>-具有 VueJS 支持的 UI 控件的集合。</li><li><a href="http://www.xn--collatenotes-qy9fa.com/">整理说明</a></li><li><a href="https://www.formester.com/">Formester</a>-表格，电子邮件营销自动化变得容易</li><li><a href="https://www.chatwoot.com/">ChatWoot</a>-通过 Facebook Messenger 进行 Livechat 和代理协作。</li><li><a href="https://themeforest.net/item/vuejs-laravel-admin-template/20119122?ref=jyostna&utm_source=awesomevue">VueA</a>-具有多种布局和 laravel 版本的 VueJS 管理模板。</li><li><a href="https://www.teleo.co/?utm_source=AwesomeVue">Teleo</a>-团队合作应用在讲话，计划和做事之间轻松移动</li><li><a href="http://cover.20theme.com/">Cover</a>-基于 Vue.js 构建的高质量组件库</li><li><a href="https://geteducation.link/?utm_source=AwesomeVue">EducationLink</a>-适用于教育代理商和大学的 CRM 和销售自动化。</li><li><a href="https://1.envato.market/LYWqL">Pragmatic v2.0</a>-使用 Vue.js 和 Element 构建的响应式和可配置管理模板。</li><li><a href="https://www.useseat.com/">座位</a>-简单而现代的团队沟通和协作解决方案。</li><li><a href="https://moonitor.io/">Moonitor</a>-台式机的加密货币跟踪器。</li><li><a href="https://deskree.com/">Deskree</a>-将想法，任务和问题集中在一处的在线协作平台。</li><li><a href="https://oshcexpress.com/?utm_source=AwesomeVue">OSHCExpress</a>-OSHC(海外学生健康保险)保险(澳大利亚国际学生保险)的比较和电子商务。</li><li><a href="https://www.agiloo.com/">Agiloo</a>-适用于 Scrum 和看板的项目管理应用</li><li><a href="https://www.scaffoldhub.io/">ScaffoldHub</a>-带有 NodeJS，MongoDB 或 SQL 的 VueJS 在线 Web App 生成器。</li><li><a href="https://getcommandeer.com/">Commandeer</a>-可以重新构想管理。使用 Vue.js 和 Electron 构建的桌面云管理应用程序。</li><li><a href="https://app.emailbuilder.top/">SA Email Builder</a>-使用 VueJS 和 Quasar Framework 做出响应的电子邮件模板构建器</li></ul><h2 id="应用-网站"><a href="#应用-网站" class="headerlink" title="应用/网站"></a>应用/网站</h2><ul><li><a href="https://spark.laravel.com/">Laravel Spark</a></li><li><a href="https://video.vice.com/">副视频</a></li><li><a href="https://www.formlets.com/">表格</a></li><li><a href="https://laracasts.com/">Laracasts</a></li><li><a href="https://esa.io/">esa.io</a></li><li><a href="http://gold.xitu.io/">稀土掘金</a></li><li><a href="http://www.prague-airport.com/">布拉格机场</a></li><li><a href="http://corentinbac.com/">投资组合网站</a></li><li><a href="https://laravist.com/">乐风乐团</a></li><li><a href="https://atiiv.com/">Atiiv</a>-面向私人教练及其客户的应用程序。</li><li><a href="https://statamic.com/">统计</a></li><li><a href="http://embalses.azurewebsites.net/">Embalses！</a>-使用美国地质调查局数据库报告水坝水位的工具。</li><li><a href="http://clem.travelmap.fr/">TravelMap</a>-旅行者基于地图创建博客的简单方法。</li><li><a href="https://propercloth.com/design-a-shirt">适当的衬衫制造商</a>-定制衬衫的制造商。</li><li><a href="https://check-it.io/">CheckIt</a></li><li><a href="https://github.com/Mati365/reddit-news">Reddit 新闻</a>-浏览器扩展程序，用于显示来自 reddit 的通知和新闻。</li><li><a href="https://www.powerpuffyourself.com/">卡通网络自行制作 Powerpuff</a></li><li><a href="https://app.xiaotaojiang.com/">小桃酱</a></li><li><a href="http://cloudradioo.com/">cloudradioo</a>-Web 应用程序，可随机播放 soundcloud 图表中的前 50 首歌曲</li><li><a href="https://halfeld.github.io/v-notes/#!/">vNotes</a>-使用 Vue.js 和本地存储 API 的 Markdown 简洁漂亮的记事本。</li><li><a href="http://www.openfunctioncomputers.com/#!/home">开放功能计算机</a></li><li><a href="https://github.com/zllovesuki/dermail-webmail">Dermail</a>-用 Vue.js 编写的针对 Dermail 的 Webmail 客户端，Dermail 是用 node.js 编写的邮件系统。</li><li><a href="https://www.octimine.com/">octimine</a>-专利搜索引擎。</li><li><a href="https://www.draxed.com/">Draxed</a>-基于 Web 的 MySQL 和 PostgreSQL 数据浏览器和仪表板管理器。</li><li><a href="http://www.leapspotleap.com/">Leapspotleap</a>-查找您附近的 Wikipedia 文章的简单方法。或只是导航到一个地方并找到有趣的维基百科信息。响应式 Web 应用程序。</li><li><a href="http://xiangsongtao.com/">X-SONGTAO</a>-个人博客。FE 和 CMS 位于同一 vue SPA 中。</li><li><a href="https://jobinja.ir/">Jobinja</a>-在伊朗运营的求职委员会和职业平台。</li><li><a href="https://putianxi.github.io/">滚蛋吧！莆田系</a>-显示所有 Put 田医院的信息</li><li><a href="https://www.jobi.tn/">Jobi：招聘平台</a></li><li><a href="https://www.thespicehouse.com/">香料屋</a>-高质量香料的电子商务网站。结帐，购物车，产品详细信息页面和搜索是使用 Vue 构建的。Checkout 是用 Vue＆Vuex 编写的单页应用程序。</li><li><a href="http://livestorm.co/">Livestorm</a>-网络研讨会/直播活动应用。</li><li><a href="https://metricloop.com/">Metric Loop</a>-一个技术服务和解决方案网站。</li><li><a href="https://www.holden.com.au/">保持</a></li><li><a href="https://global-exam.com/">全球考试</a>-语言能力测试在线培训</li><li><a href="https://github.com/zllovesuki/slugsurvival">SlugSurvival</a>-一个可帮助学生更好地计划课程的网络应用程序(业余项目，不属于 UCSC)。</li><li><a href="https://www.freepoll.online/">FreePoll.Online</a>-使用 Vue.js，vue 可排序，语义 UI 和 Zappa 构建的群体决策工具。</li><li><a href="https://github.com/ChangJoo-Park/gitrelease-app">GitRelease</a>-使用带有电子的 vue.js 在 mac 菜单栏上跟踪 github 项目的新版本。</li><li><a href="https://12bay.vn/">12BAY.VN</a>-在线预订机票。</li><li><a href="https://playcode.io/">PLAYCODE.IO</a>-快速前端实验的游乐场。</li><li><a href="http://thevoidrad.io/">The Void Radio</a>-地下室内音乐在线广播。</li><li><a href="https://alpixel.github.io/bitly-vuejs">Bitly Vue</a>-使用 VueJS 和 Bitly API 缩短 URL。</li><li><a href="https://www.storyblok.com/">Storyblok</a>-使用 VueJS 作为前端的基于 API 的/分离的 CMS。</li><li><a href="https://wizzair.com/">WizzAir</a></li><li><a href="https://movingtohttps.com/">移至 HTTPS</a>-有关将不同平台/托管站点移至 HTTPS 的指南</li><li><a href="https://booknshelf.com/">Booknshelf</a>-发现有关不同主题的出色书籍和书架。</li><li><a href="https://tophn.info/">Top HN</a>-在 Hacker News 上实时显示最新新闻活动</li><li><a href="http://www.euronews.com/">Euronews</a>-Euronews 是一种多语言新闻媒体服务，总部位于法国里昂。</li><li><a href="http://www.roozame.com/">Roozameروزامه??</a>-Roozame 是波斯语的智能新闻媒体服务。</li><li><a href="https://koumoul.com/">Koumoul</a></li><li><a href="http://ninja-calc.mbedded.ninja/">NinjaCalc</a>-一组与嵌入式工程相关的计算器，使用 vue.js 作为开源单页应用程序构建。</li><li><a href="https://vuejsfeed.com/">Vue.js Feed</a>-最新的 Vue.js 新闻，教程，插件等。基于<a href="https://github.com/Vuedo/vuedo">Vuedo</a>，使用 Vue.js 和 Laravel 制作。</li><li><a href="https://github.com/JasonBai007/suanban">蒜瓣</a>-使用 Vue2.0 和 Douban API 开发的网络应用</li><li><a href="https://kdcinfo.com/guessright/">猜对了</a>-一个“猜单词”游戏-用 Vue / vuex / vue-router(前端)和 Laravel / MySQL(后端)编写。代码是<a href="https://github.com/KDCinfo/guess-right">GitHub 上的开源</a>(尽管不是在 kdcinfo 上运行游戏的实时文件)。</li><li><a href="https://grap.io/">GRAP</a>-商业通讯服务</li><li><a href="https://easy-mock.com/">简易模拟</a></li><li><a href="https://github.com/lincenying/mmf-blog-vue2-ssr">mmf-blog-vue2-ssr</a>使用 Vue 2.0，vue-router 和 vuex 构建的博客，并具有服务器端渲染</li><li><a href="https://json-schema-editor.tangramjs.com/">JSON 模式编辑器</a>-使用 Vue.js 和 Firebase 构建的 JSON 模式的直观编辑器。</li><li><a href="https://splode.github.io/trivia/">Winsome Trivia</a>-一个单人或多人琐事游戏，具有由 Vue.js 构建并由 Open Trivia 数据库提供支持的 2,000 多个独特问题。</li><li><a href="https://moonorganizer.com/calendar/">Moon Organizer</a>-农历日历应用</li><li><a href="https://flash-vue.com/">Flash-Vue</a>-“未来的抽认卡”将学习无处不在：rocket：</li><li><a href="https://www.kinderbesteck-gravur.de/">Kinderbesteck</a>-具有 Vue2.0，Vuex，Vue 路由器的完整在线商店 SPA</li><li><a href="https://github.com/OrangeXC/n2ex">n2ex</a>-vue ssr(必须)网站，请使用 v2ex API</li><li><a href="https://www.powerthesaurus.org/">词库</a>-众包在线词库</li><li><a href="https://chattanosy.com/">Chattanosy</a>-由社区提供的田纳西州查塔努加新事物的数据库。</li><li><a href="http://www.paixin.com/">PAIXIN</a>-正版图片销售网站</li><li><a href="https://codebottle.io/">CodeBottle</a>-将代码段拖放到您的项目中</li><li><a href="https://1xbet.com/">1XBET</a>-自 2007 年开始运营的博彩公司</li><li><a href="http://myowntv.org/">MyOwnTV</a>-用于创建互联网电视的流媒体网站</li><li><a href="https://crowdcircus.com/">CrowdCircus</a>-欧洲最大的众筹和众筹平台</li><li><a href="https://talktosomeone.net/">与某人交谈</a>-与世界各地的陌生人进行免费，匿名和保密的在线文本聊天。</li><li><a href="http://www.wheelsfactory.cn/">车轮工厂</a>-ui 组件和库共享网站</li><li><a href="http://naaab.ir/">ابیاتنابپارسی</a>-波斯诗集</li><li><a href="https://github.com/devjin0617/ripplectron">Ripplectron</a>-Ripple(区块链硬币)vue-electron 的电子钱包桌面客户端</li><li><a href="https://pingbreak.com/">PingBreak</a>使用 vuejs 作为实时仪表板的免费，简单的网站监控服务</li><li><a href="https://github.com/rohitpaulk/todoist-tribute/">Todoist 致敬</a>-Todoist 克隆，用 Rails + Vue 编写</li><li><a href="https://json-editor.tangramjs.com/">JSON 编辑器</a>-使用 Vue2 和 firebase 构建的可识别架构的 JSON 编辑器。</li><li><a href="https://www.develteam.com/">Develteam</a>-独立游戏开发者的社交网络。</li><li><a href="https://www.mixsii.com/">Mixsii</a>-适用于青少年，成人，家人和朋友的免费视频聊天室网站。</li><li><a href="http://pipquest.gregorterrill.com/">PipQuest</a>-Vue 中内置的复古益智游戏</li><li><a href="https://matryx.ai/">Matryx</a>-去中心化的协作平台。</li><li><a href="https://chrome.google.com/webstore/detail/iprevyou-youtube-player/blijlgfnjhnhmnaldaiienmjggbjhbaa">iPrevYou-YouTube™ 播放器</a>-用于在桌面上观看 youtube 视频的 Chrome 应用。</li><li><a href="https://itemmanager.uk/">物品管理器</a>-传送命运 2 游戏物品的应用程序。</li><li><a href="https://frontendmasters.com/courses/vue/">前端大师 Vue 简介</a>-前端大师全日制课程</li><li><a href="https://inverted3.gitlab.io/drum-machine/">TR-101</a>-鼓合成器/音序器。</li><li><a href="https://bazaar.co/">Bazaar</a>-媒体共享平台。</li><li><a href="https://maple3142.github.io/wynn/">WynnStats</a>-非官方的 WynnCraft 统计信息。</li><li><a href="https://vectr.com/new">Vectr</a>-免费的矢量图形软件</li><li><a href="https://github.com/dashersw/brain-bits">大脑位</a>-Emotiv 耳机的 P300 在线拼写机制</li><li><a href="https://www.coin-dashboard.com/">Coin Dashboard</a>-完全客户端的加密货币资产仪表板。</li><li><a href="https://habitica.com/">Habitica</a>-角色扮演游戏形式的在线任务管理应用程序。</li><li><a href="https://madewithvuejs.com/">MadeWithVueJs</a>-由 Vue.js 制作的项目图库(网站本身也使用 Vue.js)</li><li><a href="https://github.com/NeutroniumCore/CodeDependencyScanner/">CodeDependencyScanner</a>-显示.Net 汇编代码依赖关系的 AC＃dektop 应用程序使用 Vue，Neutronium 和 D3.js 构建。</li><li><a href="https://thousandetherhomepage.com/">千以太坊首页</a>-百万美元首页被重新构想为以太坊 DApp。在 Vue.js 上构建并开源。</li><li><a href="https://letsenhance.io/">让我们着迷</a>-免费的在线图像升级和神经网络增强功能。</li><li><a href="https://pi.team/">Pi.TEAM-在线发票和会计</a>-简单易用的在线会计和发票，单用户和自由职业者免费。</li><li><a href="https://github.com/sc0vu/vuethwallet">Vuethwallet</a>-一个简单的应用程序使用 vuejs 生成以太坊钱包。</li><li><a href="https://tipe.io/">Tipe</a>-下一代 API 优先的 CMS。使用功能强大的编辑工具创建内容，并使用 GraphQL 或 REST API 从任何地方访问它。停止让 CMS 决定如何构建应用。</li><li><a href="https://github.com/sc0Vu/vuethexplore">Vuethexplore</a>-一个简单的应用程序使用 vuejs 探索以太坊区块链。</li><li><a href="https://www.fintechers.io/">Fintechers</a>-以 Fintech 为重点的工作委员会。</li><li><a href="https://www.devjournalapp.com/">Devjournal</a>-项目和构想的协作待办事项列表。</li><li><a href="https://bubbleflat.com/">Bubbleflat</a>-一种在线平台，可通过搜索具有相似生活方式，兴趣爱好或学校的人来帮助学生和年轻的专业人  士找到理想的室友。Laravel 和 Vuejs</li><li><a href="https://teaquinox.com/">TeaQuinox Tea Co</a>-专门从事散叶茶的电子商务网站。</li><li><a href="https://blip.website/">blip</a>-测试网站的速度，移动友好性，安全性和 HTML5 文档类型。在某个位置查找商家，然后整体测试其网站，或者只是测试您自己的 URL。</li><li><a href="https://sunpos.ru/">sunpos</a>-太阳位置，仰角，方位角，黄道/赤道坐标和日出/日落时间(朱利安日)计算和转换实用程序。使用纯 JS，Vuejs 和 i18n Vuejs 本地化插件对网站进行编程。可视化是使用 D3.js 创建的。</li><li><a href="https://u3xyz.com/">U3xyz</a>-基于 vue ssr 的个人博客。</li><li><a href="https://27.ua/">27.ua</a>-乌克兰的互联网大型超市</li><li><a href="http://vitomd.com/vue-chess-guardian/">国际象棋守护者</a>-从您自己的游戏中回答国际象棋位置问题。</li><li><a href="https://blackjackbreak.com/">二十一点休息</a>-二十一点的快速游戏</li><li><a href="https://addons.mozilla.org/en-US/firefox/addon/mechmod/">MECHANICAL</a>-适用于 Firefox 的 Reddit mod，可显示上下文数据见解。</li><li><a href="https://www.gamevix.com/">GameVix</a>-与他人交换您使用过的视频游戏光盘，无忧。具有材料设计的 PWA。</li><li><a href="https://app.vivifyscrum.com/">VivifyScrum</a>-适用于交付团队的敏捷项目管理应用程序。可定制的 Scrum 和看板板。</li><li><a href="https://9gag.com/">9GAG</a>-流行的在线平台和社交媒体网站</li><li><a href="https://www.cryptovue.com/">CryptoVue</a>-实时加密货币仪表板</li><li><a href="https://kitchenstories.io/">厨房故事</a>-烹饪平台</li><li><a href="https://mailrabbit.io/">MailRabbit</a>-在没有开发人员的情况下创建，A / B 测试和监视交易电子邮件。</li><li><a href="http://vue.awesometiny.com/">Vue 资源精选</a>-出色的 Vue 组件列表，类别，内嵌演示秀和简介</li><li><a href="https://cronhub.io/">Cronhub</a>-无痛 Cron 监控工具</li><li><a href="https://wrkprty.com/">wrkprty</a>-针对自由职业者，远程工作者和希望离开办公室的专业人员的弹出协作活动。</li><li><a href="https://made-with-love.xyz/">用爱制造</a>-世界各地的“用爱制造 ❤️”倡议是庆祝 🎉，促进 📣 和建立 build 品牌的运动。它从 Dribbble，ProductHunt，Behance 和 Techcrunch 等多个来源获取 Tech 新闻，设计灵感和趋势。💝</li><li><a href="https://www.pathtoproduct.com/">产品路径</a>-在创业公司和科技公司中发现超过 1,000 个产品工作。</li><li><a href="http://v-oogle.com/">V·oogle</a>-Google.com，已修订。一个笑话项目。😃</li><li><a href="https://broker-notes.com/">经纪人注释</a>-‘研究成为房地产经纪人’：房屋：</li><li><a href="https://synclounge.tv/">SyncLounge</a>-SyncLounge 是用于在多个位置的多个播放器之间同步 Plex 内容的工具。</li><li><a href="https://www.hce.it/">HCE.it</a>-一家意大利代理商的网站，完全由 Vue 使用基于 Laravel 的无头 CMS 创建。</li><li><a href="https://www.pages.xyz/">页面</a>-网页设计灵感</li><li><a href="https://scrumpy.io/">Scrumpy</a>-敏捷团队的漂亮项目管理工具</li><li><a href="https://spektrummedia.com/">Spektrum</a>-Spektrum Media Agency 网站</li><li><a href="https://www.spk.rocks/">SPK</a>SPK 生态系统的网站</li><li><a href="https://www.iddef.org/">IDDEF</a>☪️ 重视人类的网页，CMS，CRM 和捐赠以及所有电子商务页面的协会联合会均使用 Vue.js，Vuex 和纯 JavaScript 设计 🙏</li><li><a href="http://www.configapp.com/">配置文件管理</a>-一种管理配置文件的简单方法</li><li><a href="https://roastandbrew.coffee/">烘焙</a>这个应用程序旨在帮助咖啡爱好者在学习 Laravel + Vue.js 的同时找到他们的下一杯咖啡。</li><li><a href="https://yangonbusreport.org/">YBR</a>-集中的 YBS 公开电子投诉管理系统。(全 SPA)</li><li><a href="https://regexfiddler.com/">Regex Fiddler</a></li><li><a href="https://myanpwel.com/">Myanpwel</a>-活动票务平台的网站。</li><li><a href="https://www.cryptoarte.io/">CryptoArte</a>-以太坊的艺术品收藏，不可替代的代币和 Dapp。</li><li><a href="https://muuviez.com/">Muuviez</a>-具有时尚设计的电影发现和跟踪网站</li><li><a href="https://nagavirtual.com/">NAGA VIRTUAL</a>-NAGA VIRTUAL 是第一个独立的虚拟商品市场。</li><li><a href="https://scroll.in/">Scroll.in</a>-Scroll.in 是独立的新闻，信息和娱乐企业。</li><li><a href="https://akunyi.com/">Akunyi</a>-慈善网站</li><li><a href="https://www.whatwouldmarkruffalodo.com/">Mark Ruffalo 会做什么？</a>-动机网站基于 Mark Ruffalo 在获得成功之前在数百次试镜中失败的故事。</li><li><a href="https://getbrandy.io/">白兰地</a>-菜单栏的品牌资产管理器。</li><li><a href="https://forum.ruster.xyz/">Ruster 社区</a>-CN 的 Rust 全栈社区论坛。</li><li><a href="https://www.nbcsports.com/">NBC Sports</a>-NBC Sports 是一家体育新闻网站。</li><li><a href="https://www.with.in/">WITHIN</a>-虚拟现实中的非凡故事。</li><li><a href="https://plottr.io/">plottr.io</a>-规划跑步和骑车路线</li><li><a href="https://be.camp/">beCamp</a>-在弗吉尼亚州夏洛茨维尔举行的由社区组织的技术会议。网站代码是开源的。</li><li><a href="https://www.trustpilot.com/">Trustpilot</a>-免费开放给所有评论平台。</li><li><a href="https://lagom.rsstudio.net/">Lagom</a>-简单，直观且响应迅速的 WHMCS 主题</li><li><a href="https://scoutmytrip.com/roadtrip-planner/start">ScoutMyTrip-Roadtrip Planner</a>-印度的公路旅行计划应用程序，可帮助旅行者建立行程，发现景点，寻找酒店，加油站，美食餐厅等沿路线。</li><li><a href="https://podflix.app/">Podflix</a>-播客应用。</li><li><a href="https://gamersclub.com.br/?lang=english">GamersClub</a>-巴西最大的电子竞技社区发展公司</li><li><a href="https://www.mit.edu/">MIT</a>-麻省理工学院的官方网站。</li><li><a href="https://en.elvenar.com/">Elvenar</a>-Elvenar 是一个基于浏览器的幻想城市建设者游戏。</li><li><a href="https://beaconapp.in/">信标</a>-：blue_heart：这项服务可让您在多个网站之间共享内容。</li><li><a href="https://www.artfinder.com/">Artfinder</a>-Artfinder 是买卖艺术品的网站。</li><li><a href="https://rolodromo.com/">Rolodromo</a>-专门用于桌面 RPG 的西班牙语网站。</li><li><a href="https://kiinlam.github.io/GitHubExplorer/">GitHubExplorer</a>-用于探索 GitHub 的纯静态页面 webapp。使用<code>Vuejs</code>和<code>GitHub GraphQL API v4</code>。</li><li><a href="https://github.com/znck/keynote">主题演讲</a>-与 Vue 一同展示。</li><li><a href="https://github.com/morkro/happy-plants">HappyPlants</a>-用于组织植物的渐进式 Web 应用 🌱。</li><li><a href="https://pocketlists.com/">Pocket Lists</a>-世界上最友好的待办事项列表应用程序。</li><li><a href="https://padlet.com/">Padlet</a>-协作公告板</li><li><a href="https://glovoapp.com/en/">Glovo</a>-按需交付</li><li><a href="https://mysigmail.com/create">MySigMail</a>-MySigMail 是一个免费的浏览器电子邮件签名生成器，无需创建帐户</li><li><a href="https://wordguru.netguru.com/">Wordguru</a>-一个简单的口头游戏，您可以分成几个小组，并尝试猜测尽可能多的关键字。</li><li><a href="https://apiflash.com/">ApiFlash</a>-基于 Chrome 的截图 API，基于 AWS Lambda 开发人员专用</li><li><a href="https://kitty-ipsum.com/">Kitty Ipsum</a>-生成由不同语言的“喵”组成的 lorem ipsum。</li><li><a href="https://git-superstar.firebaseapp.com/">Git Superstar</a>-计算您的 git 星级和顶级存储库。</li><li><a href="https://app.decs.xyz/">DECS</a>-分散的多合一工作区，用于管理代码段并保护敏感数据。</li><li><a href="https://careup.mx/">Careup</a>-牙医 🦷 的业务管理工具。</li><li><a href="https://www.asciiur.com/">Asciiur</a>-互联网的 ascii 艺术收藏</li><li><a href="https://tapestridesigner.com/">Tapestri Designer</a>-用于设计用于基因组测序实验(NGS)的 PCR 引物的免费工具</li><li><a href="https://github.com/mritunjaygoutam12/Remote-host">Remote-Access-SSH</a>-使用 node-ssh 的基于 Web 的远程主机访问</li><li><a href="https://map-marker-generator.firebaseapp.com/">地图标记生成器</a>-一个免费的在线工具，可即时生成自定义地图图标</li><li><a href="https://monoclereader.com/">Monocle Reader</a>-在一个地方关注提要，Twitter，YouTube，博客和其他所有内容。</li><li><a href="https://www.frontendjs.com/">前站导航</a>-前端社区，文档收录。</li><li><a href="https://geenes.app/">Geenes</a>-生成调色板并将其应用于 UI，然后将其导出到草图或代码中。</li><li><a href="http://blurrish.cognitusapps.com/">Blurrish</a>-Mac / Windows 加密的 Morning Pages 日记，由 Vue 和 Electron 构建。书写时模糊，因此可以在公共工作区中记录日志。</li><li><a href="https://exifshot.com/">ExifShot</a>-摄影的方式和方式，精美绝伦。</li><li><a href="https://studolog.com/">Studolog</a>-用于学生的在线文件共享平台，包括测试人员和评论。目前仅捷克语 🇨🇿。</li><li><a href="https://www.sumcumo.com/">sum.cumo</a>–数字业务模型(以 Vue 作为技术堆栈的核心)。</li><li><a href="https://github.com/romancm/gamebrary">Gamebrary</a>-用于组织视频游戏收藏的开源工具。</li><li><a href="https://www.guds.shop/">Guds</a>-比较各大超市的价格。仅适用于墨西哥 🇲🇽。</li><li><a href="https://premiumpokertools.com/">Premium Poker Tools</a>-扑克玩家用来学习的东西。</li><li><a href="https://config.qmk.fm/">QMK Configurator</a>-从浏览器配置，构建和下载自定义 QMK 固件。</li><li><a href="https://www.worksome.com/">Worksome</a>-适用于合格的 IT 专业人员，自由职业者以及希望雇用他们的公司的市场/平台。</li><li><a href="https://manuel-suarez-abascal.github.io/translator-vuejs/">Translator-vuejs</a>-使用 Vuejs，Yandex API 和 ResponsiveVoice.js API 构建的翻译应用程序。</li><li><a href="https://www.bigtimer.net/">大计时器</a>-用于研讨会，会议和演示的全屏倒数计时器。Big Timer 可以帮助研讨会主持人，会议椅，设计短跑选手，演示者和有抱负的游戏节目主持人坚持自己的计划。</li><li><a href="https://wirenook.com/">Wirenook</a>-用于构建响应式网站线框的免费在线应用程序。高保真和低保真，项目共享和 svg 下载。</li><li><a href="https://www.kvalitetskontroll.no/">Kvalitetskontroll</a>-为建筑业量身定制的挪威管理系统。</li><li><a href="https://poolside.fm/">Poolside FM</a>-复古音乐播放器</li></ul><h2 id="互动体验"><a href="#互动体验" class="headerlink" title="互动体验"></a>互动体验</h2><ul><li><a href="http://1700laposte.com/jean-pierre-morin/">Jean-Pierre Morin | 1700 LAPOSTE</a></li><li><a href="https://newsfeed.fb.com/">Facebook NewsFeed</a></li><li><a href="https://adblitz.withyoutube.com/#!/advertisers">YouTube AdBlitz 2016</a></li><li><a href="http://omnisense.net/">Omnisense 体验</a></li><li><a href="http://louisansa.com/">Louis Ansa 网站(投资组合)</a></li><li><a href="http://www.djeco.com/en">Djeco.com</a></li><li><a href="https://tolks.io/">Tolks.io</a></li><li><a href="http://www.meetgraham.com.au/">遇见 Graham</a></li><li><a href="http://noizeoriginal.com/">NOIZE 原创</a></li><li><a href="https://inverted3.gitlab.io/drum-machine">TR-101 合成鼓机</a></li><li><a href="http://www.itwonders-web.com/bootstrap4-editor/">Bootstrap 4 编辑器</a></li><li><a href="https://subtletab.com/">Subtletab-浏览器扩展</a></li><li><a href="https://web-riimote.herokuapp.com/">web-riimote</a>-将您的智能手机变成 3D 控制器(<a href="https://github.com/konaraddio/web-riimote">源代码</a>)</li><li><a href="https://csscolorvars.github.io/">CSS ColorVars</a>-交互式工具代码生成(<a href="https://github.com/CSSColorVars/csscolorvars">源代码</a>)</li></ul><h2 id="企业用途"><a href="#企业用途" class="headerlink" title="企业用途"></a>企业用途</h2><ul><li><a href="https://sainsburys.jobs/">塞恩斯伯里的</a></li><li><a href="https://arex.io/">AREX</a> -大疆创新 -Octimine GmbH -浑力集</li><li><a href="https://about.gitlab.com/2016/10/20/why-we-chose-vue/">GitLab</a></li><li><a href="http://clemengerbbdo.com.au/">Clemenger BBDO Melbourne</a></li><li><a href="https://zenmate.com/">ZenMate</a></li><li><a href="https://blog.codeship.com/consider-vuejs-next-web-project/">代码</a></li><li><a href="https://app.storyblok.com/">Storyblok</a></li><li><a href="https://www.monito.com/">Monito</a>-建立 Booking.com 以进行国际汇款</li><li><a href="https://hypefactors.com/">Hypefactors</a>-数据驱动的 PR 专业人员的软件 -Adobe -IBM</li><li><a href="https://cotabox.com.br/">Cotabox</a></li><li><a href="https://aromajoin.com/">Aromajoin</a>-基于硬件，软件和材料技术的协调发展最好的数字气味产品。</li><li><a href="https://www.carrefour.fr/">家乐福</a></li></ul><h2 id="A11y"><a href="#A11y" class="headerlink" title="A11y"></a>A11y</h2><ul><li><a href="https://github.com/vue-a11y">Vue A11y 项目</a>-Vue.js 社区项目，用于改善 Web 可访问性。</li><li><a href="https://github.com/vue-a11y/vue-skip-to">vue-skip-to</a>-它可以帮助仅使用键盘的人跳到最重要的地方。</li><li><a href="https://github.com/vue-a11y/vue-axe">vue-axe</a>-Vue.js 应用程序的可访问性审核。</li><li><a href="https://github.com/vue-a11y/vue-announcer">vue-announcer</a>-Vue 的一种简单方法，可为屏幕阅读器宣布任何有用的信息。</li><li><a href="https://github.com/maranran/eslint-plugin-vue-a11y">eslint-plugin-vue-a11y</a>-用于.vue 中元素可访问性规则的静态 AST 检查器</li><li><a href="https://github.com/theKashey/vue-focus-lock">vue-focus-lock</a>-这是一个陷阱！焦点锁定。A11y util，用于确定焦点。</li><li><a href="https://github.com/IBM/vue-a11y-calendar">vue-a11y-calendar</a>-可访问的国际化 Vue 日历。</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ul><li><a href="https://github.com/ratiw/vuetable-2">vuetable-2</a>数据表简化</li><li><a href="https://github.com/matfish2/vue-tables-2">vue-tables-2</a>-Vue.js 2 网格组件。</li><li><a href="https://github.com/coderdiaz/vue-datasource">vue-datasource</a>-一个 vue.js 服务器端组件，用于创建动态表。</li><li><a href="https://github.com/ag-grid/ag-grid/tree/master/packages/ag-grid-vue">ag-grid-vue</a>-用于 ag-Grid 的 Vue 适配器。</li><li><a href="https://github.com/njleonzhang/vue-data-tables">vue-data-tables</a>-Vue2.0 数据表，基于 element-ui。</li><li><a href="https://github.com/tmlee/vue-floatThead">vue-floatThead</a>-用于 floatThead 的 Vue 2.0 组件，floatThead 是一个浮动的粘性表头插件。</li><li><a href="https://github.com/andrewcourtice/vuetiful/tree/master/src/components/datatable">vuetiful-datatable</a>-具有排序，过滤，分页，分组和聚合的数据表组件。</li><li><a href="https://github.com/MicroDroid/vue-materialize-datatable">vue-materialize-datatable</a>-Materialize CSS 的 VueJS 数据表</li><li><a href="https://github.com/xaksis/vue-good-table">vue-good-table</a>-一个易于使用的 VueJS(2.x)表插件，具有排序，列过滤，分页等功能。</li><li><a href="https://github.com/dzwillia/vue-grid">vue-grid</a>-Vue.js 的灵活网格组件</li><li><a href="https://github.com/huangshuwei/vue-easytable">vue-easytable</a>-基于 Vue2.x 的功能强大的表组件</li><li><a href="https://github.com/OneWayTech/vue2-datatable">vue2-datatable-component</a>-永远不会烂的 Vue.js 2.x 最佳数据表</li><li><a href="https://github.com/euvl/vue-js-grid">vue-js-grid</a>-Vue.js 2.x 响应式网格系统，具有平滑的排序，拖放和重新排序</li><li><a href="https://github.com/handsontable/vue-handsontable-official">vue-handsontable-official</a>用于 Handsontable 电子表格组件的 Vue.js 包装器</li><li><a href="https://github.com/liqueflies/vue-grid">vue-grid</a>-用于 Vue.js 2.x 的功能强大的 flexbox 网格系统，使用内联样式构建</li><li><a href="https://github.com/VitorLuizC/vue-data-tablee">vue-data-tablee</a>-基于 vue-good-table，一个简单漂亮的表组件</li><li><a href="https://github.com/richardtallent/vue-scrolling-table">vue-scrolling-table</a>-具有 flexbox 大小的简单表格组件，滚动表格主体(水平和垂直)，所有 tr / th / td 的插槽渲染。</li><li><a href="https://github.com/zollero/el-search-table-pagination">el-search-table-pagination</a>-将 Element UI 的 Form，Table 和 Pagination 组件组合在一起。基于 Vue 2.x。(<a href="https://mp.weixin.qq.com/s/r_OumEQB79lpEETThHA70g">详细信息</a>)</li><li><a href="https://github.com/ais-one/vue-crud-x">vue-crud-x</a>-使用 Vuetify 布局的可扩展 Crud 组件，除了通常的页面，排序，过滤器之外，它还能嵌套的 CRUD，自定义表单，过滤器，操作。</li><li><a href="https://github.com/laravel-enso/vuedatatable">Vue 数据表</a>-VueJS 支持的数据表，具有 Laravel 服务器端加载和 JSON 模板设置</li><li><a href="https://github.com/dwqs/v2-table">v2-table</a>-一个基于 Vue 2.x 的简单表组件。</li><li><a href="https://github.com/future-architect/cheetah-grid">vue-cheetah-grid</a>-在 Vue.js 的画布上工作的高性能网格引擎。</li><li><a href="http://vue-table-component.spatie.be/">vue-table-component</a>-直指 Vue 组件以显示表。</li><li><a href="https://lossendae.github.io/vue-table">@ lossendae / vue-table</a>-Vue.js 2.x 的简单表组件，具有分页和可排序的列。</li><li><a href="https://github.com/FEMessage/el-data-table">el-data-table</a>-基于 element-ui，可以轻松完成任务</li><li><a href="https://devexpress.github.io/devextreme-reactive/vue/grid/">DevExtreme Vue 网格</a>-用于 Bootstrap 的基于插件的高性能 Vue 数据网格。</li><li><a href="https://github.com/arnedesmedt/vue-ads-table-tree">vue-ads-table-tree</a>-具有过滤，排序和分页功能的 vue Table 组件。行可以具有子行，因此可以构建树结构。它还支持异步调用以从后端加载行。它是使用 CSS 框架<a href="https://tailwindcss.com/docs/what-is-tailwind/">tailwindcss</a>构建的</li><li><a href="https://github.com/syncfusion/ej2-vue-grids">用于 Vue 的 Synfusion 数据网格</a>-显示和处理具有分页，排序，过滤，编辑和分组等功能的表格数据。</li><li><a href="https://github.com/MarketConnect/vue-pivot-table">@ marketconnect / vue-pivot-table</a>-数据透视表的 vue 组件</li><li><a href="https://github.com/hiendv/teible">vue-teible</a>-Web 的轻巧灵活的表组件：zap：</li><li><a href="https://github.com/jqwidgets/vue/tree/master/grid">vue-jqxgrid</a>-具有过滤，排序，编辑，分组，数据导出和其他功能的 Vue 数据网格。</li><li><a href="https://github.com/jqwidgets/vue/tree/master/pivotgrid">vue-jqxpivotgrid</a>-具有枢轴设计器的 Vue 枢轴数据网格，钻取单元格，枢轴功能。</li><li><a href="https://github.com/nhnent/toast-ui.vue-grid">toast-ui.vue-grid</a>- [TOAST UI Grid]的 Vue 包装器(<a href="http://ui.toast.com/tui">http://ui.toast.com/tui</a> -grid /)。</li><li><a href="https://github.com/boussadjra/vueye-table">vueye-datatable</a>-Vueye 数据表是基于 Vue.js 2 的响应数据表组件，它按页面组织数据以便于浏览。</li><li><a href="https://github.com/BernhardtD/vue-sorted-table">vue-sorted-table</a>-一个将表转换为排序表的插件。支持嵌套的对象键，自定义图标和可重用组件。</li><li><a href="https://github.com/rubanraj54/vue-bootstrap4-table">vue-bootstrap4-table</a>-基于 Vue 2 和 Bootstrap 4 的高级数据表，其中包括多列过滤，多列排序，分页和信息，复选框行和高度可定制的插槽选项。</li><li><a href="https://github.com/tochoromero/vuejs-smart-table">vuejs-smart-table</a>-直截了当的表格组件，使用原始 HTML 表格结构，并具有开箱即用的排序，过滤，分页和选择功能。</li><li><a href="https://github.com/myENA/vue-table">@ myena / vue-table</a>-用于客户端/服务器数据处理的表组件。筛选，排序，分页，分组，展开详细信息行。高度可定制的通孔，用于过滤器，标题，列，分页，详细信息行。</li><li><a href="https://github.com/jamesdruhan/vue-jd-table">vue-jd-table</a>-Vue 2 的高级且灵活的数据表组件。功能丰富：搜索，过滤，导出，分页(传统和虚拟)滚动)等等！</li><li><a href="https://github.com/1000ch/vue-grd">vue-grd</a>-用于网格布局的简单，轻巧和灵活的 Vue.js 组件。</li><li><a href="https://github.com/MengFangui/iview-table-page">iview-table-page</a>-将 iview UI 的表和页面组件组合在一起。基于 Vue2.x。并听到了一些使用 iview-table-page 的示例。</li></ul><h2 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h2><ul><li><a href="https://github.com/se-panfilov/vue-notifications">vue-notifications</a>-Vue.js 不可知的非阻塞通知库。</li><li><a href="https://github.com/noru/vue-easy-toast">vue-easy-toast</a>-vue / vue2 的 Toast 插件。</li><li><a href="https://github.com/shakee93/vue-toasted">vue-toasted</a>-适用于 VueJS 的自适应 Touch 兼容 Toast 插件。</li><li><a href="https://github.com/happyCoda/vue-notifikation">vue-notifikation</a>-Vue.js 通知插件。</li><li><a href="https://github.com/euvl/vue-notification">vue-notification</a>-使用<code>Velocity</code>制作动画的 Vue.js 2+通知插件。</li><li><a href="https://github.com/NxtChg/pieces/tree/master/js/vue/vs-notify">vs-notify</a>-微小但功能强大的通知组件，没有依赖项。</li><li><a href="https://github.com/websmurf/vue2-notify">vue2-notify</a>-Vue.js 2+通知插件。</li><li><a href="https://github.com/cristijora/vue-notifyjs">vue-notifyjs</a>-极简主义，3kb 可通知通知插件</li><li><a href="https://github.com/chryb/vueup">vueup</a>-Vue.js 的简单，轻巧和优雅的全局通知弹出窗口</li><li><a href="https://github.com/ahmed-dinar/vuex-flash">vuex-flash</a>-Vuex 2.x 中用于 VueJS 2.x 的 Flash 消息组件。</li><li><a href="https://github.com/artemsky/vue-snotify">vue-snotify</a>-Vue.js 2 通知中心</li><li><a href="https://github.com/PygmySlowLoris/vue-notify-me">vue-notify-me</a>-Vue 的可堆叠通知警报</li><li><a href="https://github.com/renoguyon/vuejs-noty">vue-noty</a>-围绕 Noty 的 Vue.js 2 包装器</li><li><a href="https://github.com/nikitamarcius/vue-notice">vue-notice</a>-Vue.js 2 使用本机 API 围绕 Noty.js 进行包装</li><li><a href="https://github.com/keen-on-design/vue-flash-message">vue-flash-message</a>-简单但灵活的通知插件</li><li><a href="https://github.com/keen-on-design/vue-flash-message">@ voerro / vue-notifications</a>-具有 HTML 和样式支持的简单 Vue.js 2 通知插件。</li><li><a href="https://github.com/f3oall/vue-awesome-notifications">vue-awesome-notifications</a>-具有高级异步支持的轻量级 Vue.js 通知库。</li><li><a href="https://github.com/arthurvasconcelos/vue-izitoast">vue-izitoast</a>-围绕 IziToast 的 Vue.js 2 包装器。</li><li><a href="https://github.com/saivarunk/vue-toastr-2">vue-toastr-2</a>-基于<a href="https://github.com/CodeSeven/toastr">toastr</a>的 Vue.js 的简单敬酒通知)</li><li><a href="https://github.com/zerodois/vue-snack">vue-snack</a>-基于 Google Material 的 Snackbars 的 Vue.JS 插件。</li><li><a href="https://github.com/mengdu/m-message">vue-m-message</a>-vue 的消息插件。</li><li><a href="https://github.com/Carrene/vue-notification-bell">vue-notification-bell</a>-用于显示通知的 Vue UI 组件。</li><li><a href="https://github.com/marverix/v-tostini">v-tostini</a>-Vue.js 2.x 真正纯正的吐司通知机制。不包括 CSS。</li><li><a href="https://github.com/ankurk91/vue-toast-notification">vue-toast-notification</a>-另一个 Vue.js Toast 通知插件。</li></ul><h2 id="装载机"><a href="#装载机" class="headerlink" title="装载机"></a>装载机</h2><ul><li><a href="https://github.com/wyzant-dev/vue-radial-progress">vue-radial-progress</a>-Vue.js 的径向进度栏组件。</li><li><a href="https://github.com/dzwillia/vue-simple-spinner">vue-simple-spinner</a>-适用于 Vue.js 的简单灵活的微调器</li><li><a href="https://github.com/f/vue-wait">vue-wait</a>-适用于 Vue / Vuex 和 Nuxt 应用程序的复杂加载程序管理。</li><li><a href="https://github.com/Akryum/vue-progress-path">vue-progress-path</a>-支持任何自定义 SVG 路径的可自定义进度指示器和微调器。</li><li><a href="https://github.com/realdah/vue-blockui">vue-blockui</a>-用于 vue 2 的 BlockUI，类似于 jquery blockUI，可用于加载屏幕。</li><li><a href="https://github.com/epicmaxco/epic-spinners">epic-spinners</a>-易于使用的带有 vue.js 集成的 css spinners 集合。</li><li><a href="https://github.com/chenxuan0000/svg-progress-bar">svg-progress-bar</a>-Vue.js 的简单进度条。</li><li><a href="https://github.com/ankurk91/vue-loading-overlay">vue-loading-overlay</a>-微小的全屏加载指示器</li><li><a href="https://github.com/Hokid/vue-loaders">vue-loaders</a>- [loaders.css]的 vue 包装器(<a href="https://github.com/ConnorAtherton/loaders.css">https://github.com/ConnorAtherton/loaders.css</a>)</li><li><a href="https://github.com/STUkh/vue-promise-btn">vue-promise-btn</a>-小巧而强大的异步按钮(或任何其他标签)工具，带有精美的内置微调器</li><li><a href="https://github.com/TonPC64/vue-spinkit">vue-spinkit</a>-🌈 带有 VueJS CSS 动画的加载指示器集合</li><li><a href="https://github.com/hussam-m/vue2-form-loading">vue2-form-loading</a>-VueJS 指令可与表单一起使用，以便在加载下一页时禁用提交按钮</li><li><a href="https://github.com/biigpongsatorn/vue-element-loading">vue-element-loading</a>-⏳ 在容器内加载或全屏显示 Vue.js</li><li><a href="https://github.com/anthinkingcoder/tb-skeleton">tb-skeleton</a>-Vue.js 的骨架屏幕加载</li><li><a href="https://github.com/Saeris/vue-spinners">vue-spinners</a>-💫 为 Vuejs 加载微调器组件的集合</li><li><a href="https://github.com/Yangfan2016/vue-yan-progress">vue-progress-bar</a>-这是一个基于 vue 的级联进度条插件</li><li><a href="https://github.com/shwilliam/vue-loading-button">vue-loading-button</a>-👇 带有滑动加载指示器的直截了当按钮</li></ul><h2 id="进度条"><a href="#进度条" class="headerlink" title="进度条"></a>进度条</h2><ul><li><a href="https://github.com/hilongjw/vue-progressbar">vue-progressbar</a>-vue 的轻量级进度条。</li><li><a href="https://github.com/BosNaufal/vue2-loading-bar">vue2-loading-bar</a>-最简单的 YouTube，例如 Vue 2 的加载条组件。</li><li><a href="https://github.com/dalphyx/vue-top-progress">vue-top-progress</a>-另一个为 Vue.js 加载栏组件的顶级进度。</li><li><a href="https://github.com/vue-bulma/nprogress">vue-nprogress</a>-进度条基于 Vue 的 nprogress。</li><li><a href="https://github.com/websmurf/vue-progress-button">vue-progress-button</a>-Vue.js 2.x 动画按钮组件。</li><li><a href="https://github.com/dzwillia/vue-simple-progress">vue-simple-progress</a>-Vue.js 的简单，灵活的进度栏</li><li><a href="https://github.com/val-bubbleflat/vue-component-loading">vue-component-loading</a>-管理每个组件内部的加载状态，并使用进度条显示全局加载状态。</li><li><a href="https://github.com/spemer/vue-scroll-progress">vue-scroll-progress</a>-用于页面滚动进度条的简单 Vue.js 插件</li><li><a href="https://github.com/ajerez/vue-read-progress">vue-read-progress</a>-页面顶部的可自定义进度条，显示滚动进度</li><li><a href="https://github.com/dreambo8563/easy-circular-progress">easy-circular-progress</a>-具有计数效果的简单循环进度组件</li></ul><h2 id="工具提示"><a href="#工具提示" class="headerlink" title="工具提示"></a>工具提示</h2><p>工具提示/弹出窗口</p><ul><li><a href="https://github.com/Akryum/vue-tooltip">v-tooltip</a>-使用 Vue 2.x 的简单工具提示。</li><li><a href="https://github.com/antongorodezkiy/vue-popper-component">vue-popper-component</a>-Vue.js 的 Popper.js 指令。</li><li><a href="https://github.com/hekigan/vue-directive-tooltip">vue-directive-tooltip</a>-简单，灵活的工具提示指令(基于 Popper.js)<a href="https://vuejs.org/">！[Vue.js](https：// img.shields.io/badge/vue-2-green.svg)</a></li><li><a href="https://github.com/RobinCK/vue-popper">vue-popperjs</a>-基于 VueJS 2.x popover 组件的<a href="https://popper.js.org/">popper.js</a></li><li><a href="https://github.com/cpfarher/vue-tooltipster">vue-tooltipster</a>-基于 VueJS 2.x 工具提示组件的<a href="http://iamceege.github.io/tooltipster/">tooltipster.js</a>。支持 html 内容，悬停和悬停+单击事件。</li><li><a href="https://github.com/ChristianKienle/k-pop">k-pop</a>-基于<a href="https://popper.js.org/">popper.js</a>的简单 popover 组件。高度可定制的。带有主题。支持自定义触发器，并且可以监听任何事件。</li></ul><h2 id="覆盖"><a href="#覆盖" class="headerlink" title="覆盖"></a>覆盖</h2><ul><li><a href="https://github.com/javisperez/vuedals">vuedals</a>-一个 VueJS(2.x)插件，用于具有单个组件实例的多个模态窗口。</li><li><a href="https://github.com/adeptoas/sweet-modal-vue">sweet-modal-vue</a>-发生模态的最甜的库。现在可用于 Vue.js。</li><li><a href="https://github.com/euvl/vue-js-modal">vue-js-modal</a>-简单易用，高度可定制，移动友好的 Vue.js 2.0+模态，具有 0 个依赖关系。</li><li><a href="https://github.com/Egorvah/vudal">vudal</a>-vue.js 的模态窗口</li><li><a href="https://github.com/chenjiahan/vodal">vodal</a>-具有动画的 Vue 模态。</li><li><a href="https://github.com/pexea12/vue-image-lightbox">vue-image-lightbox</a>-一个 Vue 图像灯箱/图库，可以很好地显示图像。</li><li><a href="https://github.com/mazipan/vue2-simplert">vue2-simplert</a>-Vue 2 简单警报组件(受 SweetAlert 启发)，作者：Irfan Maulana</li><li><a href="https://github.com/David-Desmaisons/Vue-Semantic-Modal">Vue-Semantic-Modal</a>-不具有 jQuery 依赖关系的 Vue 2 语义-UI 模态组件</li><li><a href="https://github.com/crowdbotics/v-img">v-img</a>-易于安装的图库。</li><li><a href="https://github.com/emiliorizzo/vue-dialog-drag">vue-dialog-drag</a>-可拖动对话框</li><li><a href="https://github.com/qgp9/vue-ya-semantic-modal">vue-ya-semantic-modal</a>-Vue2 的另一个语义 UI 模态组件，没有 Jquery 但具有 Vue 转换</li><li><a href="https://github.com/DCzajkowski/vue-pure-lightbox">vue-pure-lightbox</a>-非常简单的灯箱插件，没有任何依赖性-仅 Vue！🖼</li><li><a href="https://github.com/mirari/v-viewer">v-viewer</a>-基于[viewer.js]的 vue 图像查看器组件，支持旋转，缩放，缩放等(https：// github.com/fengyuanchen/viewerjs)</li><li><a href="https://github.com/zhangxiang958/vue-messageBox">vue-messagebox</a>-Vue 上易于定制的消息框组件。</li><li><a href="https://github.com/Godofbrowser/vuejs-dialog">vuejs-dialog</a>-轻量级，基于承诺的警报，提示和确认对话框。</li><li><a href="https://github.com/michitaro/vue-window">@ hscmap / vue-window</a>-vue2 的窗口 UI 组件。</li><li><a href="https://github.com/RobinCK/vue-gallery">vue-gallery</a>-VueJS 响应式和可自定义的图像和视频库，轮播和灯箱，已针对移动和桌面 Web 浏览器进行了优化。基于 blueimp-gallery</li><li><a href="https://github.com/anteriovieira/vue-swal">vue-swal</a>-用于将 SweetAlert 集成到 Vuejs 的小型包装器。(与 SSR 兼容)</li><li><a href="https://github.com/hjkcai/vue-modal-dialogs">vue-modal-dialogs</a>-✨ 承诺自己的对话框！</li><li><a href="https://github.com/la7ender/vue-img-view">vue-img-view</a>-Vue.js 的插件，您可以在任意位置拖动/查看/旋转图片</li><li><a href="https://github.com/davodaslanifakor/modaltor">vue-modaltor</a>-vuejs 的最先进的可配置模态组件</li><li><a href="https://github.com/nash403/v-modal-backdrop">v-modal-backdrop</a>-用于 vue 的简单通用背景组件</li><li><a href="https://github.com/dillonchanis/vue-cute-modal">vue-cute-modal</a>-适用于 Vue 应用程序的简单易用的 Modal 组件。</li><li><a href="https://github.com/TerryZ/v-dialogs">v-dialogs</a>-一个简单而强大的对话框，包括基于 Vue2.x 的 Modal，Alert，Mask 和 Toast 模式</li><li><a href="https://github.com/KitchenStories/vue-gallery-slideshow">vue-gallery-slideshow</a>-VueJS 的响应式画廊组件</li><li><a href="https://github.com/morkro/vue-a11y-dialog">vue-a11y-dialog</a>-用于可访问对话框[<code>a11y-dialog</code>](<a href="https://github.com的vue.js组件包装器./">https://github.com的Vue.js组件包装器。</a> com / edenspiekermann / a11y-dialog)。</li><li><a href="https://github.com/nzlt/vue-slideout-panel">vue-slideout-panel</a>-VueJS 的可堆叠面板组件</li><li><a href="https://github.com/TerryZ/v-gallery">v-gallery</a>-用于在“ gallery”或“ carousel”中显示图像的 Vue2 插件</li><li><a href="https://github.com/leepyng/vue2-image-loader">vue2-image-loader</a>-vue2 的图像 lazyLoad loader 组件</li><li><a href="https://github.com/am283721/vue-my-photos">vue-my-photos</a>-一个简单的无依赖图像灯箱组件，具有过滤功能</li><li><a href="https://github.com/nikli2009/vue-img-orientation-changer">vue-img-orientation-changer</a>-一个 Vue.js 指令，可自动调整您的 img 以更正方向。</li><li><a href="https://github.com/adileo/vue-topmodal">vue-topmodal</a>-一个完全可定制，易于使用的 Vue.js 模态组件。(自适应，可堆叠，可滚动，动画)</li><li><a href="https://github.com/MelMacaluso/vue-modal">vue-modal🖼</a>-为多个可切换模态内容提供对象数组或快速内联您的内容。完全可定制的 Vue 模态组件。</li><li><a href="https://github.com/Innologica/vue-stackable-modal">@ innologica / vue-stackable-modal</a>-用于可堆叠的模态对话框的库。完全可定制且非常易于使用。</li><li><a href="https://github.com/avil13/vue-sweetalert2">vue-sweetalert2</a>-sweetlaert2 的包装器，支持 TypeScript，Nuxt 和 SSR</li></ul><h2 id="视差"><a href="#视差" class="headerlink" title="视差"></a>视差</h2><ul><li><a href="https://github.com/vue-comps/vue-parallax">vue-parallax</a>-以比窗口慢的速度滚动图像以产生整洁的光学效果。</li><li><a href="https://github.com/apertureless/vue-parallax">vue-parallaxy</a>-用于视差图像滚动效果的 Vue.js 组件。</li><li><a href="https://github.com/Aminerman/vue-mouse-parallax">vue-mouse-parallax</a>-一个易于使用的鼠标视差组件-由 Vue.js 制成</li><li><a href="https://github.com/jsnanigans/vue-parallax-js">vue-parallax-js</a>-微小的 vue 组件，为元素上的视差效果添加了指令。</li></ul><h2 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h2><ul><li><a href="https://github.com/Justineo/vue-awesome">vue-awesome</a>-Vue.js 的 Font Awesome 组件，使用嵌入式 SVG。</li><li><a href="https://gitlab.com/robcresswell/vue-material-design-icons%E2%80%9C%E5%9C%A8GitLab%E4%B8%8A%E7%9A%84vue-material-design-icons%E2%80%9D">vue-material-design-icons</a>-单个 SVG Material Design 图标集合文件组件。</li><li><a href="https://github.com/ganl/vue-icon-font">vue-icon-font</a>-Vuejs 的 iconfont 插件(支持 Font-class 和 Symbol)。</li><li><a href="https://github.com/mazipan/vue-ionicons">vue-ionicons</a>-来自离子团队的 Vue 图标集组件。</li><li><a href="https://github.com/paulcollett/vue-ico">vue-ico</a>-具有嵌入式浏览器支持和选择性捆绑功能的 Vue 简易图标</li><li><a href="https://github.com/therufa/mdi-vue">mdi-vue</a>-Vuejs 的 Material Design 图标组件</li><li><a href="https://github.com/FortAwesome/vue-fontawesome">vue-fontawesome</a>-Font Awesome 5 Vue 组件</li><li><a href="https://github.com/nash403/g-icon">g-icon</a>-svg 图标的简单图标组件(与类似于 Font Awesome 的字体工具包兼容)</li><li><a href="https://github.com/nkoik/vue-simple-line-icons">vue-simple-line-icons</a>-Vuejs 的简单线条图标组件</li><li><a href="https://github.com/P3trur0/vue-country-flag">vue-country-flag</a>-国家标记图标的 Vue 组件- <a href="https://github.com/Lt0/vicon">vicon</a>- Vicon 是用于 vue 的简单 iconfont 组件。</li><li><a href="https://github.com/IPRIT/md-svg-vue">md-svg-vue</a>-Google 为 Vue.js 和 Nuxt.js 提供的 Material Design 图标(服务器端支持(带缓存)，内嵌 svg)渲染，官方图标名称)</li><li><a href="https://github.com/qWici/vue-lang-code-flags">vue-lang-code-flags</a>-Vue 组件，显示语言来源国的标志</li><li><a href="https://github.com/TerryMooreII/vue-zondicons">vue-zondicons</a>-精美[Zondicon]的 Vue 组件(<a href="http://www.zondicons.com/icons.html)svg">http://www.zondicons.com/icons.html)svg</a> 图标</li><li><a href="https://github.com/antonreshetov/vue-eva-icons">vue-eva-icons</a>-简单漂亮的开源 eva 图标作为 Vue 组件。</li><li><a href="https://github.com/antonreshetov/vue-unicons">vue-unicons</a>-为您的下一个项目提供超过 1000 个像素完美的 svg unicons 作为 Vue 组件。</li><li><a href="https://github.com/Cweili/vue-fa">vue-fa</a>-简单的 FontAwesome 5 Vue.js 2 组件。</li><li><a href="https://github.com/man15h/vue-cryptoicon">vue-cryptoicon</a>-美丽的像素完美的 400+加密货币和 10+法定货币图标。</li></ul><h2 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h2><ul><li><a href="https://github.com/zeratulmdq/vue-accordion">vue-accordion</a>-适用于 Vue.js 的简单手风琴导航菜单组件。</li><li><a href="https://github.com/euvl/vue-js-dropdown">vue-js-dropdown</a>-Vue.js 2 下拉菜单组件。轻巧，易于使用和扩展，无外部缺陷。</li><li><a href="https://github.com/vouill/vue-slideout">vue-slideout</a>-流行的库[slideout]的 Vue 实现(<a href="https://github.com/Mango/slideout">https://github.com/Mango/slideout</a>)</li><li><a href="https://github.com/AshleyLv/vue-quick-menu">vue-quick-menu</a>-这是基于 vue.js2 的 Web 导航组件。</li><li><a href="https://github.com/michitaro/vue-menu">@ hscmap / vue-menu</a>-vue2 的菜单/上下文菜单组件。</li><li><a href="https://github.com/classicalcondition/vue-router-nav">vue-router-nav</a>-简约的响应式导航栏，呈现 vue-router 的路线。</li><li><a href="https://github.com/hjl19911127/vue-drawer-layout">vue-drawer-layout</a>-一个简单的 DrawerLayout 组件(例如 Android)具有 Vue.js。</li><li><a href="https://github.com/RGRU/vue-simple-menu">vue-simple-menu</a>-具有一组基本功能的简单菜单组件，在 80％的情况下足够</li><li><a href="https://github.com/MisRob/vue-tree-navigation">vue-tree-navigation</a>-具有 vue-router 支持的 Vue.js 2 树导航</li><li><a href="https://github.com/borisbutenko/bp-vuejs-dropdown">bp-vuejs-dropdown</a>-Vuejs =&gt; 2 下拉菜单。易于使用，无需外部，可选。</li><li><a href="https://github.com/Lunrtick/vue-bulma-accordion">vue-bulma-accordion</a>-简单，易于配置的手风琴或具有 Bulma 自定义样式的可折叠样式或内置的可用图标</li><li><a href="https://github.com/TerryZ/v-selectmenu">v-selectmenu</a>-针对 Vue2 的简单，容易和高度定制的菜单解决方案。</li><li><a href="https://github.com/mbj36/vue-burger-menu">vue-burger-menu</a>-具有不同 CSS 动画的画布外边栏 Menu 组件。</li><li><a href="https://github.com/JonathanDn/vue-dropdown">vue-dynamic-dropdown</a>-一个高度可定制的，易于使用的优雅下拉组件</li><li><a href="https://github.com/johndatserakis/vue-navigation-bar">vue-navigation-bar</a>-适用于您的 Vue 项目的简单，漂亮的导航栏。</li><li><a href="https://github.com/romainsimon/vue-simple-search-dropdown">vue-simple-search-dropdown</a>-一个没有外部依赖关系的简单可搜索输入下拉组件</li><li><a href="https://github.com/Innologica/vue-dropdown-menu">@ innologica / vue-dropdown-menu</a>-Vue 的下拉菜单组件。任何元素都可以是下拉触发器，任何内容都可以下拉内容。</li><li><a href="https://github.com/Dimon24021993/vue-menu-aim">vue-menu-aim</a>-菜单三角形选择，又名亚马逊</li></ul><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><ul><li><a href="https://github.com/manju16832003/v-minusplusinput">minus-plus-input</a>-带正负号的数字输入；包含在 Vue.js v1 和 v2 中。</li><li><a href="https://github.com/Keiwen/vue-integer-plusminus">vue-integer-plusminus</a>-带有 vue 2 增量和减量按钮的整数输入。</li><li><a href="https://github.com/JayeshLab/vue-numeric-input">vue-numeric-input</a>-带有控件的数字输入组件。</li><li><a href="https://github.com/Seokky/vue-number-smarty">vue-number-smarty</a>-数字输入可以在聚焦字段时更改滚动值。</li><li><a href="https://github.com/Seokky/vuetify-number-smarty">vuetify-number-smarty</a>-数字输入可在字段聚焦时更改滚动值(Vuetify.js 实现)。</li></ul><h2 id="轮播"><a href="#轮播" class="headerlink" title="轮播"></a>轮播</h2><ul><li><a href="https://github.com/shhdgit/vue-easy-slider">vue-easy-slider</a>-Vue.js 的滑块组件。</li><li><a href="https://github.com/lsycxyj/vue-l-carousel">vue-l-carousel</a>-Vue.js v2.x +的响应式轮播(即滑块或滑动)组件。</li><li><a href="https://github.com/surmon-china/vue-awesome-swiper">vue-awesome-swiper</a>-Vue.js(1.x〜2.x)的 Swiper(slide)组件。</li><li><a href="https://github.com/vue-bulma/lory">vue-lory</a>-基于 lory 的 Vue 滑块组件。</li><li><a href="https://github.com/staskjs/vue-slick">vue-slick</a>-Slick-carousel 的 Vue 组件。</li><li><a href="https://github.com/drewjbartlett/vue-flickity">vue-flickity</a>-Flickity.js 的 Vue 组件。</li><li><a href="https://github.com/wlada/vue-carousel-3d">vue-carousel-3d</a>-Vue Carousel 3D-Vue.js 美观，灵活且受触摸支持的 3D Carousel。</li><li><a href="https://github.com/SSENSE/vue-carousel">vue-carousel</a>-适用于 Vue.js 的灵活，响应迅速，触摸友好的轮播。</li><li><a href="https://github.com/OrangeXC/vue-coverflow">vue-coverflow</a>-vue2.x Coverflow 组件。</li><li><a href="https://github.com/lukaszflorczak/vue-agile">vue-agile</a>–受 Slick 启发的轮播组件，仅以 Vue.js 和 Vanilla JS 编写。</li><li><a href="https://github.com/viktorlarsson/vue-tiny-slider">vue-tiny-slider</a>–由 ganlanyuan 创建的轮播组件，用 Vue.js 编写。没有 jQuery。适用于 IE8 +。</li><li><a href="https://github.com/mubaidr/vue-swimlane">vue2-text-swimlane</a>-用于 Vue.js 的 Text Swimlane 插件</li><li><a href="https://github.com/rap2hpoutre/vue-picture-swipe">vue-picture-swipe</a>-Vue Picture Swipe Gallery(具有缩略图，延迟加载和轻扫的图像画廊)由 photowipe 支持。</li><li><a href="https://github.com/sainf/vue2-siema">vue2-siema</a>-非常小的 Siema 转盘/滑块库的插件包装。</li><li><a href="https://github.com/deulos/vue-flux">vue-flux</a>-带有 20 个炫酷过渡的图片滑块。</li><li><a href="https://github.com/antonreshetov/vue-glide">vue-glide</a>- [Glide.js]上方的 Vue 滑块和轮播组件(<a href="https://github.com/glidejs/glide">https://github.com/glidejs/glide</a>)</li><li><a href="https://github.com/s950329/vue-owl-carousel">vue-owl-carousel</a>- [Owl Carousel 2]的 Vue 组件(<a href="https://owlcarousel2.github.io/OwlCarousel2/">https://owlcarousel2.github.io/OwlCarousel2/</a>)</li><li><a href="https://github.com/antoniandre/vueper-slides">vueper-slides</a>-适用于 Vue JS 的易于触摸且响应迅速的幻灯片/轮播。</li><li><a href="https://github.com/loo41/vuc">vue-canvas-carousel</a>- [vuc-carousel]的 Vue 画布组件(<a href="http://vuc.tianchenyong.top/#/carousel">http://vuc.tianchenyong.top/#/carousel</a>)</li><li><a href="https://github.com/baianat/hooper">胡珀</a>-针对 Vue 优化的可自定义的可访问轮播滑块</li><li><a href="https://github.com/ChristophAnastasiades/Lingallery">语言</a>-Vue 的简单图像库组件，在下面显示带有缩略图的大图像</li><li><a href="https://github.com/dreambo8563/vue-piece-slider">vue-piece-slider</a>-动画幻灯片的碎片化外观</li><li><a href="https://github.com/leepyng/vue2-photo-carousel">vue2-photo-carousel</a>-Vue2 的照片轮播组件</li></ul><h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><ul><li><a href="https://github.com/bbonnin/vue-morris">vue-morris</a>-VueJS 组件包装了 Morris.js。</li><li><a href="https://github.com/haydenbbickerton/vue-charts">vue-charts</a>-适用于 Vue.js 的 Google Charts 插件。</li><li><a href="https://github.com/apertureless/vue-chartjs">vue-chartjs</a>-Chart.js 的 Vue.js 包装器。</li><li><a href="https://github.com/hchstera/vue-charts">hchs-vue-charts</a>-基于 ChartJs 的 Vue2.0 包装器。</li><li><a href="https://github.com/Justineo/vue-echarts">vue-echarts</a>-Vue.js 的 ECharts 组件。</li><li><a href="https://github.com/QingWei-Li/vue-trend">vuetrend</a>-Vue.js 的简洁优雅火花线。</li><li><a href="https://github.com/weizhenye/vue-highcharts">vue-highcharts</a>-Vue 的 Highcharts 组件。</li><li><a href="https://github.com/xlsdg/vue-echarts-v3">vue-echarts-v3</a>-ECharts.js(v3.x +)的 Vue.js(v2.x +)组件包装。</li><li><a href="https://github.com/lakb248/vue-chartist">vue-chartist</a>-Chartist 的 Vue.js 2.0 组件包装。</li><li><a href="https://github.com/fireyy/g2-vue">g2-vue</a>-用于在 Vue 组件中轻松使用 G2 的工厂包装。</li><li><a href="https://github.com/DeviaVir/vue-bar">vuebars</a>-适用于 Vue.js 的简洁优雅的火花棒。</li><li><a href="https://github.com/emiliorizzo/vue-d3-network">vue-d3-network</a>-使用 d3-force 绘制网络图形的 Vue 组件</li><li><a href="https://github.com/alexcode/vue2vis">vue2vis</a>- <a href="http://visjs.org/">Visjs</a>的 Vue2 包装器。</li><li><a href="https://github.com/chryb/vue-c3">vue-c3</a>-用于 c3 图表的可重用 vue 组件</li><li><a href="https://github.com/d2bjs/vue-d2b">vue-d2b</a>-d2b 图表的 Vue 组件。(包括轴，饼图，sankey 和森伯斯特图)</li><li><a href="https://github.com/SeregPie/VueChart">VueChart</a>-一个非常简单的 Chart Vue 包装器。</li><li><a href="https://github.com/ankane/vue-chartkick">vue-chartkick</a>-用一行 Vue 创建漂亮的 JavaScript 图表</li><li><a href="https://github.com/ignoreintuition/d3vue">d3vue</a>-用于在 VueJS 中创建反应性数据可视化的 D3 插件</li><li><a href="https://github.com/JustSteveKing/vue2-frappe">vue2-frappe</a>-VueJS 的 Frappe Charts 的简单包装</li><li><a href="https://github.com/devstark-com/vue-google-charts">vue-google-charts</a>-Google Charts lib 的反应性 Vue.js 包装器</li><li><a href="https://github.com/juijs/vue-graph">vue-graph</a>-数据可视化库，用于 Vue.js 中的仪表板实现</li><li><a href="https://github.com/David-Desmaisons/Vue.D3.sunburst">vue.d3.sunburst</a>-基于 D3.js 的反应性旭日形组件</li><li><a href="https://github.com/ignoreintuition/v-chart-plugin">v-chart-plugin</a>-一个可定制的组件，用于添加绑定到组件数据的 D3 图表。</li><li><a href="https://github.com/jqwidgets/vue/tree/master/chart">vue-jqxchart</a>-具有饼图，气泡，甜甜圈，线，条，栏，面积，瀑布，极地和蜘蛛系列的制图组件。</li><li><a href="https://github.com/nhnent/toast-ui.vue-chart">toast-ui.vue-chart</a>- [TOAST UI 图表]的 Vue 包装器(<a href="http://ui.toast.com/tui">http://ui.toast.com/tui</a> -图表/)。</li><li><a href="https://github.com/apexcharts/vue-apexcharts">vue-apexcharts</a>- [ApexCharts]的 Vue.js 组件(<a href="https://github.com/apexcharts/apexcharts.js)%E3%80%82">https://github.com/apexcharts/apexcharts.js)。</a></li><li><a href="https://github.com/mazipan/vue-doughnut-chart">vue-doughnut-chart</a>-Vue.js 的甜甜圈图组件。</li><li><a href="https://github.com/ElemeFE/v-charts">v-charts</a>-基于 Vue2.x 和 Echarts 的图表组件。</li><li><a href="https://github.com/dumptyd/vue-css-donut-chart">vue-css-donut-chart</a>-用于绘制纯 CSS 甜甜圈图的轻量级 Vue 组件。</li><li><a href="https://github.com/dmtrbrl/vue-trend-chart">vue-trend-chart</a>-Vue.js 的简单趋势图</li><li><a href="https://github.com/keller-mark/vueplotlib">vueplotlib</a>-声明性，交互式，链接的绘图组件</li><li><a href="https://github.com/amroessam/vgauge">vgauge</a>-GaugeJS 的 Vue 包装器-创建漂亮的量规</li><li><a href="https://github.com/David-Desmaisons/vue-plotly">vue-plotly</a>- <a href="https://plot.ly/javascript/">plotly.js</a>声明性图表库的包装，随附 20 图表类型，包括 3D 图表，统计图和 SVG 地图。</li><li><a href="https://github.com/greghub/vue-funnel-graph-js">vue-funnel-graph-js</a>-Vue.js 的漏斗图绘制库。创建垂直和水平动画 SVG 漏斗图，并添加标签，值，图例和其他信息。</li><li><a href="https://github.com/djaxho/pure-vue-chart">pure-vue-chart</a>-在没有任何图表库相关性的情况下实现的轻量级 vue 图表</li></ul><h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><ul><li><a href="https://github.com/egoist/vue-timeago">vue-timeago</a>-Vue 的一个很小的 timeago 组件。</li><li><a href="https://github.com/saman/vue-moment-jalaali">vue-moment-jalaali</a>-针对您的 Vue.js 项目的 Jalaali Moment.js 过滤器。</li><li><a href="https://github.com/sagarkbhatt/vuejs-countdown-timer">vue-countdown-timer</a>-添加了时区转换支持。</li><li><a href="https://github.com/f/vue-analog-clock-range">vue-analog-clock-range</a>-显示时差的模拟时钟范围。</li><li><a href="https://github.com/julon/vue-moment-lib">vue-moment-lib</a>-使用相同的 momentjs API 的简单 Vue.js 2.0 MomentJS 库(过滤器和全局变量)。</li><li><a href="https://github.com/getanwar/vuejs-countdown">vuejs-countdown</a>-适用于 vue js 2.0 的简单倒数计时器组件</li><li><a href="https://github.com/philipjkim/vue2-flip-countdown">vue2-flip-countdown</a>-Vue 2.x 具有倒转效果的倒数计时器</li><li><a href="https://github.com/pablosirera/timeline-vuejs">timeline-vuejs</a>-Vue 的简约时间表</li><li><a href="https://github.com/mlinquan/vue-awesome-countdown">vue-awesome-countdown</a>-Vue 2.5.0+具有高性能和高精度的倒计时插件。官方网站：<a href="https://vac.js.org/">https://vac.js.org</a></li><li><a href="https://github.com/bestvist/vue-clock2">vue-clock2</a>-显示 Vue 的时钟组件。</li><li><a href="https://github.com/P3trur0/vuemodoro">vuemodoro</a>-Pomodoro 计时器作为单个文件 Vue 组件。</li></ul><h2 id="日历"><a href="#日历" class="headerlink" title="日历"></a>日历</h2><ul><li><a href="https://github.com/Wanderxx/vue-fullcalendar">vue-fullcalendar</a>-Vue 日历 fullCalendar。无需 jQuery。安排事件管理。</li><li><a href="https://github.com/GeoffZhu/vue-event-calendar">vue-event-calendar</a>-Vue2 的简单事件日历，除 Vue2 外没有其他依赖项。</li><li><a href="https://github.com/FranckFreiburger/vue-calendar-picker">vue-calendar-picker</a>-用于事件显示，时段选择和日期选择器的轻量级日历组件。</li><li><a href="https://github.com/KimWooHyun/vue-lunar-calendar">vue-lunar-calendar</a>-农历的 vue 组件。使用 Moment.js 进行日期操作。</li><li><a href="https://github.com/richardtallent/vue-simple-calendar">vue-simple-calendar</a>-基于 Flexbox 的 Vue 月历功能；支持多日活动，本地化，节日表情符号，拖放。没有依赖关系。</li><li><a href="https://github.com/Trekels/vue2-calendar">vue2-calendar</a>-一个简单的完整日历组件，旨在灵活而轻巧。</li><li><a href="https://github.com/tuhe32/vue-jLunar-datePicker">vue-jlunar-datepicker</a>-具有节日和节气的中国农历日期选择器组件。</li><li><a href="https://github.com/CroudSupport/vue-fullcalendar">vue-full-calendar</a>-Vue 1 和 2 的完整<a href="https://fullcalendar.io/">fullcalendar.io</a>包装器</li><li><a href="https://github.com/nathanreyes/v-calendar">v-calendar</a>-动画日历/日期选择器，显示简单和重复日期的区域，指标和日弹出窗口。</li><li><a href="https://github.com/laleshii/vue-infinite-calendar">vue-infinite-calendar</a>-Vue 2 的简单无限日历实现</li><li><a href="https://github.com/kylin-z/vue-calendar">vue-calendar</a>-适用于 Vue 2.1.5+的简单日历组件，支持自定义内容。没有依赖关系。</li><li><a href="https://github.com/kitwon/vue2-event-calendar">vue2-event-calendar</a>-Vue2 的事件日历，支持自定义事件项和日历标题。</li><li><a href="https://github.com/leepyng/vue-datepicker-infinite">vue2-datePicker-infinite</a>-Vue2 的无限 datePicker，易于使用且没有依赖性。</li><li><a href="https://github.com/icai/vue2-calendar">vue2-slot-calendar</a>-vue 2 日历，支持月球或日期事件的日期选择器组件，引导程序样式。</li><li><a href="https://github.com/stormseed/quasar-calendar">quasar-calendar</a>-使用 Quasar 框架的 vue.js 日历，可实现每月，多天和议程视图。</li><li><a href="https://github.com/mengxiong10/vue2-datepicker">vue2-datepicker</a>-Vue2 的漂亮 datepicker / datetimepicker 组件</li><li><a href="https://github.com/enrian/vue-pikaday">vue-pikaday</a>- <a href="https://github.com/dbushell/Pikaday">Pikaday</a>datepicker 的 VueJS 包装器组件</li><li><a href="https://github.com/lkmadushan/vue-tuicalendar">vue-tuicalendar</a>- <a href="https://github.com/nhnent/tui.calendar">tui.calendar</a>日历的 VueJS 包装器组件</li><li><a href="https://github.com/jqwidgets/vue/tree/master/scheduler">vue-jqxscheduler</a>-VueJS Scheduler 组件。</li><li><a href="https://github.com/nhnent/toast-ui.vue-calendar">toast-ui.vue-calendar</a>- [TOAST UI 日历]的 Vue 包装器(<a href="http://ui.toast.com/tui">http://ui.toast.com/tui</a> -日历)。</li><li><a href="https://github.com/ManukMinasyan/vue-functional-calendar">vue-functional-calendar</a>-基于 Vue 的轻量级高性能日历组件(日期选择器，日期范围)。</li><li><a href="https://github.com/antoniandre/vue-cal">vue-cal</a>-Vue JS 完整日历，无依赖项，无 BS。🤘。</li><li><a href="https://github.com/liloow/vue-draggableCal">vue-draggableCal</a>-不是普通的日期选择器。一个 Vuejs 可拖动的日期选择器，具有全新的响应式设计，可移动使用且具有 0 个依赖项，已压缩 17kb</li><li><a href="https://github.com/nono1526/vue-material-year-calendar">vue-material-year-calendar</a>-Vue2 的全年(每页 12 个月)日历。使用 dayjs。</li><li><a href="https://github.com/codesthq/vuelendar">vuelendar</a>-用 VueJS 编写的简洁日历</li></ul><h2 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h2><ul><li><a href="https://github.com/xkjyeah/vue-google-maps">vue2-google-maps</a>-Google Maps 组件，用于带有 2 向数据绑定的 vue。</li><li><a href="https://github.com/KoRiGaN/Vue2Leaflet">vue2-leaflet</a>-传单地图的 Vue 2 组件。</li><li><a href="https://github.com/phegman/vue-mapbox-gl">vue-mapbox-gl</a>-Mapbox GL JS 的 Vue 2.x 组件</li><li><a href="https://github.com/PNKBizz/vue-yandex-map">vue-yandex-maps</a>-Yandex Maps 的 Vue 2.x 组件</li><li><a href="https://github.com/Dafrok/vue-baidu-map">vue-baidu-map</a>-百度地图的 Vue 2.x 组件。</li><li><a href="https://github.com/voluntadpear/vue-choropleth">vue-choropleth</a>-Vue 2.x 组件，用于显示一个 Choropleth 贴图。</li><li><a href="https://github.com/ghettovoice/vuelayers">vuelayers</a>-Vue 2 组件可与 OpenLayers 一起使用。</li><li><a href="https://github.com/Akryum/vue-googlemaps">vue-googlemaps</a>-Vue 2.x 组件，用于集成 Google Maps。</li><li><a href="https://github.com/eperedo/vue-static-map">vue-static-map</a>-Vue 2.x 简单组件，可生成静态 Google 地图</li><li><a href="https://github.com/soal/vue-mapbox">vue-mapbox</a>-Mapbox GL JS 库周围的 Vue 2.x 包装器，提供了与地图交互的途径。</li></ul><h2 id="音频视频"><a href="#音频视频" class="headerlink" title="音频视频"></a>音频视频</h2><ul><li><a href="https://github.com/SevenOutman/vue-aplayer">Vue-APlayer</a>-：cake：用于 Vue 2.x 的易于配置的音乐播放器。</li><li><a href="https://github.com/shershen08/vuejs-sound-player">vue-audio</a>-音频标签包装器；Vue 2.x 的声音播放器组件</li><li><a href="https://github.com/sinchang/vue-dplayer">vue-dplayer</a>-基于 DPlayer 的 Vue 2.x 视频播放器组件。</li><li><a href="https://github.com/chrishurlburt/vue-canvasvideo">vue-canvasvideo</a>-一个 Vue 2.x 组件，用于在 iOS / Safari 上播放视频背景和自动播放视频。</li><li><a href="https://github.com/petsgre/music">vue-music</a>-基于 html5``的 Vue 组件。</li><li><a href="https://github.com/staskobzar/vue-audio-visual">vue-audio-visual</a>-Vue HTML5 音频可视化组件。</li><li><a href="https://github.com/redxtech/vue-plyr">vue-plyr</a>-一组用于 plyr 视频和音频播放器的 Vue 组件。</li><li><a href="https://github.com/TerryZ/v-playback">v-playback</a>-一个 Vue2 插件，可简化视频播放。</li><li><a href="https://github.com/grishkovelli/vue-audio-recorder">vue-audio-recorder</a>-Vue.js 的音频记录器。它允许在服务器上创建，播放，下载和存储记录</li><li><a href="https://github.com/johndatserakis/vue-video-section">vue-video-section</a>-Vue 的简单视频标头/部分组件。适用于视频背景并在其上叠加内容。</li></ul><h2 id="无限滚动"><a href="#无限滚动" class="headerlink" title="无限滚动"></a>无限滚动</h2><ul><li><a href="https://github.com/PeachScript/vue-infinite-loading">vue-infinite-loading</a>-适用于 Vue.js 1.0 和 Vue.js 2.0 的无限滚动插件。</li><li><a href="https://github.com/egoist/vue-mugen-scroll">vue-mugen-scroll</a>-Vue.js 的无限滚动组件 2。</li><li><a href="https://github.com/ElemeFE/vue-infinite-scroll">vue-infinite-scroll</a>-vue.js 的无限滚动指令。</li><li><a href="https://github.com/lookstudios/vue-loop">vue-loop</a>-Vue.js 2 的无限内容循环组件。</li><li><a href="https://github.com/wangdahoo/vue-scroller">vue-scroller</a>-Vue.js 2 的无限内容循环组件，包括诸如“拉动刷新”，“无限加载”之类的功能，’snaping-scroll’。</li><li><a href="https://github.com/legeneek/vue-infinite-list">vue-infinite-list</a>-无限列表 mixin 可以为 Vue.js 2 回收 dom</li><li><a href="https://github.com/biigpongsatorn/vue-infinite-slide-bar">vue-infinite-slide-bar</a>-∞ 无限滑动条组件。</li><li><a href="https://github.com/zuolei828/vue-virtual-infinite-scroll">vue-virtual-infinite-scroll</a>-基于 Iscroll 的 vue2 组件，支持具有高性能滚动，无限负载和拉动的大数据列表刷新。</li></ul><h2 id="拉动刷新"><a href="#拉动刷新" class="headerlink" title="拉动刷新"></a>拉动刷新</h2><ul><li><a href="https://github.com/lakb248/vue-pull-refresh">vue-pull-refresh</a>-拉动刷新 Vue.js 2.0 的组件。</li><li><a href="https://github.com/stackjie/vue-pull-to">vue-pull-to</a>-下拉刷新和上拉为 Vue.js 组件加载了更多内容并无限滚动。</li><li><a href="https://github.com/bedlate/vue-data-loading">vue-data-loading</a>-另一个用于无限滚动和向下/向上加载数据的组件。</li><li><a href="https://github.com/duyanpeng/vue-quick-loadmore">vue-quick-loadmore</a>-Vue 的下拉刷新和上拉无限滚动插件。</li></ul><h2 id="降价"><a href="#降价" class="headerlink" title="降价"></a>降价</h2><ul><li><a href="https://github.com/miaolz123/vue-markdown">vue-markdown</a>-适用于 Vue 的强大，高速 Markdown 解析器。</li><li><a href="https://github.com/hinesboy/mavonEditor">vue-mavonEditor</a>-基于 Vue 的降价编辑器，支持多种个性化功能。</li><li><a href="https://github.com/Vivify-Ideas/vue-simple-markdown">vue-simple-markdown</a>-适用于 Vue 的简单，高速 Markdown 解析器。</li><li><a href="https://github.com/F-loat/vue-simplemde">vue-simplemde</a>- <a href="https://github.com/sparksuite/simplemde-markdown-editor">simplemde</a>的包装。不论是初学者还是专家，都可轻松编辑。具有内置的自动保存和拼写检查功能。</li><li><a href="https://github.com/nhnent/toast-ui.vue-editor">toast-ui.vue-editor</a>- [TOAST UI 编辑器]的 Vue 包装器(<a href="http://ui.toast.com/tui">http://ui.toast.com/tui</a> -编辑)。</li></ul><h2 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h2><ul><li><a href="https://github.com/FranckFreiburger/vue-pdf">vue-pdf</a>-基于 mozilla 的 PDF.js 的 pdf 查看器</li><li><a href="https://github.com/arkokoley/pdfvuer">pdfvuer</a>-Vue 的 PDF 查看器，使用 Mozilla 的 PDF.js 和文本支持。<a href="https://blog.koley.in/pdfvuer/">演示</a></li></ul><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><ul><li><a href="https://github.com/David-Desmaisons/Vue.D3.tree">Vue.D3.tree</a>-基于[D3.js]的树状视图(<a href="https://d3js.org/">https://d3js.org/</a>)</li><li><a href="https://github.com/arvidkahl/vue-json-tree-view">vue-json-tree-view</a>-Vue.js 的 JSON 树视图组件。</li><li><a href="https://github.com/halower/vue2-tree">vue-tree</a>-Vue.js 2.X 的树组件。</li><li><a href="https://github.com/amsik/liquor-tree">liquor-tree</a>-惊人的 Vue 树组件</li><li><a href="https://github.com/wyr1227/vue-trees">vue-trees-ui</a>-基于 Vue 的 Tree Ui。</li><li><a href="https://github.com/elbywan/bosket">Bosket</a>-前端框架(Vue，React，Angular 和 Riot)的树视图组件的集合。</li><li><a href="https://github.com/plantain-00/tree-component">plantain-00 / tree-component</a>-一个 reactjs，angular 和 vuejs 树组件。</li><li><a href="https://github.com/holiber/sl-vue-tree">sl-vue-tree</a>-适用于 Vue.js 的简单可定制的可拖动树组件</li><li><a href="https://github.com/phphe/vue-draggable-nested-tree">vue-draggable-nested-tree</a>-适用于 Vuejs2 [@phphe](<a href="https://github.com的功能强大的可自定义可拖动树视图组件./">https://github.com的功能强大的可自定义可拖动树视图组件。</a> com / phphe)</li><li><a href="https://github.com/scalia/vuejs-tree">vuejs-tree</a>-高度可定制的 VueJs 树查看器</li><li><a href="https://github.com/zdy1988/vue-jstree">vue-jstree</a>-适用于 Vue2 的树形插件，带有漂亮的图标和拖放功能</li><li><a href="https://github.com/XAHTEP26/vue-vtree">vue-vtree</a>-Vue.js 的通用且灵活的树组件</li><li><a href="https://github.com/tylerkrupicka/vue-json-component">vue-json-component</a>-JSON 树视图，没有依赖项，TypeScript 支持且易于定制。</li><li><a href="https://github.com/ParadeTo/vue-tree-list">vue-tree-list</a>-用于树形结构的 vue 组件</li></ul><h2 id="社交分享"><a href="#社交分享" class="headerlink" title="社交分享"></a>社交分享</h2><ul><li><a href="https://github.com/nicolasbeauvais/vue-social-sharing">vue-social-sharing</a>-一个 Vue.js 组件，用于共享指向社交网络的链接，可与 Vue.js 1.X 或 2.X 一起使用。</li><li><a href="https://github.com/koddr/vue-goodshare">vue-goodshare</a>-用于社交共享的 Vue.js 组件，具有精美的按钮设计。简单的安装，丰富的文档，开发人员支持，SEO 友好，干净的代码，无需脚本即可快速跟踪页面上的用户活动。使用 Vue.js2.x。</li><li><a href="https://github.com/mbj36/vue-socialmedia-share">vue-socialmedia-share</a>-一个 Vue.js 组件，用于使用 Vue 2.X 共享与社交网络的链接</li><li><a href="https://github.com/Onatcer/vue-picture-sharesheet">vue-picture-sharesheet</a>-一个 Vue 图片共享表组件，受到苹果新闻编辑室中图片共享表的启发</li><li><a href="https://github.com/chiaweilee/vue-twitter">vue-twitter</a>-用于嵌入 Twitter 小部件(例如时间线，按钮)的 Vue.js 组件</li><li><a href="https://github.com/Alexandrshy/vue-share-buttons">vue-share-buttons</a>-Vue.js 组件，用于在您的项目中放置按钮，您可以共享任何东西</li></ul><p>＃＃ 二维码</p><ul><li><a href="https://github.com/theomessin/vue-qriously">vue-qriously</a>-一个 Vue.js 2 组件，用于使用 qrious 在 HTML Canvas 上绘制 QR 代码。</li><li><a href="https://github.com/superman66/vue-qart">vue-qart</a>-vue 2.x 用于 qart.js 的指令。</li><li><a href="https://github.com/gruhn/vue-qrcode-reader">vue-qrcode-reader</a>-一个 Vue.js 2 组件，可从相机流中检测和解码 QR 码。</li></ul><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><ul><li><a href="https://github.com/shayneo/vue-fuse">vue-fuse</a>-模糊搜索库 Fuse.js 的轻量级插件</li><li><a href="https://community.algolia.com/vue-instantsearch/">vue-instantsearch</a>-使用<a href="https://www.algolia.com/">Algolia</a>创建即时搜索体验的终极工具箱。</li><li><a href="https://github.com/InnerSearch/vue-innersearch">vue-innersearch</a>-用于 Elasticsearch 的 Vue.js 包装器</li><li><a href="https://github.com/appbaseio/reactivesearch">reactivesearch-vue</a>-用于使用 Elasticsearch 构建数据驱动的应用程序的 UI 组件</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="https://github.com/eliep/vue-avatar">vue-avatar</a>-vue.js 的头像组件。</li><li><a href="https://github.com/surmon-china/vue-touch-ripple">vue-touch-ripple</a>-Vue.js 的触摸波纹组件(1.x〜2.x)。</li><li><a href="https://github.com/cngu/vue-typer">vue-typer</a>-Vue 组件，用于模拟用户键入，选择和擦除文本。</li><li><a href="https://github.com/MartyWallace/vue-keyboard">vue-keyboard</a>-Vue 2 虚拟键盘组件。</li><li><a href="https://github.com/mhayes/vue-twentytwenty">vue-twentytwenty</a>-图像比较组件，可与 Vue.js 2.x 一起使用</li><li><a href="https://github.com/apertureless/vue-cookie-law">vue-cookie-law</a>-Vue.js 2.x 的 Cookie 信息插件</li><li><a href="https://github.com/JiriChara/vue-gravatar">vue-gravatar</a>-适用于 Vue.js 2.x 的简陋的 gravatar 组件</li><li><a href="https://github.com/Inndy/vue-clipboard2">vue-clipboard2</a>-一种易于使用的 Vue.js 2.x 剪贴板剪贴板绑定</li><li><a href="https://github.com/cuduy197/vue-flashcard">vue-flashcard</a>-带有 Vue.js 2.x 动画的 FLashcard 组件：bulb：</li><li><a href="https://github.com/kavalcante/vue-truncate-collapsed">vue-truncate-collapsed</a>-一个简单的组件，它会截断文本并为 Vue.js 2 添加可点击的“阅读更多/显示较少”。 X</li><li><a href="https://github.com/BrockReece/vue-kanban">vue-kanban</a>-灵活的拖放式看板板组件</li><li><a href="https://github.com/aidewoode/vue-letter-avatar">vue-letter-avatar</a>-vue.js 的简单优雅的字母头像组件</li><li><a href="https://github.com/metachris/vue-highlightjs">vue-highlightjs</a>-使用 highlight.js 突出显示语法</li><li><a href="https://github.com/euvl/v-clipboard">v-clipboard</a>-简单，小巧且易于使用的指令将您的模型保存到剪贴板(最小 2kb，无依赖项)</li><li><a href="https://github.com/MicroDroid/vue-invisible-recaptcha">vue-invisible-recaptcha</a>-超级简单的 Google 隐形 reCAPTCHA 集成</li><li><a href="https://github.com/Gomah/vue-embed">vue-embed</a>-Embed 组件基于 Vue 2.x 的 embed.js，该组件可嵌入表情符号，媒体，地图，tweet，要点，代码，服务和减价。</li><li><a href="https://github.com/creotip/vue-particles">vue-particles</a>-粒子背景的 Vue.js 组件</li><li><a href="https://github.com/termosa/vue-uniq-ids">vue-uniq-ids</a>-Vue.js 2.x 插件，可帮助使用与 ID 相关的属性，且无副作用</li><li><a href="https://github.com/drewjbartlett/vue-multivue">vue-multivue</a>-在同一页面上使用同一类的多个 vue 应用。</li><li><a href="https://github.com/eddiemf/vue-affix">vue-affix</a>-一个 Vue.js 2.x 插件，可在滚动时在窗口中添加元素，类似于 Bootstrap Affix，但更简单，更智能</li><li><a href="https://github.com/OXOYO/X-Browser-Update-Vue">X-Browser-Update-Vue</a>-一个 Vue.js 浏览器更新插件。</li><li><a href="https://github.com/dabernathy89/vue-query-builder">vue-query-builder</a>-用于使用嵌套条件构建复杂查询的 UI 组件。</li><li><a href="https://github.com/karakanb/vue-info-card">vue-info-card</a>-一个简单漂亮的卡片组件，带有优美的火花线和 CSS3 翻转动画。</li><li><a href="https://github.com/vinayakkulkarni/v-offline">v-offline</a>-简单，小巧且易于使用的 Vue 应用程序检测离线和在线事件(最小 390b)</li><li><a href="https://github.com/SeregPie/VueWordCloud">vue-word-cloud</a>-词云生成器。</li><li><a href="https://github.com/grzhan/vue-flat-surface-shader">vue-flat-surface-shader</a>- <a href="https://github.com/wagerfield/%E5%B9%B3%E9%9D%A2%E7%9D%80%E8%89%B2%E5%99%A8">Vue-flat-surface-shader</a></li><li><a href="https://github.com/ddgll/vue-easteregg">vue-easteregg</a>-Easey 在您的 Vue 应用中添加了 Easteregg(默认使用 konami 代码)</li><li><a href="https://github.com/noomerzx/vue-barcode-scanner">vue-barcode-scanner</a></li><li><a href="https://github.com/BrockReece/vue-heatmapjs">vue-heatmapjs</a>-用于跟踪和可视化鼠标活动的 Vue 指令</li><li><a href="https://github.com/meganetaaan/vue-maze">vue-maze</a>-由 Vue.js 组件制作的小巧迷宫游戏</li><li><a href="https://github.com/AshleyLv/vue-drag-verify">vue-drag-verify</a>-这是一个 vue 组件，可以滑动以解锁以进行登录或注册。</li><li><a href="https://github.com/kevinwarne/vue-balloon">vue-balloon</a>-Vue 组件，用于在页面一角创建固定的，可缩放的容器。与 gmail 中使用的邮件撰写包装类似。</li><li><a href="https://github.com/KamilOcean/vue-sticker">vue-sticker</a>-任意方向的贴纸效果</li><li><a href="https://github.com/vinayakkulkarni/v-rating">v-rating</a>-⭐️ 使用 VueJS 制作的语义 UI 中的评级组件(&lt;500B 压缩，速度非常快)</li><li><a href="https://github.com/michalsnik/vue-content-placeholders">vue-content-placeholders</a>-用于在 vue 中渲染诸如 Facebook 之类的伪造(渐进)内容的可组合组件</li><li><a href="https://github.com/fireyy/vue-page-designer">vue-page-designer</a>-Vue 组件，用于拖放来设计和构建移动网站。</li><li><a href="https://github.com/julon/vue-creativecommons">vue-creativecommons</a>-CreativeCommons.org Vue.js 组件库。</li><li><a href="https://github.com/coderdiaz/vue-status-indicator">vue-status-indicator</a>-一个 Vue.js 组件，用于将状态指示器显示为彩色圆点。</li><li><a href="https://github.com/mazipan/vue-google-adsense">vue-google-adsense</a>-具有 InFeed 和 InArticle Ads 支持的 Vue.js Google Adsense 组件</li><li><a href="https://github.com/shershen08/emoji-vue">emoji-vue</a>-Vue.js 项目的 Emoji😎👌🏻 下拉菜单</li><li><a href="https://github.com/vitogit/vue-chessboard">vue-chessboard</a>-棋盘 vue 组件可加载位置，创建位置并查看威胁。</li><li><a href="https://github.com/anteriovieira/vue-mindmap">vue-mindmap</a>-用于 mindnode 映射的 Vue 组件。</li><li><a href="https://github.com/ignoreintuition/v-currency">v-currency</a>-用于格式化货币的 Vue 组件。</li><li><a href="https://github.com/DCzajkowski/vue-emoji-picker">vue-emoji-picker</a>-高度可定制的 Unicode 表情符号选择器 🔥🚀</li><li><a href="https://github.com/meganetaaan/vue-8-puzzle">vue-8-puzzle</a>-一个由 Vue.js 组件制作的小巧幻灯片益智游戏</li><li><a href="https://github.com/evildvl/vue-e164">vue-e164</a>-具有 E.164 标准支持的可自定义电话格式化程序</li><li><a href="https://github.com/deemaagog/vue-pgn">vue-pgn</a>-Vue.js 组件，用于以 pgn 格式查看棋牌游戏</li><li><a href="https://github.com/fpluquet/vue-avatar-editor">vue-avatar-editor</a>-使用清晰的用户界面调整大小，旋转并裁剪上传的头像。</li><li><a href="https://github.com/Botre/vue-connection-listener">vue-connection-listener</a>-Vue 事件总线插件监听在线/离线更改。</li><li><a href="https://github.com/Botre/vue-sauce">vue-sauce</a>-Vue 的“查看源代码”指令。</li><li><a href="https://github.com/Botre/vue-prom">vue-prom</a>-Vue 承诺包装器组件。</li><li><a href="https://github.com/viclm/numeric-keyboard">数字键盘</a>-用于移动浏览器的数字键盘。</li><li><a href="https://github.com/Intera/vue-zoom-on-hover">vue-zoom-on-hover</a>-鼠标悬停时图像缩放</li><li><a href="https://github.com/HCESrl/vue-sensitive-image">vue-sensitive-image</a>-Vue 组件，可让您快速创建具有最佳数量的所有设备图像源的响应式图像标签。</li><li><a href="https://github.com/TonPC64/vue-highlight-text">vue-highlight-text</a>-Vue 组件，用于突出显示单词的多个实例</li><li><a href="https://github.com/anteriovieira/vue-cast-props">vue-cast-props</a>-提供了一种将 props 转换为常见数据类型的便捷方法。</li><li><a href="https://github.com/JustSteveKing/vue2-heropatterns">vue2-heropatterns</a>-一个 Vue2 实现，允许您将流行的 Hero Patterns 添加到任何 Div 上</li><li><a href="https://github.com/Developmint/vue-link">vue-link</a>-一个将所有链接都链接在一起的组件(处理外部和内部链接相同)</li><li><a href="https://github.com/vinayakkulkarni/vue-identify-network">vue-identify-network</a>-⚡️ 识别您的用户正在使用哪种互联网！</li><li><a href="https://github.com/ridaamirini/vue-cloneya">vue-cloneya</a>-用于克隆 DOM 元素的 vue 组件</li><li><a href="https://github.com/FissionHQ/vue-survey-builder">vue-survey-builder</a>-vue.js 应用程序的调查生成器</li><li><a href="https://github.com/Developmint/vue-if-bot">vue-if-bot</a>-一个轻量级的组件，用于基于用户代理向客户端隐藏/显示内容</li><li><a href="https://github.com/clampy-js/vue-clampy">vue-clampy</a>-Vue.js(2+)指令，通过在其中包含内容的元素加上省略号来限制元素的内容太长。</li><li><a href="https://github.com/promosis/vue-cookie-accept-decline">vue-cookie-accept-decline</a>-在页面上显示带有文字，拒绝按钮和接受按钮的横幅。记住使用 cookie 进行选择。使用创建时的当前选择来发出事件。符合 GDPR 要求。</li><li><a href="https://github.com/lossendae/vue-avatar">@ lossendae / vue-avatar</a>-VueJS 2.0 的头像组件。</li><li><a href="https://github.com/AlbertLucianto/vue-text-highlight">vue-text-highlight</a>-Vue.js 的文本荧光笔库 💄</li><li><a href="https://github.com/bsdfzzzy/vue2-hammer">vue2-hammer</a>Vue 2.x 的 Hammer.js 包装器支持移动触摸。</li><li><a href="https://github.com/johndatserakis/vue-countable">vue-countable</a>-countable.js 的 Vue 绑定。提供实时的段落，句子，单词和字符计数。</li><li><a href="https://github.com/phegman/v-show-slide">v-show-slide</a>-一个 Vue.js 指令，用于将元素上下移动动画：自动滑动。</li><li><a href="https://github.com/eCollect/vue-swipe-actions">vue-swipe-actions</a>-适用于 Vue.js 的 iOS 样式滑动操作</li><li><a href="https://github.com/nzlt/vue-friendly-iframe">vue-friendly-iframe</a>-用于创建超快速加载，无阻塞 iframe 的 Vue js 组件。</li><li><a href="https://github.com/mattmezza/vue-beautiful-chat">vue-beautiful-chat</a>-一个简单而美丽的 Vue 聊天组件后端不可知，完全可自定义和可扩展。</li><li><a href="https://github.com/zeknoss/vue-magnifier">vue-magnifier</a>-Vue.js 2.x 的简单图像缩放/放大组件。</li><li><a href="https://github.com/Astray-git/vue-highlight-words">vue-highlight-words</a>-Vue 组件可在较大的文本正文中突出显示单词。从[react-highlight-words]移植(<a href="https://github.com/bvaughn/react-highlight-words">https://github.com/bvaughn/react-highlight-words</a>)</li><li><a href="https://github.com/yanthems/vue-tags-ball">vue-tags-ball</a>-使用此插件创建漂亮的球形标签</li><li><a href="https://github.com/spemer/vue-rippler">vue-rippler</a>-用于自定义波纹效果的简单 Vue.js 插件</li><li><a href="https://github.com/chiaweilee/vue-contacts">vue-contacts</a>-Vue 的移动通讯录组件</li><li><a href="https://github.com/jmaczan/basic-vue-chat">basic-vue-chat</a>-易于使用的 Vue.js 聊天</li><li><a href="https://github.com/JayeshLab/vue-resize-text">vue-resize-text</a>-一个 vue 指令，可根据元素宽度自动调整字体大小。</li><li><a href="https://github.com/GabrielBibiano/vue-github-profile">vue-github-profile</a>-一个 Vue 组件，用于查看确定的用户的配置文件和存储库</li><li><a href="https://github.com/P3trur0/vue-niege">vue-niege</a>-🎅 单文件 Vue 组件可通过画布添加暴风雪。</li><li><a href="https://github.com/JonathanDn/vue-stars-rating">vue-dynamic-star-rating</a>-高度动态的 Vue 明星评分组件，例如 Google Play 评分 ⭐️⭐️⭐️⭐️⭐️⭐️</li><li><a href="https://github.com/lucpotage/vue-katex">vue-katex</a>-在 Vue.js 中使用 KaTeX 进行数学排版的简单插件</li><li><a href="https://github.com/loo41/vuc">vue-canvas-identify</a>- [vuc-identify]的 Vue 画布组件(<a href="http://vuc.tianchenyong.top/">http://vuc.tianchenyong.top</a>)</li><li><a href="https://github.com/loo41/vuc">vue-canvas-material</a>- [vuc-material]的 Vue 画布组件(<a href="http://vuc.tianchenyong.top/#/materia">http://vuc.tianchenyong.top/#/materia</a>)</li><li><a href="https://github.com/superhos/vue-baberrage">vue-baberrage</a>-一个基于 Vue.js 的简单弹幕插件 😎</li><li><a href="https://github.com/shershen08/vue-terminal-ui">vue-terminal-ui</a>-🖥TerminalUI 模拟器 Vue：自定义和基本命令</li><li><a href="https://github.com/ndabAP/vue-command">vue-command</a>-完全正常工作的 Vue.js 终端模拟器</li><li><a href="https://github.com/P3trur0/vue-ribbon">vue-ribbon</a>-GitHub 功能区的 Vue 组件</li><li><a href="https://github.com/trunda/avatio-avatar">avatio-avatar</a>-插图化身的 Vue 组件- <a href="https://avatio.cool/">Avatio</a>使用</li><li><a href="https://github.com/man15h/vue-jazzicon">vue-jazzicon</a>-用于 Vue 的简陋的 Jazzicon 组件。</li><li><a href="https://github.com/craigh411/vue-star-rating">vue-star-rating</a>-一个简单的，高度可定制的星级评分组件 ⭐️⭐️⭐️</li><li><a href="https://github.com/potato4d/vue-fixed-header">vue-fixed-header</a>-简单且跨浏览器友好的由 TypeScript 编写的 Vue.js 固定标头组件。</li><li><a href="https://github.com/dreambo8563/vue-particle-effect-buttons">vue-particle-effect-buttons</a>一个爆发粒子效果按钮组件。</li><li><a href="https://github.com/gorbypark/vue-insomnia">vue-insomnia</a>-防止显示屏进入休眠状态(唤醒锁定)。</li><li><a href="https://github.com/yimocanxue/vue-car-plate-keyboard">vue-car-plate-keyboard</a>-用于 VueJS 2.x 的汽车牌照号码键盘。能源车牌 🚗🚗🚗)</li><li><a href="https://github.com/krthr/vue-dataflow-editor">vue-dataflow-editor</a>-Vue2 数据流图编辑器</li><li><a href="https://github.com/kevinfaguiar/cool-emoji-picker">cool-emoji-picker</a>-Vue 的快速即插即用[Tw] emoji Picker(用于 Twemoji 渲染的+ textarea)组件。</li></ul><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><ul><li><a href="https://github.com/cristijora/vue-tabs">vue-tabs</a>-简单的标签和药丸。</li><li><a href="https://github.com/zhangxiang958/vue-tab">vue-swipe-tabs</a>-vue.js(vue2)的触摸滑动选项卡组件。</li><li><a href="https://github.com/spatie/vue-tabs-component">vue-tabs-component</a>-一种使用 Vue 显示标签的简便方法。</li><li><a href="https://github.com/kevindesousa/vue-k-tabs">vue-k-tabs</a>-具有 Gitlab 设计的简单标签组件。</li><li><a href="https://github.com/karambafe/vue-tabs-with-active-line">vue-tabs-with-active-line</a>-简单的 Vue 2 组件，可让您制作带有移动底线的标签</li><li><a href="https://github.com/viewweiwu/vue-tabs-chrome">vue-tabs-chrome</a>-一个类似于 Chrome 的标签的 Vue 组件。</li></ul><h2 id="电话号码输入格式器"><a href="#电话号码输入格式器" class="headerlink" title="电话号码输入格式器"></a>电话号码输入格式器</h2><ul><li><a href="https://github.com/LouisMazel/vue-phone-number-input">vue-phone-number-input</a>-一个漂亮的输入，用于格式化与国家/地区代码有效的电话号码：fire：</li></ul><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><ul><li><a href="https://github.com/hiyali/vue-smooth-picker">vue-smooth-picker</a>-Vue 2.x 的平滑选择器组件，例如 iOS 本机日期时间选择器。</li></ul><h2 id="发电机"><a href="#发电机" class="headerlink" title="发电机"></a>发电机</h2><ul><li><a href="https://github.com/formschema/native">FormSchema Native</a>-使用 JSON Schema 和 Vue.js 生成表单</li><li><a href="https://github.com/fightingm/vue-awesome-form">vue-awesome-form</a>-一个 vue.js 组件，就像 json-editor</li><li><a href="https://github.com/michaellyu/vue-generator">vue-generator</a>-Vue 项目的初始路由器和组件。</li><li><a href="https://github.com/14nrv/vue-form-json">vue-form-json</a>-从 json 生成具有验证和 bulma 样式的 vue 表单</li><li><a href="https://github.com/xaboy/form-create">form-create</a>-具有动态呈现，数据收集，验证和提交功能的表单生成器，支持 json 数据</li><li><a href="https://github.com/codetrial/element-form-builder">element-form-builder</a>-使用 JSON 模式构建 element-ui 表单。</li><li><a href="https://github.com/ncform/ncform">ncform</a>-一种非常好的配置生成表单的方式</li><li><a href="https://github.com/laraform/laraform">Laraform</a>-具有 Laravel 支持的 Vue.js 的高级表单生成器</li><li><a href="https://github.com/dream2023/vue-ele-form">vue-ele-form</a>-Vue DataForm，基于 element-ui</li></ul><h2 id="日期选择器"><a href="#日期选择器" class="headerlink" title="日期选择器"></a>日期选择器</h2><ul><li><a href="https://github.com/hilongjw/vue-datepicker">vue-datepicker</a>- [未维护]具有用于 Vue.js 的材质设计的日历和 datepicker 组件。</li><li><a href="https://github.com/phoenixwong/vue2-timepicker">vue2-timepicker</a>- [未维护] Vue 2.x 的下拉时间选择器(小时|分钟|秒)，具有灵活的时间格式支持。</li><li><a href="https://github.com/charliekassel/vuejs-datepicker">vuejs-datepicker</a>-一个简单的 Vue.js datepicker 组件。支持禁用日期，内联模式，翻译。</li><li><a href="https://github.com/nkoehring/vuedt">vuedt</a>- [未维护]疯狂的轻量级(5.5kb！)Vuejs 日期和时间选择器组件，动画效果很好，而且没有太多的模糊感。</li><li><a href="https://github.com/ankurk91/vue-flatpickr-component">vue-flatpickr-component</a>用于<a href="https://github.com/chmln/flatpickr">flatpickr</a>日期时间选择器的 Vue.js 组件</li><li><a href="https://github.com/ankurk91/vue-bootstrap-datetimepicker">vue-bootstrap-datetimepicker</a>Vue.js 组件，用于[eonasdan-bootstrap-datetimepicker](<a href="https://github.com/Eonasdan/bootstrap-">https://github.com/Eonasdan/bootstrap-</a> datetimepicker /)</li><li><a href="https://github.com/pepour/vue-jalaali-datepicker">vue-jalaali-datepicker</a>-vue.js 的 Jalaali 日历和日期选择器 2。</li><li><a href="https://github.com/ridewn/vue-date-picker">vue-date-picker</a>-一个受材料设计启发的 vue 日期选择器组件</li><li><a href="https://github.com/ittus/vue-monthly-picker">vue-monthly-picker</a>-仅适用于月份和年份选择器的 Vue.js 组件</li><li><a href="https://github.com/krystalcampioni/vue-hotel-datepicker">vue-hotel-datepicker</a>-响应式日期范围选择器，显示选定的住宿天数，允许自定义入住/退房规则，屏蔽日期，本地化支持等。</li><li><a href="https://github.com/dyonir/vue2-persian-datepicker">vue2-persian-datepicker</a>-vue 的真棒波斯 datepicker 组件。کامپوننتانتخابتاریخبرایویو。</li><li><a href="https://github.com/mariomka/vue-datetime">vue-datetime</a>-Vue 的移动友好日期时间选择器。支持日期，日期时间和时间模式，i18n 和禁用日期。</li><li><a href="https://github.com/bliblidotcom/vue-rangedate-picker">vue-rangedate-picker</a>-具有简单用法的范围日期选择器</li><li><a href="https://github.com/dwqs/v2-datepicker">v2-datepicker</a>-基于 Vue 2.x 的简单 datepicker 组件。</li><li><a href="https://github.com/weifeiyue/vue-datepicker-local">vue-datepicker-local</a>-Vue2 的一个漂亮的 Datepicker 组件。</li><li><a href="https://github.com/MikaelEdebro/vue-airbnb-style-datepicker">vue-airbnb-style-datepicker</a>-Vue datepicker，外观和功能与流行的 AirBnb datepicker 相似。轻巧，可配置且良好的浏览器支持！</li><li><a href="https://github.com/talkhabi/vue-persian-datetime-picker">vue-persian-datetime-picker</a>波斯材料 datepicker。支持日期时间，日期，时间，年，月。</li><li><a href="https://vcalendar.io/">VCalendar</a>非常可定制且功能强大的日历/日期选择器组件，具有许多功能和完善的文档。</li><li><a href="https://github.com/Owumaro/vue-date-range-picker">@ owumaro / vue-date-range-picker</a>-使用 Bootstrap 4 样式进行日期范围选择的 Vue 组件</li><li><a href="https://github.com/ikarosu/vue-datepicker-mobile">vue-datepicker-mobile</a>-适用于 vue2 的移动友好日期选择器。：cn：选择日期或日期范围，然后自定义所需的日期。</li><li><a href="https://github.com/liloow/vue-draggableCal">vue-draggable-cal</a>-不是普通的日期选择器。一个 Vuejs 可拖动的日期选择器，具有全新的响应式设计，可移动且具有 0 个依赖项，已压缩 17kb。</li><li><a href="https://github.com/Shchepotin/vue-vanilla-datetime-picker">vue-vanilla-datetime-picker</a>-Vue 的日期时间选择器。</li><li><a href="https://github.com/Innologica/vue2-daterange-picker/blob/master/README.md">vue2-daterange-picker</a>-基于 bootstrap-daterangepicker 的 Vue2 日期范围选择器(无 jQuery 依赖性)</li><li><a href="https://github.com/alexiscolin/vue-timeselector">vue-timeselector</a>-完全简单可定制的 Vue.js 功能强大的时间选择器组件。</li><li><a href="https://github.com/8788/vue-date-picker">vue-date-picker</a>-Vue 2.x 的轻量级 datepicker 组件。</li><li><a href="https://github.com/chronotruck/vue-ctk-date-time-picker">vue-ctk-date-time-picker</a>-一个漂亮的 VueJS 组件，用于选择日期和时间(使用范围模式)：新：</li><li><a href="https://github.com/jamespjarvis/simple-vue2-datetimepicker">simple-vue2-datetimepicker</a>-一个简单易用的 vue.js 组件，用于日期和时间选择。：新：</li><li><a href="https://github.com/sbarry50/vue-business-hours">vue-business-hours</a>-Vue 组件，用于在管理面板或仪表板中选择营业时间。</li><li><a href="https://github.com/ly525/material-vue-daterange-picker">material-vue-daterange-picker</a>-Vuejs 2.x 的 Material Design 样式的日期范围选择器，与 vuetify 和友好版本兼容手机。</li><li><a href="https://github.com/mathieustan/vue-datepicker">vue-datepicker</a>-具有 Vuejs 2.x 的 Material Design 样式的干净响应式日期选择器。(日期/月/季度&amp;&amp;日期范围选择器)：新：</li></ul><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><ul><li><a href="https://github.com/sagalbot/vue-select">vue-select</a>-一个本地 Vue.js 组件，提供与 Select2 类似的功能，而无需 jQuery 的开销。</li><li><a href="https://github.com/monterail/vue-multiselect">vue-multiselect</a>-Vue.js 的通用选择/多重选择/标记组件。</li><li><a href="https://github.com/stfalcon-studio/stf-vue-select">stf-vue-select</a>-最灵活和自定义的选择 Vue2</li><li><a href="https://github.com/mazipan/vue-select-image">vue-select-image</a>-Vue 2 组件，用于从列表中选择图像</li><li><a href="https://github.com/riophae/vue-treeselect">@ riophae / vue-treeselect</a>-具有对 Vue.js 的嵌套选项支持的多选组件。</li><li><a href="https://github.com/k186/pd-select">@ k186 / pd-select</a>-一个移动 UI 组件，例如 Vue 2.x 的 IOS 选择器，可以随便定义。</li><li><a href="https://github.com/mikerodham/vue-dropdowns">vue-dropdowns</a>-如果对 vue2.x 使用对象，则是一种显示选择框的简约且可适应的方法</li><li><a href="https://github.com/zanseven007/v-cascade">v-cascade</a>-带有 Vue 2.x 的层叠选择器的一个可爱组件(支持 PC 和 Mobile)</li><li><a href="https://github.com/IneoO/vue-multi-select">vue-multi-select</a>-用于对 Vue2 进行选择/多重选择的自定义组件。</li><li><a href="https://github.com/TerryZ/v-region">v-region</a>-一个简单的区域选择器，提供中文行政区划数据。</li><li><a href="https://github.com/TerryZ/v-selectpage">v-selectpage</a>-Vue2，分页列表或表格视图的强大选择器，使用标签进行多项选择，i18n 和服务器端资源支持。</li><li><a href="https://github.com/iliyaZelenko/vue-cool-select">vue-cool-select</a>-引导程序/材质设计主题，支持广告位，自动填充，事件，验证等。</li><li><a href="https://github.com/myENA/advanced-select">@ myena / advanced-select</a>-具有搜索功能，用于(取消)全选和 Bootstrap 3 主题的单/多选择组件</li><li><a href="https://github.com/Sandalf/vue-bootstrap-select">@ alfsnd / vue-bootstrap-select</a>-Vue 版本的<a href="https://github.com/snapappointments/bootstrap-%E9%80%89%E6%8B%A9/">bootstrap-select</a>。</li></ul><h2 id="滑块"><a href="#滑块" class="headerlink" title="滑块"></a>滑块</h2><ul><li><a href="https://github.com/NightCatSama/vue-slider-component">vue-slider-component</a>-vue1.x 和 vue2.x 的滑块。</li><li><a href="https://github.com/devstark-com/vue-circle-slider">vue-circle-slider</a>-vue2.x 的圆形滑块组件。</li><li><a href="https://github.com/fanyeh/vue-slider">vue-netflix-slider</a>-像 Netflix 的滑块。</li><li><a href="https://github.com/biigpongsatorn/vue-slide-bar">vue-slide-bar</a>-非常简单的 vue 滑条组件。</li><li><a href="https://github.com/hosein2398/Textra">textra</a>-Vue js 插件可滑动文本。</li><li><a href="https://github.com/kramer99/vue-knob-control">vue-knob-control</a>-Vue.js 的旋钮控件</li></ul><h2 id="拖放"><a href="#拖放" class="headerlink" title="拖放"></a>拖放</h2><ul><li><a href="https://github.com/SortableJS/Vue.Draggable">vuedraggable</a>-Vue 组件允许与 View-Model 同步进行拖放排序。基于 Sortable.js。</li><li><a href="https://github.com/Astray-git/vue-dragula">vue-dragula</a>-拖放是如此简单，很痛苦。</li><li><a href="https://github.com/kristianmandrup/vue2-dragula">vue2-dragula</a>-Vue2 的<code>vue-dragula</code>分支，有很多改进。</li><li><a href="https://github.com/hilongjw/vue-dragging">awe-dnd</a>-具有 Vue 的可排序列表指令。</li><li><a href="https://github.com/mauricius/vue-draggable-resizable">vue-draggable-resizable</a>-用于可拖动和可调整大小元素的 Vue2 组件。</li><li><a href="https://github.com/hejianxian/vddl">vddl</a>-用于使用 HTML5 拖放 API 修改列表的 Vue 组件，支持 VueJs 版本 1 和 2。</li><li><a href="https://github.com/cameronhimself/vue-drag-drop">vue-drag-drop</a>-HTML5 拖放 API 的最小且轻巧的包装器。</li><li><a href="https://github.com/goweiwen/vue-swing">vue-swing</a>-可滑动的卡片界面，如在 Jelly 和 Tinder 等应用中所见。</li><li><a href="https://github.com/Jexordexan/vue-slicksort">vue-slicksort</a>-一套无需依赖的混合包，用于动画，触摸友好，可排序的列表</li><li><a href="https://github.com/IsraelZablianov/draggable-vue-directive">draggable-vue-directive</a>-处理任何 Vue 组件拖放的简单指令。</li><li><a href="https://github.com/kutlugsahin/vue-smooth-dnd">vue-smooth-dnd</a>-smooth-dnd 库的 Vue 包装器。拖放，可分类的库，适用于许多情况。</li><li><a href="https://github.com/kirillmurashov/vue-drag-resize">vue-drag-resize</a>-一个无依赖的 Vue 组件，用于可拖动和可调整大小的元素，具有高宽比，反应性道具等</li><li><a href="https://github.com/Esvalirion/vue-drag-it-dude">vue-drag-it-dude</a>-Vue2 组件，可让您将对象拖动到任意位置。</li><li><a href="https://github.com/Vivify-Ideas/vue-draggable">vue-draggable</a>-Vue 拖放库没有任何依赖性。简单易用。</li><li><a href="https://github.com/rhwilr/vue-nestable">vue-nestable</a>-作为 vue 组件制作的简单拖放层次列表。</li><li><a href="https://github.com/phphe/vue-draggable-nested-tree">vue-draggable-nested-tree</a>-适用于 Vuejs2 [@phphe](<a href="https://github.com的功能强大的可自定义可拖动树视图组件./">https://github.com的功能强大的可自定义可拖动树视图组件。</a> com / phphe)</li></ul><h2 id="自动完成"><a href="#自动完成" class="headerlink" title="自动完成"></a>自动完成</h2><ul><li><a href="https://github.com/santiblanko/vue-instant">vue-instant</a>-Vue 即时可让您轻松为 vue 2 应用程序创建带有自动建议的自定义搜索控件。</li><li><a href="https://github.com/paliari/v-autocomplete">v-autocomplete</a>-Vue.js 的自动填充组件</li><li><a href="https://github.com/sandi-racy/vue-awesomplete">vue-awesomplete</a>-Awesomplete 的 Vue 包装器</li><li><a href="https://github.com/charliekassel/vuejs-autocomplete">vue-auto-complete</a>-Vue2 的自动完成。适用于对象或 api 调用。</li><li><a href="https://github.com/Educents/vue-autosuggest">vue-autosuggest</a>-WAI-ARIA 完整的 Autosuggest 组件，对渲染和样式进行了完全自定义。</li><li><a href="https://github.com/soraino/v-autosuggest">v-autosuggest</a>-一个简单的模块化 Vuejs 组件，可以自动建议来自动态或静态数据查询的输入。</li><li><a href="https://github.com/ieski/AutoComplete">自动完成</a>-适用于 Vue.js 2. *的简单自动完成组件</li><li><a href="https://github.com/Attrash-Islam/vue-infinite-autocomplete">vue-infinite-autocomplete</a>-Vue 的 Vue 无限-自动完成包装 2。</li><li><a href="https://github.com/KazanExpress/vue-simple-suggest">vue-simple-suggest</a>-Vue.js 的简单但功能丰富的自动完成组件</li><li><a href="https://github.com/TerryZ/v-suggest">v-suggest</a>-一个 Vue2 插件，用于输入内容建议，支持键盘快速选择。</li><li><a href="https://github.com/alexurquhart/vue-bootstrap-typeahead">vue-bootstrap-typeahead</a>-使用 Bootstrap 4 CSS 的 Vue2 的 typeahead / autocomplete 组件。</li></ul><h2 id="类型选择"><a href="#类型选择" class="headerlink" title="类型选择"></a>类型选择</h2><ul><li><a href="https://github.com/matiastucci/vue-input-tag">vue-input-tag</a>-Vue.js 2.0 输入标签组件。</li><li><a href="https://github.com/jcc/v-distpicker">v-distpicker</a>一个灵活，高度可用的区域选择器，用于为 Vue.js 2.x 挑选中国的省，市和地区。</li><li><a href="https://github.com/waynecz/vue-img-inputer">vue-img-inputer</a>Vue 2 的优美，高度可定制的 img 类型输入</li><li><a href="https://github.com/dameety/vue-image-preview">vue-img-preview</a>vue 2 中的图像输入预览组件</li><li><a href="https://github.com/vinayakkulkarni/v-image">v-image</a>：相机：用于输入 type = file 的小组件(&lt;1kb，已压缩)</li><li><a href="https://github.com/AlexMordred/vue-tagsinput">@ voerro / vue-tagsinput</a>一个简单的标签输入了带有 typeahead / autocomplete 的 Vue.js 2 组件</li><li><a href="https://github.com/tomquinonero/vue-tag-selector">vue-tag-selector</a>-类似于标签的输入。轻巧，可自定义并处理 REGEX 验证！</li></ul><h2 id="颜色选择器"><a href="#颜色选择器" class="headerlink" title="颜色选择器"></a>颜色选择器</h2><ul><li><a href="https://github.com/xiaokaike/vue-color">vue-color</a>-适用于 Sketch，Photoshop，Chrome 等的 Vue 拾色器。</li><li><a href="https://github.com/saintplay/vue-swatches">vue-swatches</a>-帮助用户选择漂亮的颜色！</li><li><a href="https://github.com/radial-color-picker/vue-color-picker">radial-color-picker</a>-简约的拾色器，着重于尺寸，可访问性和性能。</li><li><a href="https://github.com/shlomnissan/vue-color-picker-board">vue-color-picker-board</a>-为人类设计的 Vue 拾色器组件！</li><li><a href="https://github.com/baianat/verte">verte</a>-一个完整的 Vue.js 颜色选择器组件。</li></ul><h2 id="开关"><a href="#开关" class="headerlink" title="开关"></a>开关</h2><ul><li><a href="https://github.com/drewjbartlett/vue-switches">vue-switches</a>-具有主题支持的 Vue.js 的开/关开关组件。</li><li><a href="https://github.com/euvl/vue-js-toggle-button">vue-js-toggle-button</a>-Vue.js 2.0+切换/切换按钮-简单，漂亮，可自定义。</li><li><a href="https://github.com/mariomka/vue-checkbox-radio">vue-checkbox-radio</a>-一个 Vue 组件，可轻松设置复选框和广播输入的样式。</li><li><a href="https://github.com/Keiwen/vue-enhancedCheck">vue-enhanced-check</a>-用于重新设计/标记复选框/无线电的 Vue 组件，包括切换/切换按钮。</li><li><a href="https://github.com/hamed-ehtesham/pretty-checkbox-vue">pretty-checkbox-vue</a>- [pretty-checkbox 3]的实现(<a href="https://lokesh-coder.github.io/pretty-">https://lokesh-coder.github.io/pretty-</a> checkbox /)(用于美化复选框和单选按钮的纯 CSS 库)组件，适用于 Vue.js 2.2+。</li><li><a href="https://github.com/roszpun/vue-collapse/">vue2-collapse</a>-Vue Collapse 是一个灵活的内容切换插件，用于手风琴列表或任何其他有条件的内容呈现。</li><li><a href="https://github.com/vanderb/vue-badger-accordion">vue-badger-accordion</a>-用于 Vue.js 2.0+的 Badger 手风琴的包装组件</li><li><a href="https://github.com/Carrene/vue-loading-checkbox">vue-loading-checkbox</a>-具有加载状态的高度可定制的 Vue.js 复选框 UI 组件</li><li><a href="https://github.com/DannyFeliz/vue-rocker-switch">vue-rocker-switch</a>-Vue.js 的可自定义翘板开关组件。</li><li><a href="https://github.com/JonathanDn/vue-toggle-btn">vue-toggle-btn</a>-高度可定制，易于使用的优雅切换/切换按钮组件</li></ul><h2 id="屏蔽输入"><a href="#屏蔽输入" class="headerlink" title="屏蔽输入"></a>屏蔽输入</h2><ul><li><a href="https://github.com/niksmr/vue-masked-input">vue-masked-input</a>-Vue.js 的蒙版输入组件。</li><li><a href="https://github.com/text-mask/text-mask">vue-text-mask</a>-用于 React，Angular，Ember，Vue 和普通 JavaScript 的输入掩码。</li><li><a href="https://github.com/lakb248/vue-ip-input">vue-ip-input</a>-由 vuejs 实现的 ip 输入。</li><li><a href="https://github.com/kevinongko/vue-numeric">vue-numeric</a>-输入字段组件，用于显示基于 Vue 的货币值。</li><li><a href="https://github.com/moip/awesome-mask">awesome-mask</a>-基于纯 VanillaJS 实现的 Mask 指令</li><li><a href="https://github.com/vuejs-tips/v-money">v-money</a>-货币的微小(&lt;2k 压缩)输入/指令掩码</li><li><a href="https://github.com/autoNumeric/vue-autoNumeric">vue-autonumeric</a>-一个 Vue.js 组件，包装了很棒的<a href="http://autonumeric.org/">AutoNumeric</a>输入格式化程序库</li><li><a href="https://github.com/scleriot/vue-inputmask">vue-inputmask</a>-Vue.js 指令可将 Robin Herbots 的 inputmask 库添加到您的输入中(香草 javascript)。</li><li><a href="https://github.com/joseluisq/vue-input-number">vue-input-number</a>-Vue.js 2 的自定义输入数字组件。</li><li><a href="https://github.com/ndelvalle/v-unicode">v-unicode</a>-Vue 指令通过 unicode 值限制输入。</li><li><a href="https://github.com/ankurk91/vue-cleave-component">vue-cleave-component</a>- [cleave.js]的 Vue.js 组件(<a href="http://nosir.github.io/cleave.js">http://nosir.github.io/cleave.js</a> /)</li><li><a href="https://github.com/peteringram0/vue-ip">vue-ip</a>-具有端口和材料设计支持的 ip 地址输入</li><li><a href="https://github.com/raidan00/vue-r-mask">vue-r-mask</a>-具有类似于 javascript 正则表达式的模板的指令。</li><li><a href="https://github.com/zhouyuexie/vue-input-code">vue-input-code</a>-基于 Vue.js 2.0+验证码输入组件。</li><li><a href="https://github.com/myokyawhtun/label-edit">label-edit</a>-受 Trello 的启发。单击以显示可编辑的输入并返回值更改。这是 Vue 组件。</li><li><a href="https://github.com/ankurk91/vue-jquery-mask">vue-jquery-mask</a>- [jQuery Mask 插件]的 Vue.js v2.x 组件(<a href="https://github.com/igorescobar/">https://github.com/igorescobar/</a> jQuery-掩码-插件)</li><li><a href="https://github.com/vuejs-tips/vue-the-mask">vue-the-mask</a>-Tiny(&lt;2k gzipipped)和 Vue.js 的无依赖掩码输入</li><li><a href="https://github.com/loo41/vuc">vue-canvas-input</a>- [vuc-input]的 Vue 画布组件(<a href="http://vuc.tianchenyong.top/#/identify">http://vuc.tianchenyong.top/#/identify</a>)</li><li><a href="https://github.com/dm4t2/vue-currency-input">vue-currency-input</a>-轻松输入 Vue.js 的货币格式数字。</li><li><a href="https://github.com/Scrum/vue-restricted-input">vue-restricted-input</a>-基于[restricted-input]的 vue.js 输入掩码库(<a href="https://github.com/braintree">https://github.com/braintree</a> /受限输入)</li></ul><h2 id="RTF-编辑"><a href="#RTF-编辑" class="headerlink" title="RTF 编辑"></a>RTF 编辑</h2><ul><li><a href="https://github.com/surmon-china/vue-quill-editor">vue-quill-editor</a>-Vue2 的鹅毛笔编辑器组件。</li><li><a href="https://github.com/alidcastano/vue-mobiledoc-editor">vue-mobiledoc-editor</a>-适用于 Vuejs 的 mobiledoc 编辑器组件工具包。</li><li><a href="https://github.com/FranzSkuffka/vue-medium-editor">vue2-medium-editor</a>-Vue 2 的 MediumEditor 组件。</li><li><a href="https://github.com/helpbase/vue-froala">vue-froala</a>-用于 Froala 编辑器的 VueJS 包装器。</li><li><a href="https://github.com/froala/vue-froala-wysiwyg">vue-froala-wysiwyg</a>-Froala WYSIWIG HTML 编辑器的官方 VueJS 插件。</li><li><a href="https://github.com/fritx/vue-at">vue-at</a>-Vue 的 At.js。</li><li><a href="https://github.com/chmln/vue-wysiwyg">vue-wysiwyg</a>轻巧，快速且可扩展的所见即所得编辑器</li><li><a href="https://github.com/ankurk91/vue-trumbowyg">vue-trumbowyg</a>[Trumbowyg]的 Vue.js 组件(<a href="http://alex-d.github.io/Trumbowyg/)%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8">http://alex-d.github.io/Trumbowyg/)所见即所得编辑器</a></li><li><a href="https://github.com/CinKon/vue-pell-editor">vue-pell-editor</a>用于<a href="https://jaredreich.com/pell">Pell</a>的 Vue.js 组件所见即所得编辑器</li><li><a href="https://github.com/dyonir/vue-tinymce-editor">vue-tinymce-editor</a>Vue2 的 Tinymce 编辑器组件。</li><li><a href="https://github.com/Eazymov/vue-mce">vue-mce</a>-VueJS 的 tinymce 编辑器组件。</li><li><a href="https://github.com/davidroyer/vue2-editor">Vue2-Editor</a>-使用 Vue.js 和 Quilljs 的 HTML 编辑器</li><li><a href="https://github.com/surmon-china/vue-codemirror">vue-codemirror</a>-Vue2 的 Codemirror 组件。</li><li><a href="https://github.com/m3esma/vue-easy-tinymce">vue-easy-tinymce</a>-一个简单而强大的软件包，可在 Vue.js 项目中轻松使用 tinymce。</li><li><a href="https://github.com/SyedWasiHaider/vue-highlightable-input">vue-highlightable-input</a>-输入文字时突出显示和设置样式</li><li><a href="https://github.com/hanhdt/vue-trix">vue-trix</a>-用于 Vue.js 的简单轻巧的 Trix 富文本编辑器</li><li><a href="https://github.com/heyscrumpy/tiptap">tiptap</a>-Vue.js 的不可渲染且可扩展的 RTF 编辑器</li><li><a href="https://github.com/nhnent/toast-ui.vue-editor">toast-ui.vue-editor</a>- [TOAST UI 编辑器]的 Vue 包装器(<a href="http://ui.toast.com/tui">http://ui.toast.com/tui</a> -编辑)。</li><li><a href="https://github.com/ckeditor/ckeditor5-vue">ckeditor5-vue</a>-Vue.js 的官方 CKEditor 5 Rich Text 编辑器组件。</li><li><a href="https://github.com/yimogit/yimo-vue-editor">yimo-vue-editor</a>-Vue2 的 wangEditor2 组件。</li><li><a href="https://github.com/arnog/vue-mathlive">vue-mathlive</a>适用于 Vue.hjs 的 MathLive 数学编辑器(mathfield)</li></ul><h2 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h2><ul><li><p><a href="https://github.com/Vanthink-UED/vue-core-image-upload">vue-core-image-upload</a>-一个用于裁剪和上传图像的 vue 插件。</p></li><li><p><a href="https://github.com/zhanziyang/vue-croppa">vue-croppa</a>-适用于 Vue 2.0 的简单易用的可自定义轻量级移动友好图像裁剪器。</p></li><li><p><a href="https://github.com/xyxiao001/vue-cropper">vue-cropper</a>-vue2.0 的图片剪辑插件</p></li><li><p><a href="https://github.com/nhnent/toast-ui.vue-image-editor">toast-ui.vue-image-editor</a>- [TOAST UI 图像编辑器]的 Vue 包装器(http：// ui。 toast.com/tui-image-editor)。</p></li><li><p><a href="https://github.com/duyanpeng/vue-quick-cropper">vue-quick-cropper</a>-Vue 移动头像上传裁剪插件可以选择裁剪区域和缩放。</p></li><li><p><a href="https://github.com/loo41/vuc">vue-canvas-image</a>-Vue 画布组件，用于<a href="http://vuc.tianchenyong.top/#/image">vuc-image</a></p></li><li><p><a href="https://github.com/jofftiquez/vue-croppie">vue-croppie</a>-另一个图像裁剪器</p></li><li><p><a href="https://github.com/wannaxiao/vue-slim-cropper">vue-slim-cropper</a>-💇Vue 2.x 的简单优雅的移动图像裁剪上传组件。</p></li><li><p><a href="https://github.com/Norserium/vue-advanced-cropper">vue-advanced-cropper</a>-先进的裁剪器，使您有机会创建几乎任何想要的裁剪器</p></li><li><p><a href="https://github.com/diegopamio/vue-cloudinary">vue-cloudinary</a>-vue(2.0)插件提供了可重用的指令，可通过动态操作从 Cloudinary(<a href="https://cloudinary.com)获取图像(调整大小/%E8%A3%81%E5%89%AA/%E6%95%88%E6%9E%9C/%E6%B0%B4%E5%8D%B0/%E7%BC%A9%E6%94%BE/%E6%A0%BC%E5%BC%8F%E5%8C%96)%E5%92%8C%E4%BC%98%E5%8C%96">https://cloudinary.com)获取图像(调整大小/裁剪/效果/水印/缩放/格式化)和优化</a>(webp / png /自动质量/自动视网膜)。</p></li><li><p><a href="https://github.com/ssshooter/img-vuer">img-Vuer</a>-Vue2 的 Mobile-First 图像查看器/图库</p></li><li><p><a href="https://github.com/kevindesousa/vue-image-loader">vue-image-loader</a>-Vue 加载器/渐进式图像插件，例如 Medium。</p></li><li><p><a href="https://github.com/john015/vue-load-image">vue-load-image</a>-在图像加载期间显示加载器，并在图像加载失败时显示替代内容。</p></li><li><p><a href="https://github.com/wannaxiao/vue-image-painter">vue-image-painter</a>-V Vue 2.x 的图像魔术动画绘制效果组件。</p></li></ul><h2 id="视频操作"><a href="#视频操作" class="headerlink" title="视频操作"></a>视频操作</h2><ul><li><a href="https://github.com/MishaPetrov/vue-playlist">vue-playlist</a>-轻量级的 vue(2.0)组件，没有依赖关系，可提供真正无缝的 html5 视频播放。使用 Vanilla JS 进行无缝视频播放的唯一且唯一可行的解  决方案。它需要一系列视频并将它们拼接在一起成为一个视频。</li></ul><p>＃＃ 上传文件</p><ul><li><a href="https://github.com/thetutlage/vue-clip">vue-clip</a>-用于 VueJ 的简单且可入侵的文件上传器。支持 Vue&gt; = 2.1。</li><li><a href="https://github.com/saivarunk/vue-simple-upload">vue-simple-upload</a>-Vue.js 的简单文件上传组件。</li><li><a href="https://github.com/updivision/vue2-multi-uploader">vue2-multi-uploader</a>-使用 Vue.js v2 和 Axios 的拖放式多文件上传器组件。上载器显示文件名，大小和添加文件的总大小。它还允许设置所需的最小文件上传数量。</li><li><a href="https://github.com/rowanwins/vue-dropzone">vue-dropzone</a>-Dropzone.js 的 Vue.js(vue2)组件-具有图像预览功能的拖放文件上传实用程序。</li><li><a href="https://github.com/alexsasharegan/vue-transmit">vue-transmit</a>-一个纯粹的基于 Vue 2.0 的 Dropzone.js 的 Vue.js 拖放上传器组件</li><li><a href="https://github.com/lian-yue/vue-upload-component">vue-upload-component</a>-Vue 上载组件，多文件上载，上载目录，拖动上载，拖动目录。支持 Vue&gt; = 2.0</li><li><a href="https://github.com/simple-uploader/vue-uploader">vue-uploader</a>-一个由 simple-uploader.js 驱动的 Vue.js 上传组件</li><li><a href="https://github.com/InCuca/ic-firebase-uploader">ic-firebase-uploader</a>-用于 Firebase 存储的干净的多文件上传组件。</li><li><a href="https://github.com/charliekassel/vuejs-uploader">vuejs-uploader</a>-用于大型文件上传的可恢复的分段文件上传器。</li><li><a href="https://github.com/pqina/vue-filepond">vue-filepond</a>-FilePond 的 Vue.js 组件-文件上传库，可以上传您扔给它的任何内容。</li><li><a href="https://github.com/TerryZ/v-uploader">v-uploader</a>-一个 Vue2 插件，可以使上传文件变得更加轻松简单，您可以拖动文件或在对话框中选择文件进行上传</li></ul><h2 id="上下文菜单"><a href="#上下文菜单" class="headerlink" title="上下文菜单"></a>上下文菜单</h2><ul><li><a href="https://github.com/vmaimone/vue-context-menu">vue-context-menu</a>-vue js 的上下文菜单组件。</li><li><a href="https://github.com/timwis/vue-lil-context-menu">vue-lil-context-menu</a>-Vue 的灵活的 lil 上下文菜单组件。</li><li><a href="https://github.com/zgj233/vue-mouse-menu">vue-mouse-menu</a>-适用于 vue 2+的鼠标菜单组件。</li><li><a href="https://github.com/michitaro/vue-menu">@ hscmap / vue-menu</a>-vue2 的菜单/上下文菜单组件。</li><li><a href="https://github.com/rawilk/vue-context">vue-context</a>-用于 vue js 的简单但灵活的上下文菜单。</li><li><a href="https://github.com/johndatserakis/vue-simple-context-menu">vue-simple-context-menu</a>-为 Vue 构建的简单上下文菜单组件。左键单击和右键单击都可以很好地工作。</li><li><a href="https://github.com/Johnathan/vue-context-menu-popup">vue-context-menu-popup</a>-Vue 2 的上下文菜单弹出窗口。右键单击即可工作，也可以通过编程方式触发。</li><li><a href="https://github.com/Kiyoaki-w/Ki-vue-context">@ kiyoaki_w / vue-context</a>-为 Vue2 构建的可自定义上下文菜单组件，支持惊人的图标。</li></ul><h2 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="https://github.com/ridermansb/vue-gmaps">vue-gmaps</a>-使用 Google Maps API 搜索地点和地址。</li><li><a href="https://github.com/QingWei-Li/vuep">vuep</a>-使用实时编辑器和预览渲染 Vue 组件的组件。</li><li><a href="https://github.com/Gomah/vue-places">vue-places</a>-Places 组件基于 Vue 2.x 的 places.js。将任何输入转换为地址自动完成。</li><li><a href="https://github.com/apertureless/vue-password-strength-meter">vue-password-strength-meter</a>-vue.js 中基于 zxcvbn 的密码强度计。</li><li><a href="https://github.com/bkzl/vue-float-label">vue-float-label</a>-Vue.js 的浮动标签模式。</li><li><a href="https://github.com/javisperez/vuelongpress">vue-longpress</a>-一个 VueJS(2.x)按钮组件，需要您持续按下以确认给定的动作。</li><li><a href="https://github.com/olefirenko/vue-google-autocomplete">vue-google-autocomplete</a>-适用于 Google Maps Places API 的 Vue.js(2.x)自动建议组件。</li><li><a href="https://github.com/lakb248/vue-ip-input">vue-ip-input</a>-Vue.js 2.x 的 ip 输入组件</li><li><a href="https://github.com/termosa/vue-default-value">vue-default-value</a>-Vue.js 2.x 指令为可编辑元素设置默认值，而不会影响模型状态</li><li><a href="https://github.com/outluch/vue-model-autoset">vue-model-autoset</a>-一个 Vue.js 插件，可解决通过 v-model 指令观察动态添加的属性时 Vue 的限制</li><li><a href="https://github.com/NxtChg/pieces/tree/master/js/vue/vue-submit">vue-submit</a>-Ladda 的简单实现([1](<a href="http://lab.hakim.se/">http://lab.hakim.se</a> /ladda/)，<a href="https://msurguy.github.io/ladda-bootstrap/">2</a>)不到 90 行代码，没有任何依赖关系。</li><li><a href="https://github.com/SinanMtl/vue-rate">vue-rate</a>-Vue 的费率组件</li><li><a href="https://github.com/MadimetjaShika/vuetify-google-autocomplete">vuetify-google-autocomplete</a>-适用于 Google Maps Places API 的 Vuetify 就绪 Vue.js(2.x)自动建议组件。</li><li><a href="https://github.com/PygmySlowLoris/vue-ripple-directive">vue-ripple-directive</a>-材质纹波效果作为 Vue 指令。</li><li><a href="https://github.com/PygmySlowLoris/vue-fab">vue-fab</a>-Vue 浮动操作按钮。</li><li><a href="https://github.com/mazipan/vue-complexify">vue-complexify</a>-来自 jquery.complexify.js 的 Vuejs 移植库。</li><li><a href="https://github.com/FiguredLimited/vue-mc">vue-mc</a>-Vue.js 的模型和集合</li><li><a href="https://www.tallent.us/vue-stars/">vue-stars</a>-高度可定制的等级控制(使用星号或其他字符)</li><li><a href="https://github.com/imRohan/vue-confirmation-button">vue-confirmation-button</a>-可自定义的确认按钮，要求用户在执行操作之前先阅读消息</li><li><a href="https://github.com/ppietris/vue-poll">vue-poll</a>-用于投票的 Vue.js 组件</li><li><a href="https://github.com/gwenaelp/vue-diagrams">vue-diagrams</a>-vue.js 的图表组件，受 react-diagrams 启发</li><li><a href="https://github.com/updivision/vue-easy-polls">vue-easy-polls</a>-一个 Vue.js 组件，用于创建民意调查，投票和显示结果。它易于实现且易于定制。</li><li><a href="https://github.com/mengdu/m-button">vue-m-button</a>-vue 的漂亮按钮组件。</li><li><a href="https://github.com/ittus/vue-long-click">vue-long-click</a>-用于 vue 的长按(长按)指令库，支持移动设备和台式机。</li><li><a href="https://github.com/FGRibreau/ui-predicate/tree/master/packages/ui-predicate-vue">vue-ui-predicate</a>-规则编辑器，通用过滤 UI，Vue JS 的谓词组件。</li><li><a href="https://github.com/ajerez/vue-mobile-detection">vue-mobile-detection</a>-Vue.js 原型函数<code>this。$ isMobile()</code>会根据布尔值是否返回布尔值用户正在使用手机浏览。</li><li><a href="https://github.com/Cobertos/vue-input-contenteditable">vue-input-contenteditable</a>-用于`contenteditable’的 Vue 组件包装，具有您通常期望的所有功能。进行漂亮的输入，不受“ input [type =’text’]”的限制。</li></ul><h2 id="向导"><a href="#向导" class="headerlink" title="向导"></a>向导</h2><ul><li><a href="https://github.com/cristijora/vue-form-wizard">vue-form-wizard</a>-基于选项卡的组件，可以代替经典的 bootstrap 和 jQuery 表单向导</li><li><a href="https://github.com/PygmySlowLoris/vue-stepper">vue-stepper</a>-一个简单的步进器，具有诸如 next，back 和 end 之类的简单动作，可以执行简单的表单。</li><li><a href="https://github.com/adi518/vue-stepper-component">vue-stepper-component</a>-具有 Vuex 支持和零依赖性的完全可定制的 Stepper 组件。</li></ul><h2 id="CSV"><a href="#CSV" class="headerlink" title="CSV"></a>CSV</h2><ul><li><a href="https://github.com/ynishi/vuecsv">vuecsv</a>-来自 json 的简单 CSV 下载程序，带有选项模式面板组件。</li></ul><h2 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h2><ul><li><a href="https://github.com/TugayYaldiz/vue-comment-grid">vue-comment-grid</a>-💬 使用 CSS Grid 和 Firebase REST API + Authentication 构建的自适应 Vue.js 注释系统插件。</li></ul><h2 id="帆布"><a href="#帆布" class="headerlink" title="帆布"></a>帆布</h2><ul><li><a href="http://github.com/dankuck/vue-easeljs">vue-easeljs</a>-对 HTML5 canvas 元素的数据驱动控制。</li><li><a href="https://github.com/chenxuan0000/vue-canvas-effect">vue-canvas-effect</a>-Vue.js 的简单画布效果集合。</li><li><a href="https://github.com/rafaesc/vue-konva">vue-konva</a>-Vue＆Canvas-JavaScript 库，用于使用 Vue 绘制复杂的画布图形。</li><li><a href="https://github.com/mycure-inc/vue-html2canvas">vue-html2canvas</a>-Vue mixin 捕获 html 并使用 Html2Canvas 将其转换为图像。</li><li><a href="https://github.com/ZYSzys/vue-canvas-nest">vue-canvas-nest</a>-适用于 canvas-nest 的 Vue.js 组件。</li><li><a href="https://github.com/neighborhood999/vue-signature-pad">vue-signature-pad</a>-V Vue 签名板组件</li></ul><h2 id="链接预览"><a href="#链接预览" class="headerlink" title="链接预览"></a>链接预览</h2><ul><li><a href="https://github.com/nivaldomartinez/link-prevue">link-prevue</a>-用于生成链接预览的灵活组件。</li></ul><h2 id="游览"><a href="#游览" class="headerlink" title="游览"></a>游览</h2><ul><li><a href="https://github.com/pulsardev/vue-tour">vue-tour</a>-轻巧且可自定义的游览插件</li><li><a href="https://github.com/sschandi/vue-page-guide">vue-page-guide</a>-具有指令的页面游览/指南插件</li></ul><h2 id="UI-布局"><a href="#UI-布局" class="headerlink" title="UI 布局"></a>UI 布局</h2><ul><li><a href="https://github.com/MopTym/vue-waterfall">vue-waterfall</a>-Vue.js 的瀑布布局组件。</li><li><a href="https://github.com/David-Desmaisons/Vue.Isotope">vueisotope</a>-用于同位素过滤器和分类魔术布局的 Vue 组件。</li><li><a href="https://github.com/jbaysolutions/vue-grid-layout">vue-grid-layout</a>-Vue.js 的可拖动和可调整大小的网格布局。</li><li><a href="https://github.com/surmon-china/vue-drag-zone">vue-drag-zone</a>-Vue.js(2.x)的拖动区域组件。</li><li><a href="https://github.com/shershen08/vue-masonry">vue-masonry</a>-用于砌体块布局的 Vue.js 指令。</li><li><a href="https://github.com/bkzl/vue-fraction-grid">vue-fraction-grid</a>-基于 Flexbox 的 Vue.js 响应式分数网格系统。</li><li><a href="https://github.com/tangbc/vue-virtual-scroll-list">vue-virtual-scroll-list</a>-Vue(2.x)组件通过使用虚拟滚动列表支持大数据。</li><li><a href="https://github.com/Akryum/vue-virtual-scroller">vue-virtual-scroller</a>-用于有效滚动大量元素的组件(Vue 2.x)。</li><li><a href="https://github.com/ddgll/vue-virtualscroll">vue-virtualscroll</a>- [Vue 2.x]组件用于虚拟滚动内容。</li><li><a href="https://github.com/rachmanzz/vue-inview">vue-inview</a>- [Vue 2.x]视口，在输入或离开 DOM 元素时获取通知。</li><li><a href="https://github.com/dattn/dnd-grid">dnd-grid</a>-具有可拖动和可调整大小的框的 vuejs 网格</li><li><a href="https://github.com/ktquez/vue-extend-layout">vue-extend-layout</a>-扩展默认布局或为 Vue.js SPA 的页面创建自定义布局</li><li><a href="https://github.com/paulcollett/vue-masonry-css">vue-masonry-css</a>-由 CSS 驱动的 Vue.js Masonry 布局组件，无依赖</li><li><a href="https://github.com/alvarotrigo/vue-fullpage.js">vue-fullpage.js</a>-Vue.js 的官方 fullPage.js 组件。</li><li><a href="https://github.com/starkwang/vue-virtual-collection">vue-virtual-collection</a>-用于有效渲染大型集合数据的 Vue 组件。</li><li><a href="https://github.com/xudafeng/autosensitive-vue">自动响应-vue</a>-Vue 的自动响应网格布局库。</li><li><a href="https://github.com/SeregPie/VueFlex">VueFlex</a>-一个 flexbox 网格系统。</li><li><a href="https://gitlab.com/shellyBits/v-chacheli">v-chacheli</a>-一个 Vue.js 组件，用于创建和显示类似于仪表板的自定义网格布局。</li><li><a href="https://github.com/mattrothenberg/vue-grid-styled">vue-grid-styled</a>-一组轻量级的功能网格组件，从 React 的<a href="https://github.com移植/">grid-styled</a> / jxnblk /网格样式/)</li><li><a href="https://github.com/anthinkingcoder/simple-grid">简单网格</a>-用于网格布局的 Vue 组件，支持 flex。</li><li><a href="https://github.com/kavalcante/vue-container-component">vue-container-component</a>-受 Bootstrap 容器启发的简单容器组件</li><li><a href="https://github.com/alexiscolin/vue-colcade">vue-colcade</a>-用于将 Colcade 网格布局集成到 Vuejs 的小包装。</li><li><a href="https://github.com/arnedesmedt/vue-ads-layout">vue-ads-layout</a>-一个小的 Vue 组件库，可快速生成带有工具栏，左/右抽屉和页脚的响应式 Web 应用程序布局。所有组件都可以固定或相对放置。</li><li><a href="https://github.com/imlinus/Vue-Magic-Grid">vue-magic-grid</a>-Vue.js 2 的 Magic Grid 小端口。</li><li><a href="https://github.com/venkatperi/vue-splitter-pane">vue-splitter-pane</a>-一个 Vuejs 组件，它以可调节的拆分方式(垂直或水平)呈现两个插槽。</li><li><a href="https://github.com/antoniandre/splitpanes">splitpanes</a>-一个 Vue JS 可靠，简单且可触摸的窗格拆分器/缩放器。</li><li><a href="https://github.com/promosis/vue-mock-layout">vue-mock-layout</a>-轻松模拟 Vue 应用程序的布局。</li><li><a href="https://github.com/dreambo8563/vue-simple-drawer">vue-simple-drawer</a>-带有反弹动画，支持嵌套和自定义主题的小抽屉面板。方向：左/右/上/下</li><li><a href="https://github.com/1000ch/vue-grd">vue-grd</a>-用于网格布局的简单，轻巧和灵活的 Vue.js 组件。</li></ul><h2 id="自适应"><a href="#自适应" class="headerlink" title="自适应"></a>自适应</h2><ul><li><a href="https://github.com/quasarframework/quasar">quasar-framework</a>-类星体框架。使用 VueJs 2 使用相同的代码构建响应式网站，混合移动应用程序(在 Android 和 iOS 上看起来本机)和 Electron 应用程序。</li><li><a href="https://github.com/vuematerial/vue-material">vue-material</a>-Vue.js 的材料设计。</li><li><a href="https://github.com/vuetifyjs/vuetify">vuetify</a>-Vue.js 的材料组件框架 2。</li><li><a href="https://github.com/museui/muse-ui">muse-ui</a>-Vue.js 的材料组件库 2。</li><li><a href="https://github.com/rafaelpimpa/buefy">buefy</a>-基于布尔玛框架的组件。</li><li><a href="https://github.com/ElemeFE/element">element-ui</a>-用于 Web 的 Vue.js 2.0 UI 工具包。</li><li><a href="https://github.com/vouill/vue-bulma-components">vue-bulma-components</a>-对 vue 组件轻松使用 bulma 类语法。</li><li><a href="https://www.iviewui.com/">iview-ui</a>-适用于 Web 的 Vue.js 2.0 UI 框架。</li><li><a href="https://at.aotu.io/">AT-UI</a>-Vue.js 2.0 使用 ♥ 制作的专门用于桌面应用程序的全新扁平 UI-Kit</li><li><a href="https://www.npmjs.com/package/v-semantic">v-semantic</a>-Vue 的<a href="https://semantic-ui.com/">semantic-ui</a>的实现</li><li><a href="https://bootstrap-vue.github.io/">bootstrap-vue</a>-Vue.js 2 的<a href="https://getbootstrap.com/">bootstrap-4</a>网格和组件的实现。</li><li><a href="https://myliang.github.io/fish-ui">fish-ui</a>-用于 Web 的 Vue.js 2.0 UI 工具包</li><li><a href="https://github.com/zircleUI/zircleUI">zircle-ui</a>-开发可缩放用户界面的前端库。</li><li><a href="https://github.com/stasson/vue-mdc-adapter">vue-mdc-adapter</a>-根据 MDC 团队[指南]的 Vue.js 的材料组件集成(<a href="https://github.com/material">https://github.com/material</a> -components / material-components-web / blob / master / docs / integrating-into-frameworks.md)。</li><li><a href="https://github.com/matsp/material-components-vue">Material Components Vue</a>- [material-components-web]的包装器(<a href="https://github.com/material-components/material-components-%E7%BD%91%E7%BB%9C)%E7%9A%84">https://github.com/material-components/material-components-网络)的</a> Vue.js</li><li><a href="https://github.com/sudheerj/vueface">VueFace</a>-用于 Web 的 Vue.js 2.0 UI 组件库</li><li><a href="https://github.com/lusaxweb/vuesax">vuesax</a>-Vue.js 的前端 vue 组件。</li><li><a href="https://bitbucket.org/acidmartin/vuecidity">vuecidity</a>-Vue.js 2.0 的 UI 组件框架</li><li><a href="https://github.com/vueComponent/ant-design-vue">ant-design-vue</a>-基于 Ant Design 和 Vue 2.5.0 的企业级 UI 组件</li><li><a href="https://github.com/heyui/heyui">heyui</a>-(<a href="https://www.heyui.top/zh)-%E9%80%82%E7%94%A8%E4%BA%8E">https://www.heyui.top/zh)-适用于</a> Web 的 Vue.js 2.0 UI 工具包。</li><li><a href="https://carvuejs.github.io/">Carvue.js</a>-IBM 的 Vue.js 碳设计系统</li><li><a href="https://material.balmjs.com/">BalmUI</a>-Vue.js 的下一代 Material UI</li><li><a href="https://osiris-ui.github.io/osiris">Osiris UI</a>-：art：一个 Vue.js 2.0 通用响应式 UI 组件库</li><li><a href="https://github.com/N3-components/N3-components">N3-components</a>-使用 Vue 2 构建的漂亮 Web 组件</li><li><a href="https://github.com/designrevision/shards-vue">碎片 Vue</a>-✨ 基于 Bootstrap 4 框架的时尚＆UI 组件库。</li><li><a href="https://github.com/SAP/fundamental-vue">基础 Vue</a>-基于 SAP Fiori 基础的组件。</li><li><a href="https://github.com/framevuerk/framevuerk">Framevuerk</a>-🚀 快速，响应迅速，无依赖性，基于 Vue.js 的方向支持和可配置 UI 框架。</li><li><a href="https://github.com/carbon-design-system/carbon-components-vue">@ Carbon / vue</a>-@carbon 团队的 Carbon Design System 组件。</li><li><a href="https://github.com/jdf2e/nutui/">NutUI</a>-适用于移动网络的 Vue.js 2.0 UI 工具包</li><li><a href="https://github.com/inkline/inkline/">Inkline</a>-Inkline 是用于 Vue.js 的现代 UI / UX 框架，旨在创建完美的响应式 Web 应用程序。</li><li><a href="https://github.com/Wscats/vue-awesome-mui">vue-awesome-mui</a>-用于 Web 的 Vue.js 2.0 MUI 组件</li><li><a href="https://github.com/mdbootstrap/Vue-Bootstrap-with-Material-Design">MDBootstrap</a>-基于最新的 Bootstrap 4 和 Vue 2.6.10 的强大 UI 工具包，提供了一组平滑的，响应式页面模板，布局，组件和小部件，以快速构建响应迅速，移动优先的网站和应用。</li></ul><h2 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h2><ul><li><p><a href="https://github.com/framework7io/framework7">Framework7-Vue</a>-使用 Framework7＆Vue 构建功能齐全的 iOS 和 Android 应用。</p></li><li><p><a href="https://github.com/airyland/vux">vux</a>- [中文]基于 WeUI 的 Vue UI 组件。</p></li><li><p><a href="https://github.com/OnsenUI/OnsenUI">vue-onsenui</a>-使用 HTML5 和 JavaScript 的移动应用开发框架和 SDK。创建美观，高性能的跨平台移动应用程序。基于 Web 组件，并提供 Angular 1、2，React 和 Vue.js 的绑定。</p></li><li><p><a href="https://weex.incubator.apache.org/">Weex</a>-Weex 提供了发布跨平台的功能，因此 Web，Android 和 IOS 应用程序可以使用相同的 API 开发功能。</p></li><li><p><a href="https://github.com/bmfe/eros-template">weex-eros</a>- [中文] Eros 是基于 Weex 和 Vue 的应用程序解决方案，使您能够使用 Vue 的 API，简单快速地开发 Vue 中小型应用程序。</p></li><li><p><a href="https://github.com/ElemeFE/mint-ui">mint-ui</a>-Vue.js 的移动 UI 元素。</p></li><li><p><a href="https://github.com/youzan/vant">vant</a>-来自 YouZan 的 Vue.js 2.0 移动用户界面。</p></li><li><p><a href="https://didi.github.io/cube-ui">cube-ui</a>-Vue.js 编写的出色的移动 ui lib 实现 2。</p></li><li><p><a href="https://didi.github.io/mand-mobile">mand-mobile</a>-基于 Vue.js 2 的移动 UI 工具包，专为金融场景而设计。</p></li></ul><h2 id="组件集合"><a href="#组件集合" class="headerlink" title="组件集合"></a>组件集合</h2><ul><li><a href="https://github.com/posva/vue-mdc">vue-mdc</a>-Vue.js 的 Material Components Web。</li><li><a href="https://github.com/JosephusPaye/Keen-UI">keen-ui</a>-用 Vue 编写并受 Material Design 启发的基本 UI 组件的轻量级集合。</li><li><a href="https://github.com/vue-bulma/vue-admin">vue-admin</a>-Vue 管理面板框架，由 Vue 2.0 和 Bulma 0.3 提供支持。</li><li><a href="https://github.com/vuikit/vuikit">vuikit</a>-具有 Vue 所有功能的 UIkit。</li><li><a href="https://github.com/wxsms/uiv">uiv</a>由 Vue2 实现的 Bootstrap3 组件。</li><li><a href="https://github.com/wffranco/vue-strap">wffranco / vue-strap</a>-使用 Vue.js 2 构建的 Bootstrap 3 组件</li><li><a href="https://github.com/chaogao/jsmod-pc-vue">jsmod-vue-pc</a>-适用于 vue 2.0 的高度可扩展的 Web 组件</li><li><a href="https://github.com/guilhermewaess/SemVue">guilhermewaess / SemVue</a>-使用 Vue 2 实现的语义 UI 模块</li><li><a href="https://github.com/aidewoode/office-ui-fabric-vue">office-ui-fabric-vue</a>-Vue.js 的 Office UI Fabric 实现</li><li><a href="https://github.com/epicmaxco/vuestic-admin">vuestic-admin</a>-带有自定义组件集合的 Vue Admin 仪表板。内置 Vue 2 和 Bootstrap 4</li><li><a href="https://github.com/Semantic-UI-Vue/Semantic-UI-Vue">语义 UI Vue</a>-Vue 的语义 UI 集成</li><li><a href="https://github.com/lusaxweb/vuesax">vuesax</a>-Vue.js 的前端 vue 组件。</li><li><a href="https://www.syncfusion.com/products/vue">Vue 的基本 JS 2</a>-功能齐全的 45+ Vue.js 组件，其中包括数据网格，图表，计划程序和图表组件等。</li><li><a href="https://github.com/banshee-ui/banshee">Banshee</a>-一个几乎没有渲染的 Vue UI 组件和实用程序框架，没有 CSS。</li><li><a href="https://github.com/nvms/vue-atlas">vue-atlas</a>-漂亮的 Vue 组件库。</li><li><a href="https://github.com/DevExpress/devextreme-vue">DevExtreme Vue 组件</a>-65+响应迅速且功能完善的 Vue UI 组件，具有可自定义的 Material Design 和 Bootstrap 兼容主题。</li><li><a href="https://www.jqwidgets.com/vue/">jqwidgets</a>-70 多个具有 Material Design 主题的 Vue.js 2.0 UI 组件。</li><li><a href="https://github.com/juijs/vue-uix">vue-uix</a>-Vue.js 中用于网页实现的 UI 集合</li><li><a href="https://github.com/LeCoupa/vuedarkmode">vuedarkmode</a>-Vue.js 的极简暗设计系统 🎨</li><li><a href="https://www.telerik.com/kendo-vue-ui/components/">Kendo Vue 用户界面</a>–为业务应用程序构建的 70 多个 UI 组件，包括网格。对多种设计语言(包括材料设计和 Bootstrap)的支持完全响应。</li><li><a href="https://github.com/arturmiz/vuent">Vuent</a>-实现 Microsoft Fluent Design 的 Vue.js 组件</li><li><a href="https://github.com/dreambo8563/bpit-vue">bpit / vue</a>-专注于效果的 Vue 组件库</li><li><a href="https://github.com/alfonsobries/vue-tailwind">vue-tailwind</a>-具有可自定义类的 Vue 组件可用于 TailwindCSS，但与任何框架兼容。</li></ul><h2 id="管理模板"><a href="#管理模板" class="headerlink" title="管理模板"></a>管理模板</h2><ul><li><a href="https://github.com/TonyLuo/iview-vue-admin">iView Vue 管理员</a>-iView Vue 管理员/基于 iView 2.x 的管理门户模板</li><li><a href="https://github.com/TonyLuo/element-vue-admin">element Vue Admin</a>-element Vue Admin /基于 Element UI 2.x 的管理门户模板</li><li><a href="https://github.com/PanJiaChen/vue-element-admin">vue-element-admin</a>-基于 Element UI 2.x 的神奇 vue 管理员</li><li><a href="https://github.com/d2-projects/d2-admin">D2 管理员</a>-vue 制作的优雅后台模板<a href="https://d2admin.fairyever.com/">在线演示</a></li><li><a href="https://github.com/wxs77577/rest-admin">rest-admin</a>-基于 Vue 和 Bootstrap 4 的 Restful 管理面板<a href="http://rest-admin.genyii.com/">在线演示</a></li><li><a href="https://github.com/DesignRevision/shards-dashboard-vue">Shards Dashboard Lite Vue</a>-✨ 现代管理模板，具有数十个自定义组件和模板。</li><li><a href="https://github.com/tookit/vue-material-admin">Vue 材质管理员</a>-Vue 材质设计管理员模板</li><li><a href="https://github.com/codetrial/element-admin">element-admin</a>-使用 Vue CLI 3 和 element-ui 的简单而强大的 vue 管理员。</li></ul><h2 id="服务器端渲染"><a href="#服务器端渲染" class="headerlink" title="服务器端渲染"></a>服务器端渲染</h2><ul><li><a href="https://github.com/nuxt/nuxt.js">Nuxt.js</a>-通用的 Vue.js 框架。</li><li><a href="https://github.com/ream/ream">Ream</a>-用于构建服务器呈现的静态网站的简约框架。</li><li><a href="https://github.com/universal-vue/uvue">Universal vue</a>-Vue CLI 插件，可轻松创建通用 Vue 应用程序</li></ul><h2 id="静态网站生成器"><a href="#静态网站生成器" class="headerlink" title="静态网站生成器"></a>静态网站生成器</h2><ul><li><a href="https://github.com/vuejs/vuepress">VuePress</a>-简约的 Vue 驱动的静态网站生成器。</li><li><a href="https://github.com/egojump/peco">Peco</a>-人类的静态网站生成器。未维护</li><li><a href="https://github.com/egoist/saber">Sabre</a>-一个静态网站生成器，用于使用 Vue.js 构建快速的网站。</li><li><a href="https://github.com/gridsome/gridsome">Gridsome</a>-使用 Vue.js 构建超快速，现代化的网站</li></ul><h2 id="其他-2"><a href="#其他-2" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="https://github.com/scriptPilot/app-framework">app-framework</a>-具有 HTML 和 JavaScript 的 IOS 和 Android 应用程序-开发，构建和部署-免费和开源。</li><li><a href="https://github.com/myfirebase/myfirebase">Myfirebase</a>-一种已解耦的单页应用程序框架，该框架与 google firebase 高度兼容。</li><li><a href="https://github.com/tower1229/Vue-Access-Control">Vue-Access-Control</a>基于 Vue.js 的前端访问控制框架 2。</li><li><a href="https://github.com/basys/basys">Basys</a>工具箱，用于构建完整的 Vue.js 应用程序</li><li><a href="https://github.com/zhennann/cabloy">CabloyJS</a>基于 KoaJS＆EggJS＆VueJS＆Framework7 的终极 NodeJS 全栈业务开发平台</li></ul><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><ul><li><a href="https://github.com/iFgR/vue-shortkey">vue-shortkey</a>-Vue-ShortKey-Vue.js 的插件。</li><li><a href="https://github.com/scaccogatto/vue-throttle-event">vue-throttle-event</a>-基于 requestAnimationFrame 的油门事件。</li><li><a href="https://github.com/scaccogatto/vue-waypoint">vue-waypoint</a>-Vue 的 Waypoint 组件，这是滚动时触发功能的最简单方法。</li><li><a href="https://github.com/simplesmiler/vue-clickaway">vue-clickaway</a>-可重用的 Vue.js 组件的可重用 clickaway 指令。</li><li><a href="https://github.com/vue-comps/vue-scrollfire">vue-scrollfire</a>-在特定的滚动位置触发事件。</li><li><a href="https://github.com/David-Desmaisons/Vue.resize">vue-resize-directive</a>-Vue 指令可检测具有去污和节流能力的调整大小事件。</li><li><a href="https://github.com/ndelvalle/v-click-outside">v-click-outside</a>-Vue 指令对元素外部的点击做出反应，而不会停止事件传播。</li><li><a href="https://github.com/nchutchind/vue-outside-events">vue-outside-events</a>-Vue 2.x 指令可帮助指定元素侦听发生在自身外部的特定事件。</li><li><a href="https://github.com/JSmith01/vue-selectable">vue-selectable</a>-Vue 1.x / 2.x 指令可通过鼠标选择项目。</li><li><a href="https://github.com/huangshuwei/vue-click-helper">vue-click-helper</a>-Vue2.x 指令可处理同一元素上的 click 事件和 dblclick 事件。</li><li><a href="https://github.com/Dafrok/v-hotkey">v-hotkey</a>-Vue 2.x 指令，用于将热键绑定到组件。</li><li><a href="https://github.com/Akryum/vue-resize">vue-resize</a>-Vue 2.x 组件可检测 DOM 元素的大小调整(基于事件/无 window.onresize)</li><li><a href="https://github.com/Akryum/vue-observe-visibility">vue-observe-visibility</a>-使用 Intersection Observer API 的 Vue 2.x 指令可检测元素是否可见(在视口中是否被隐藏) CSS)。</li><li><a href="https://github.com/zhanziyang/v-dragged">v-dragged</a>-用于拖动事件检测的 Vue 2.x 指令插件。</li><li><a href="https://github.com/ianaya89/vue-esc">vue-esc</a>-Vue.js 指令，可在转义键盘上添加文档事件监听器。</li><li><a href="https://github.com/shentao/vue-global-events/">vue-global-events</a>–使用 Vue 的事件修饰符处理全局事件(如快捷方式)的组件</li><li><a href="https://github.com/gu-fan/vue-edge-check/">vue-edge-check</a>–检查浏览器边缘，以防止用`vue-router’滑动边缘时奇怪地触发过渡效果</li><li><a href="https://github.com/PNKBizz/vue-mutation-observer">vue-mutation-observer</a>–使用 MutationObserver API 观察 DOM 中变化的简单而微小的指令</li><li><a href="https://github.com/AlekseyPleshkov/vue-scroll-show">vue-scroll-show</a>–如果用户在滚动后到达该元素，则显示该元素</li><li><a href="https://github.com/Almoullim/vue-tabevents">vue-tabevents</a>–其他打开的标签页之间易于通信</li><li><a href="https://github.com/shwilliam/vue-visibility-trigger">vue-visibility-trigger</a>-👀 滚动到视图时以声明方式触发方法</li></ul><h2 id="响应式设计"><a href="#响应式设计" class="headerlink" title="响应式设计"></a>响应式设计</h2><ul><li><a href="https://github.com/scaccogatto/vue-viewports">vue-viewports</a>-定义您的自定义视口，并在组件中使用它们。</li><li><a href="https://github.com/reinerBa/Vue-Responsive">vue 响应</a>：Vue.js(2.x)指令用于隐藏/显示具有 Bootstrap 4、3 或自定义断点的 HTML 元素。</li><li><a href="https://github.com/drenglish/vue-match-media">vue-match-media</a>-Vue 2.x 兼容插件，提供一致，语义化的方法来使组件具有媒体查询意识。</li><li><a href="https://github.com/jofftiquez/vue-media-query-mixin">vue-media-query-mixin</a>-Vue 2 媒体查询 mixin 可以在组件 js 和组件模板中使用。与引导程序和可视化视口兼容。如果屏幕宽度为 xs，则返回 wxS；如果屏幕宽度为 sm，则返回 wSM。</li><li><a href="https://github.com/apertureless/vue-breakpoints">vue-breakpoints</a>-Vue 2 最小组件，用于显示和隐藏基于断点的元素。受到 Airbnb 的启发。</li><li><a href="https://github.com/AlexandreBonaventure/vue-mq">vue-mq</a>-提供一些有用的工具，以语义和移动优先的 API(Vue 2.x)快速设置响应式设计</li><li><a href="https://github.com/SeregPie/VueResizeSensor">VueResizeSensor</a>-支持调整大小事件的容器。</li><li><a href="https://github.com/adi518/vue-breakpoint-component">vue-breakpoint-component</a>-用于 组成 CSS 断点状态。</li><li><a href="https://github.com/nash403/fine-mq">fine-mq</a>-一个很好的 API，可以轻松地管理 JS 中的媒体查询，并且可以与 VueJS 作为插件进行一流的集成。</li><li><a href="https://github.com/Kelin2025/vue-sensitive-components">vue-response-components</a>-使用<code>ResizeObserver</code>创建响应组件。</li><li><a href="https://github.com/promosis/vue-screen-size">vue-screen-size</a>-可以轻松，被动地访问屏幕的宽度和高度。</li></ul><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><ul><li><p><a href="https://github.com/formly-js/vue-formly">vue-formly</a>-JavaScript 支持的 Vue.js 表单。</p></li><li><p><a href="https://github.com/simplesmiler/vue-focus">vue-focus</a>-用于可重用 Vue.js 组件的可重用 focus 指令。</p></li><li><p><a href="https://github.com/icebob/vue-form-generator">vue-form-generator</a>-Vue.js 的基于架构的表单生成器组件。</p></li><li><p><a href="https://gitlab.com/formschema/native">FormSchema Native</a>-使用 JSON Schema 和 Vue.js 生成表单</p></li><li><p><a href="https://github.com/InCuca/ic-formly">ic-formly</a>-由 vue-formly 提供支持的简单表单组件。</p></li><li><p><a href="https://github.com/laravel-enso/formbuilder">表单生成器</a>-基于 Json 模板的表单生成器，基于 Vue 和 Laravel。</p></li><li><p><a href="https://github.com/Botre/vue-autofocus-directive">vue-autofocus-directive</a>-Vue 自动聚焦指令。</p></li><li><p><a href="https://github.com/fightingm/vue-awesome-form">vue-awesome-form</a>-一个 vue.js 组件，就像 json-editor</p></li><li><p><a href="https://github.com/antonreshetov/vue-form-components">vue-form-components</a>-带有验证的干净＆最小化 vue 表单元素</p></li><li><p><a href="https://github.com/ncform/ncform">ncform</a>-一种非常好的配置生成表单的方式</p></li><li><p><a href="https://github.com/logaretm/vee-validate">vee-validate</a>-简单的 Vue.js 输入验证插件。</p></li><li><p><a href="https://github.com/xpepermint/vue-rawmodel">vue-rawmodel</a>-Vue.js v2 的 RawModel.js 插件。表单验证从未如此简单。</p></li><li><p><a href="https://github.com/monterail/vuelidate">vuelidate</a>-针对 Vue.js 的简单，轻量级基于模型的验证。</p></li><li><p><a href="https://github.com/semisleep/simple-vue-validator">simple-vue-validator</a>-一个简单而灵活的 vue.js 验证器库。</p></li><li><p><a href="https://github.com/joseluisq/vue-vform">vue-vform</a>-Vue.js 2 表单组件，集成了 jQuery 验证和 Axios。</p></li><li><p><a href="https://github.com/fergaldoyle/vue-form">vue-form</a>-Vue.js 的全面表单验证。</p></li><li><p><a href="https://github.com/cj/vuelidation">vuelidation</a>-简单，功能强大的 vuejs 验证。</p></li><li><p><a href="https://github.com/val-bubbleflat/laravel-vue-validator">laravel-vue-validator</a>-显示来自 laravel 验证规则的错误</p></li><li><p><a href="https://github.com/deulos/vue-daval">vue-daval</a>-超级 vue 数据验证器。简便，简单，准确。</p></li><li><p><a href="https://github.com/gustavoSoriano/willvalidate">willvalidate</a>-Vue.js 的验证表单。</p></li><li><p><a href="https://github.com/silksofthesoul/vue-m-validator">vue-m-validator</a>-用于 VueJ 的模型数据验证库。</p></li><li><p><a href="https://github.com/Pitu/vue-isyourpasswordsafe">vue-isyourpasswordsafe</a>-用 Vue 编写的小型实用程序，用于检查给定的密码是否已针对“我已被拥有” API 泄漏。</p></li><li><p><a href="https://github.com/AlekseyPleshkov/vue-form-send">vue-form-send</a>-用于从表单和原始验证发送数据的 Vue.js 指令</p></li><li><p><a href="https://github.com/janiskelemen/formvuelar">FormVuelar</a>-考虑服务器端验证的 Vue 表单组件</p></li><li><p><a href="https://phphe.github.io/vue-final-validate/">vue-final-validate</a>-根据我的开发经验，Vue 验证解决方案支持嵌套，异步。</p></li><li><p><a href="https://github.com/cretueusebiu/vform">vform</a>-一种在 Vue 中处理 Laravel 后端验证的简单方法。</p></li></ul><h2 id="调整大小"><a href="#调整大小" class="headerlink" title="调整大小"></a>调整大小</h2><ul><li><a href="https://github.com/PxyUp/vue-not-visible">vue-not-visible</a>-Vue 指令，用于从屏幕上小于断点的 dom(如 v-if)元素中删除。</li><li><a href="https://github.com/mya-ake/vue-window-size">vue-window-size</a>-提供反应性窗口大小属性。</li><li><a href="https://github.com/shwilliam/vue-sensitive-text">vue-sensitive-text</a>-↔ 相对于其父节点的宽度缩放其子节点的组件</li></ul><h2 id="滚动"><a href="#滚动" class="headerlink" title="滚动"></a>滚动</h2><ul><li><a href="https://github.com/theomessin/vue-chat-scroll">vue-chat-scroll</a>-Vue.js 2.0 的自动滚动至底部指令。</li><li><a href="https://github.com/rigor789/vue-scrollTo">vue-scrollto</a>-添加了一个指令，该指令侦听单击事件并滚动到元素。</li><li><a href="https://github.com/Developmint/vue-next-level-scroll">vue-next-level-scroll</a>-一种基于组件且支持 SSR 的方法，可使用现代 Scroll Behavior API 进行平滑滚动</li><li><a href="https://github.com/metawin-m/vue-scroll-sync">vue-scroll-sync</a>-同步容器滚动位置的组件</li><li><a href="https://github.com/phegman/v-scroll-lock">v-scroll-lock</a>-用于正文滚动锁定而不中断目标元素滚动的 Vue.js 指令</li><li><a href="https://github.com/mercs600/vue2-perfect-scrollbar">vue2-perfect-scrollbar</a>-PerfectScrollbar 简约包装器</li><li><a href="https://github.com/KevinHoughton/vue-scroll-to">vue-scroll-to</a>-添加了一个指令，该指令侦听单击事件并滚动到元素。</li><li><a href="https://github.com/guillaumebriday/vue-scroll-progressbar">vue-scroll-progressbar</a>-可自定义的组件，用于指示进度条中滚动的相对位置。</li><li><a href="https://github.com/caiofsouza/vue-backtotop">vue-backtotop</a>-Vue.js 的 Back-to-top 组件，单击该组件可将页面滚动到顶部。</li><li><a href="https://github.com/luiguild/v-bar">VBar</a>-适用于 Vue.js 2x 的虚拟响应式跨浏览器滚动条组件。</li><li><a href="http://serafin.io/vuebar/">Vuebar</a>-使用本地滚动行为的自定义滚动条的 Vue 2 指令。轻巧，高性能，可定制且无依赖性。</li><li><a href="https://github.com/ozangulle/vue-detached-scrollbar">vue-detached-scrollbar</a>-一个简单的滚动条，可以从正在滚动的容器中分离出来。</li><li><a href="https://github.com/YvesCoding/vuescroll">vuescroll</a>-基于 Vue.js 的滚动插件，用于统一 PC 和移动设备中的滚动。</li><li><a href="https://github.com/hfalucas/vue-simplebar">vue-simplebar</a>-Simplebar 插件的 Vue.js 包装器。</li><li><a href="https://github.com/scaccogatto/smooth-vuebar">smooth-vuebar</a>-平滑滚动条的 Vue 指令包装</li><li><a href="https://github.com/chrishurlburt/vue-scrollview">vue-scrollview</a>-一个组件，该组件利用作用域的插槽来检测 vue 组件何时进入和离开视口。</li><li><a href="https://github.com/eddiemf/vue-scrollactive">vue-scrollactive</a>-根据视口中的当前部分在菜单项中添加一个活动类，单击菜单项时也会滚动到该部分。</li><li><a href="https://github.com/heavyy/vue-intersect">vue-intersect</a>-一个 Vue 组件，用于向 Vue 组件或 HTML 元素添加交集观察者。</li><li><a href="https://github.com/AlexandreBonaventure/vue-scrollmonitor">vue-scrollmonitor</a>-一个 Vue 插件，可在支持多种浏览器的情况下观看视口内部元素的可见性状态(使用提供/注入，因此兼容 <a href="mailto:&#118;&#x75;&#101;&#x40;&#50;&#46;&#x32;">&#118;&#x75;&#101;&#x40;&#50;&#46;&#x32;</a> 。X)</li><li><a href="https://github.com/xiaoluoboding/vue-stroll">vue-stroll</a>-适用于 Vue.js 2.x 的超棒 CSS3 列表滚动效果组件。</li><li><a href="https://github.com/nash403/navscroll-js">navscroll-js</a>-在滚动时突出显示菜单项，并且在单击菜单项时也会滚动到某个部分。用作 vue 组件，vue 指令或与 vanilla js 一起使用。</li><li><a href="https://github.com/Desdesdesgo/vue-scrollwatch">vue-scrollwatch</a>-一个轻便的插件，可检测滚动事件，在元素进入视口时自定义回调，将’scrollTo’api 暴露给特定元素。使用 vue 指令。</li><li><a href="https://github.com/vtimofeev/vue-check-view">vue-check-view</a>-一个检查元素是否在视口中的插件。快速，小型，无依赖性，实时演示。</li><li><a href="https://github.com/JALBAA/vue-stickto">vue-stickto</a>-支持多个 DOM 节点的 vue 指令会自动粘贴到顶部</li><li><a href="https://github.com/ibufu/vue2-scrollspy">vue2-scrollspy</a>-一个 scrollspy 插件和动画滚动到。</li><li><a href="https://github.com/jeneser/vue-scroll-behavior">vue-scroll-behavior</a>-自定义路线导航中的滚动行为。特别是哈希模式。</li><li><a href="https://github.com/voxtobox/vue-scroll-stop">vue-scroll-stop</a>-到达边缘时停止传播滚动。</li><li><a href="https://github.com/chenxuan0000/vue-seamless-scroll">vue-seamless-scroll</a>-Vue.js 的简单无缝  滚动。</li></ul><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><ul><li><a href="https://github.com/vuejs/vue-router">vue-router</a>-Vue.js 的官方路由器。</li><li><a href="https://github.com/ElderJames/vue-router-storage">vue-router-storage</a>-Vue.js 2 和 vue-router 2 的路由器存储和解决方案</li><li><a href="https://github.com/edgarnadal/vue-tidyroutes">vue-tidyroutes</a>-分散的 vue-router 路由定义</li><li><a href="https://github.com/raniesantos/vue-routisan">vue-routisan</a>-基于 Laravel 路由系统的 Vue 路由器的优雅路由定义</li><li><a href="https://github.com/raniesantos/vue-error-page">vue-error-page</a>-提供路由器视图的包装器，使您可以显示错误页面而不更改 URL</li><li><a href="https://github.com/40818419/vue-router-sitemap">vue-router-sitemap</a>-通过 vue-router 配置生成 sitemap.xml</li><li><a href="https://github.com/f/vue-smart-route">vue-smart-route</a>-智能路由指令，可使用 Vue.js 制作具有智能外观的应用程序。</li><li><a href="https://github.com/ccqgithub/vue-router-lite">vue-router-lite</a>-Vue.js 2 的基于组件的声明性路由器。</li></ul><h2 id="延迟加载"><a href="#延迟加载" class="headerlink" title="延迟加载"></a>延迟加载</h2><ul><li><a href="https://github.com/hilongjw/vue-lazyload">vue-lazyload</a>-一个 Vue.js 插件，用于将图像或组件延迟加载到应用程序中。</li><li><a href="https://github.com/darrynten/vue-lazy-background-images">vue-lazy-background-images</a>-延迟加载 Vue 2 的背景图像。</li><li><a href="https://github.com/MatteoGabriele/vue-progressive-image">vue-progressive-image</a>-Vue 渐进式图像加载插件。</li><li><a href="https://github.com/lsycxyj/vue-l-lazyload">vue-l-lazyload</a>-Vue.js v2.x +的 lazyload 插件。</li><li><a href="https://github.com/JALBAA/vue-lazyload-img">vue-lazyload-img</a>-专门针对移动浏览器进行了优化。支持 V2 和 v1。</li><li><a href="https://github.com/yyh1102/vue-lazyload-images">vue-lazy-images</a>-Vue 2.x 的 lazyload 图像插件。</li><li><a href="https://github.com/nkoehring/v-lazy-img">v-lazy-img</a>-Tiny(&lt;0.6kb)指令，用于 Vue 2 的渐进式图像加载。</li><li><a href="https://github.com/matheusgrieger/vue-clazy-load">vue-clazy-load</a>-使用 IntersecionObserver for Vue 2 的轻量级可转换图像延迟加载组件。</li><li><a href="https://github.com/thangman22/vue-lazy-this">vue-lazy-this</a>-使用 Intersection Observer API 的延迟加载组件。</li><li><a href="https://github.com/dwqs/v2-lazy-list/">v2-lazy-list</a>-一个基于 Vue 2.x 的简单的延迟加载列表组件</li><li><a href="https://github.com/ooade/pimg">pimg</a>-一个用于延迟加载图像的简单渐进图像组件。</li><li><a href="https://github.com/mazipan/vue-tiny-lazyload-img">vue-tiny-lazyload-img</a>-用于延迟加载图像的小尺寸 Vue.js v.2 +指令</li><li><a href="https://github.com/3vilArthas/vue-lazy-youtube-video">vue-lazy-youtube-video</a>-一个用于延迟加载 YouTube 视频的简单 Vue.js 组件。</li><li><a href="https://github.com/Kazap/lazyload-vue">lazyload-vue</a>-适用于 vanilla-lazyload 的 Vue 插件。</li></ul><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><ul><li><a href="https://github.com/TahaSh/vue-paginate">vue-paginate</a>-一个简单的 vue.js 插件，可对数据进行分页。</li><li><a href="https://github.com/matfish2/vue-pagination-2">vue-pagination-2</a>-Vue.js 2 分页组件。</li><li><a href="https://github.com/sant123/vuejs-uib-pagination">vuejs-uib-pagination</a>-适用于 Vue.js 的最佳，完整的分页插件。受角引导分页启发。</li><li><a href="https://github.com/lokyoung/vuejs-paginate">vuejs-paginate</a>-用于创建分页的 Vue.js(v2.x +)组件。</li><li><a href="https://github.com/brunoseco/vue-pagination-bootstrap">vue-pagination-bootstrap</a>-一个 Vue.js(1.x＆2.x)服务器端分页组件，带有基于 Bootstrap 的模板</li><li><a href="https://github.com/vinayakkulkarni/laravel-vue-semantic-ui-pagination">laravel-vue-semantic-ui-pagination</a>-与 Laravel 和 Semantic-UI 一起使用的 Vue.js 2.x 分页。</li><li><a href="https://github.com/alziqziq/vue-paginate-al">vue-paginate-al</a>-Vue 分页并返回您的数据。</li><li><a href="https://github.com/coderdiaz/vue-tiny-pagination">vue-tiny-pagination</a>-用于创建微小分页的 Vue 组件。</li><li><a href="https://github.com/gilbitron/laravel-vue-pagination">laravel-vue-pagination</a>-适用于 Laravel 分页器的 Vue.js 分页组件，可与 Bootstrap 一起使用。</li><li><a href="https://github.com/Botre/vue-lpage">vue-lpage</a>-低级 Vue 分页组件。</li><li><a href="https://github.com/TerryZ/v-page">v 页</a>-一个简单的分页栏，包括基于 Vue2.x 的长度菜单，i18n 支持。</li><li><a href="https://github.com/grinmax/vue-smart-pagination">vue-smart-pagination</a>-具有许多不错设置的任何数据的智能分页。</li><li><a href="https://github.com/sbaidon/vue-paginatron">vue-paginatron</a>-分页组件使用范围插槽道具构建，具有最大的灵活性。</li><li><a href="https://github.com/arnedesmedt/vue-ads-pagination">vue-ads-pagination</a>-使用 css 框架[tailwindcss](<a href="https://tailwindcss.com/docs/what">https://tailwindcss.com/docs/what</a> -is-tailwind /)</li></ul><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><ul><li><a href="https://github.com/asika32764/vue2-animate">vue2-animate</a>-Animate.css 的 Vue.js 2.0 端口。与 Vue 的内置转换一起使用。</li><li><a href="https://github.com/radical-dreamers/animated-vue">animated-vue</a>-一个 Vue.js 2.x 插件，可轻松使用 Animate.css 动画作为过渡。就像``一样简单！</li><li><a href="https://github.com/chenqingspring/vue-lottie">vue-lottie</a>-一个 Vue.js 2.x 插件，用于基于 bodymovin 渲染特效动画</li><li><a href="https://github.com/jaweii/vueg">Vueg</a>-使 vue-router 具有过渡效果/为 webApp 提供转场特效的开源 Vue 插件</li><li><a href="https://jofftiquez.github.io/v-animate-css/">v-animate-css</a>-最容易实现 Animate.css 的 Vue 2 指令</li><li><a href="https://github.com/lukechinworth/vue-mixin-tween">vue-mixin-tween</a>-Mixin 工厂，它将补间值添加到动画的组件上下文中</li><li><a href="https://github.com/JefferyHus/v-odometer">v-odometer</a>-轻松平滑地转换数字。使用此库可为您的应用程序提供平滑的动画，仅适用于数字。</li><li><a href="https://github.com/cristijora/vue2-transitions">vue2-transitions</a>✨ 可重复使用的 Vue 2 过渡组件</li><li><a href="https://github.com/mattrothenberg/vue-overdrive">vue-overdrive</a>Vue 应用程序的超级简单的魔术移动过渡 🎩</li><li><a href="https://github.com/Leocardoso94/animated-number-vue">animated-number-vue</a>超级简单的数字动画方法。</li><li><a href="https://github.com/Orlandster1998/vue-typed-js">vue-typed-js</a>集成了 Typed.js，可轻松创建打字动画。</li><li><a href="https://github.com/inamori/vue-parent-change-transition">vue-parent-change-transition</a>启用子组件在更改父组件时进行动画处理。</li><li><a href="https://github.com/guanzo/vue-smooth-reflow">vue-smooth-reflow</a>响应数据变化而转换元素重排。</li><li><a href="https://github.com/SeregPie/VueTween">VueTween</a>允许组件补间其属性。</li><li><a href="https://github.com/danieldiekmeier/vue-slide-up-down">vue-slide-up-down</a>就像 jQuery 的<code>slideUp</code> /<code>slideDown</code>一样，但是对于 Vue！</li><li><a href="https://github.com/BenAHammond/vue-anime">vue-animejs</a>Vue 的简单<code>anime.js</code>指令。</li><li><a href="https://github.com/zulko/eagle.js/">Eagle.js</a>Eagle.js 是 Vue.js 的基于 Web 的幻灯片框架。</li><li><a href="https://github.com/Popmotion/popmotion/tree/master/packages/vue-pose">vue-pose</a>Pose for Vue 是一个声明式运动系统，结合了 CSS 过渡的简单性和 CSS 的强大功能和灵活性 JavaScript。</li><li><a href="https://github.com/k-okina/vue-slide-up-down-component">vue-slide-up-down-component</a>这是一个简单的界面，但是实现了非常灵活而强大的幻灯片动画 Vue！</li><li><a href="https://github.com/pearofducks/femtoTween">femtoTween</a>具有一流 Vue 支持的简约(零深度，小于 1k)补间库</li><li><a href="https://github.com/deivthings/vue-sequential-entrance">vue-sequential-entrance</a>插件，用于创建带有页面元素列表的优雅的连续动画入口。零努力。简单轻巧</li><li><a href="https://github.com/mike-prince/vue-animate-scroll">vue-animate-scroll</a>一种超级轻量级  的方法，可在元素滚动到视图中时向其添加 CSS 动画。</li><li><a href="https://github.com/kai-oswald/vue-svg-transition">vue-svg-transition</a>创建 2 状态，SVG 驱动的过渡</li><li><a href="https://github.com/Orlandster/vue-page-transition">vue-page-transition</a>Vue.js 的简单路由/页面转换</li></ul><h2 id="元标记"><a href="#元标记" class="headerlink" title="元标记"></a>元标记</h2><ul><li><a href="https://github.com/ktquez/vue-head">vue-head</a>-管理 head 标签的元信息，一种简单的方法。</li><li><a href="https://github.com/declandewet/vue-meta">vue-meta</a>-在 Vue 2.0 组件中管理页面元信息。支持 SSR +流媒体。</li><li><a href="https://github.com/troxler/vue-headful">vue-headful</a>-从视图中设置文档``和 meta 标签。</li><li><a href="https://github.com/VeryWow/vue-simple-headful">vue-simple-headful</a>-使用 vue.js 轻松设置元标记-具有 TypeScript 支持的更简单的<code>vue-headful</code>替代方法。</li></ul><h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><ul><li><a href="https://github.com/calebroseland/vue-dom-portal">vue-dom-portal</a>-Vue.js 组件中 DOM 元素的转义口。</li><li><a href="https://linusborg.github.io/portal-vue">portal-vue</a>-一个 Vue 插件，用于在 DOM 中的任何位置渲染组件的模板(在 virtualDOM 级别上有效，不会在 DOM 中移动节点)</li></ul><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><ul><li><a href="https://github.com/freearhey/vue2-filters">vue2-filters</a>-适用于 Vue 2. *的标准过滤器 Vue 1. *的集合。</li><li><a href="https://github.com/jofftiquez/vue-morphling">vue-morphling</a>-Vue 2 的标准和自定义过滤器的集合。</li><li><a href="https://github.com/mazipan/vue-currency-filter">vue-currency-filter</a>-轻巧且可自定义的 Vue 2 货币过滤器。</li><li><a href="https://github.com/Trekels/vue-trans">vue-trans</a>-一个简单的过滤器，提供了与 Symfony trans 相似的翻译方式。</li><li><a href="https://github.com/mazipan/vue-string-filter">vue-string-filter</a>-轻量级 Vue 2 字符串处理过滤器。</li><li><a href="https://github.com/ERPedersen/vue-units">vue-units</a>-在 Vue 2 中使用的方便的单位转换过滤器的集合。</li><li><a href="https://github.com/lloydjatkinson/vue-numeral-filter">vue-numeral-filter</a>-过滤器的集合，允许在组件的模板部分内联使用 Numeral.js。</li><li><a href="https://github.com/eduardnikolenko/vue-filter-date-format">vue-filter-date-format</a>-Vue 2 的简单日期时间过滤器。</li><li><a href="https://github.com/eduardnikolenko/vue-filter-pluralize">vue-filter-pluralize</a>-Vue 2 的简单复数过滤器。</li><li><a href="https://github.com/eduardnikolenko/vue-filter-date-parse">vue-filter-date-parse</a>-Vue 2 的简单解析日期时间过滤器。</li></ul><h2 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h2><ul><li><a href="https://github.com/MMF-FE/vue-svgicon">vue-svgicon</a>-创建 svg 图标组件的工具。(版本 2.x)。</li><li><a href="https://github.com/LucasLeandro1204/vue-content-loading">vue-content-loading</a>-Vue 组件可轻松构建(或使用预设)Facebook 之类的 SVG 加载卡。</li><li><a href="https://github.com/DrSensor/vue-annotator">vue-annotator</a>-使用任何 SVG 元素(“ rect”，“ polygon”以及其他更多元素，即使包装了 HTML 元素如“ canvas”，也可以为页面添加注释)在<code>foreignObject</code>中)</li><li><a href="https://github.com/thierrymichel/vue-svg-sprite">vue-svg-sprite</a>-简单使用 SVG sprite(vue 2.x)的指令。</li><li><a href="https://github.com/biigpongsatorn/vue-svg-filler">vue-svg-filler</a>-用于自定义 svg 文件 🖍(vue 2.x)的 Vue 组件。</li></ul><h2 id="其他-3"><a href="#其他-3" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="https://github.com/staskjs/vue-resource-progressbar-interceptor">vue-resource-progressbar-interceptor</a>-将进度条与所有请求联系在一起的拦截器，很明显，正在加载某些东西。</li><li><a href="https://github.com/David-Desmaisons/Vue.ImagesLoaded">vue-images-loaded</a>-Vue.js 2.0 指令可检测图像加载。</li><li><a href="https://github.com/javisperez/vue-visible">vue-visible</a>-VueJS(2.x)的 v-visible 指令，类似于 v-show 但具有可见性。</li><li><a href="https://github.com/FranckFreiburger/vue-resize-sensor">vue-resize-sensor</a>-用于检测容器大小的组件(基于事件)</li><li><a href="https://github.com/ndelvalle/v-blur">v-blur</a>-Vue 指令动态模糊元素</li><li><a href="https://github.com/mokkabonna/vue-async-methods">vue-async-methods</a>-用于基于承诺的方法的帮助程序实用程序</li><li><a href="https://github.com/braceslab/vue-openseadragon">vue-openseadragon</a>-适用于 Vue.js 的 OpenSeaDragon 组件(缩放和平移)</li><li><a href="https://github.com/samturrell/vue-match-heights">vue-match-heights</a>-指令将元素的高度设置为相同。</li><li><a href="https://github.com/FL3NKEY/vue-conditional-attrs">vue-conditional-attrs</a>-用于条件渲染属性和指令的 Vue.js 组件</li><li><a href="https://github.com/arthurvasconcelos/vue-cbsc">vue-cbsc</a>-一个 Vue.js 2.x 组件，用于以编程方式混合，着色和转换颜色。</li><li><a href="https://github.com/twcapps/vue-spatialnavigation">vue-spatialnavigation</a>-用于空间导航(键盘导航)的 Vue 指令(Vue.js 2.x)</li><li><a href="https://github.com/FL3NKEY/vue-lifecycle">vue-lifecycle</a>-Vue.js 生命周期指令。</li><li><a href="https://github.com/3vilArthas/v-aspect-ratio">vue-aspect-ratio</a>-vue 的长宽比指令。</li><li><a href="https://github.com/kooljay82/vue-m-camera">@ kooljay82 / vue-m-camera</a>-为避免自动更改通过用户设备的相机拍摄的照片方向。</li></ul><h2 id="WebGL"><a href="#WebGL" class="headerlink" title="WebGL"></a>WebGL</h2><ul><li><a href="https://github.com/hujiulong/vue-3d-model">vue-3d-model</a>-Vue 组件中的 3D 模型查看器。</li><li><a href="https://github.com/ChiChou/vue-pano">vue-pano</a>-Vue 组件中的全景查看器。</li><li><a href="https://github.com/fritx/vue-threejs">vue-threejs</a>-Three.js 的 Vue 绑定。</li><li><a href="https://github.com/vue-gl/vue-gl">VueGL</a>-Vue.js 组件通过 three.js 反应性地渲染 3D 图形</li><li><a href="https://github.com/imudin/vue-vr">vue-vr</a>-使用 Vue 构建 VR 应用程序的框架</li><li><a href="https://github.com/AlbanCrepel/vue-displacement-slideshow">vue-displacement-slideshow</a>-一个 Vue.js 组件，可简化 Webgl 图像位移转换。</li></ul><h2 id="全屏"><a href="#全屏" class="headerlink" title="全屏"></a>全屏</h2><ul><li><a href="https://github.com/mirari/vue-fullscreen">vue-fullscreen</a>-用于全屏的简单 Vue 组件。</li></ul><h2 id="页面可见性"><a href="#页面可见性" class="headerlink" title="页面可见性"></a>页面可见性</h2><ul><li><a href="https://github.com/stefanodotit/vue-page-visibility-awesome">vue-page-visibility-awesome</a>-易于配置的页面可见性 api 的 Vue 2.x 组件。</li><li><a href="https://github.com/vv13/vue-authplugin">vue-authplugin</a>-美观的 auth 控制插件，支持指令和原型方法。</li></ul><h2 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h2><ul><li><a href="https://mycure-inc.github.io/vue-html-to-paper/">vue-html-to-paper</a>-Vue mixin 用于将 html 元素打印到纸张上。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>网站</title>
    <link href="/pages/beb6c0bd8a66cea6"/>
    <url>/pages/beb6c0bd8a66cea6</url>
    
    <content type="html"><![CDATA[<h1 id="个人收藏夹"><a href="#个人收藏夹" class="headerlink" title="个人收藏夹"></a>个人收藏夹</h1><h2 id="大佬收藏夹"><a href="#大佬收藏夹" class="headerlink" title="大佬收藏夹"></a>大佬收藏夹</h2><ul><li><a href="https://panjiachen.github.io/awesome-bookmarks/">panjiachen</a></li></ul><span id="more"></span><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web">MDN</a> | <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects">MDN-JS标准内置对象</a> Web技术权威文档</li><li><a href="https://zh.javascript.info/">现代JavaScript教程</a> 以最新标准为基准的JS教程</li><li><a href="https://wangdoc.com/javascript/">ES5教程</a> 阮一峰的JS教程</li><li><a href="http://es6.ruanyifeng.com/">ES6教程</a> 阮一峰的ES6教程</li><li><a href="https://wangdoc.com/bash/">Bash 脚本教程</a> 阮一峰编写</li><li><a href="https://www.ecma-international.org/">ECMA</a> ECMA官网</li><li><a href="https://www.runoob.com/">菜鸟教程</a> 涵盖多种语言的初级教程</li><li><a href="https://cloud.tencent.com/developer/devdocs">腾讯云开发者手册</a></li></ul><h2 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h2><ul><li><a href="https://github.com/">Github</a> 程序员同性交友社区</li><li><a href="https://juejin.im/">掘金</a> 一个帮助开发者成长的社区</li><li><a href="https://www.jianshu.com/">简书</a> 有很多频道的创作社区</li><li><a href="https://segmentfault.com/">思否</a> 解决技术问题的社区</li><li><a href="https://stackoverflow.com/">stack overflow</a> 同上，外网的</li><li><a href="https://www.infoq.cn/topic/Front-end">InfoQ</a></li><li><a href="https://www.v2ex.com/">V2EX</a></li><li><a href="https://mo.fish/main/home/hot">鱼塘热榜</a> 划水网站，收集了很多网站，当天热门文章</li><li><a href="https://maliquankai.com/designnav/">码力全开资源库</a> 很全很强大，独立开发者/设计干货/优质利器/工具资源…</li></ul><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><ul><li><a href="http://www.ruanyifeng.com/blog/">阮一峰的网络日志</a></li><li><a href="https://www.samanthaming.com/">samanthaming</a> 对前端小知识点的总结，并为每个知识点制作精美的小卡片。</li></ul><h2 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h2><ul><li><a href="http://www.yuanchengcheng.vip/books">前端电子书收集</a></li><li><a href="https://sobooks.cc/">SoBooks</a> 免费的电子书资源网站</li></ul><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><ul><li><a href="https://juejin.im/post/5d4d0ec651882549594e7293">灵活运用CSS开发技巧</a></li></ul><h2 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h2><ul><li><p><a href="https://www.ggfwzs.com/">谷歌chrome商店访问助手</a></p></li><li><p><a href="https://www.datacenterfarm.com/2549.html">谷歌云(GCP)一键搭建 V2Ray 让你畅快科学上网</a></p></li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><ul><li><a href="https://www.imooc.com/">慕课网</a> 实战视频教程</li><li><a href="https://www.miaov.com/">妙味课堂</a> 比较系统的前端入门视频教程</li><li><a href="https://www.icourse163.org/">中国大学MOOC</a> 涵盖计算机、外语、心理学等专业免费课程</li><li><a href="https://www.bilibili.com/">bilibili</a> B站，上面也有一些可供学习的免费视频</li><li><a href="http://egghead.io/">egghead</a> 质量还不错的短视频教程，外网</li></ul><h3 id="电视直播"><a href="#电视直播" class="headerlink" title="电视直播"></a>电视直播</h3><ul><li><a href="http://ivi.bupt.edu.cn/">CCTV、卫视高清直播</a></li></ul><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><ul><li><a href="https://git.io/">github 短域名服务</a></li><li><a href="https://shields.io/">shields</a> 徽章图标</li><li><a href="https://wangchujiang.com/github-rank/index.html">followers 全球排名</a></li><li><a href="https://star-history.t9t.io/">star-history</a> 展示一个项目 Stars 增长曲线</li></ul><h2 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h2><h3 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h3><ul><li><a href="https://caniuse.com/">Can I use</a> 查看属性和方法的兼容性</li><li><a href="https://30secondsofcode.org/">30 seconds of code</a> 收集了许多有用的代码小片段</li></ul><h3 id="代码编辑"><a href="#代码编辑" class="headerlink" title="代码编辑"></a>代码编辑</h3><ul><li><a href="https://codepen.io/">codepen</a> 在线代码编辑与演示</li><li><a href="https://codesandbox.io/">codesandbox</a> 内嵌VSCode的在线IDE</li></ul><h3 id="Emoji表情"><a href="#Emoji表情" class="headerlink" title="Emoji表情"></a>Emoji表情</h3><ul><li><a href="https://emojipedia.org/">emoji表情</a></li><li><a href="https://www.webfx.com/tools/emoji-cheat-sheet">emoji表情备忘录</a></li><li><a href="https://github.com/carloscuesta/gitmoji">gitmoji</a> 通过 emoji 表达 git 的操作内容<blockquote><p>windows系统下按<kbd>Win</kbd>+<kbd>.</kbd>快速打开表情选择框</p></blockquote></li></ul><h3 id="图片工具"><a href="#图片工具" class="headerlink" title="图片工具"></a>图片工具</h3><ul><li><a href="https://tinypng.com/">tinypng图片压缩</a> 压缩png很有用</li><li><a href="https://squoosh.app/">Squoosh</a> 谷歌出品在线免费图片压缩工具</li><li><a href="http://waifu2x.udp.jp/">waifu2x</a> 通过卷积网络放大图片</li><li><a href="https://vectormagic.com/">vectormagic</a> 转换矢量图</li><li><a href="https://www.vectorizer.io/">vectorizer</a> 真正的 png 转 svg 神器</li><li><a href="https://photo.opencool.cn/">在线AI图片处理</a> 黑白修复、无损放大、动漫化、铅笔画等。</li><li><a href="https://www.remove.bg/zh">remove</a> AI抠图</li></ul><h3 id="作图"><a href="#作图" class="headerlink" title="作图"></a>作图</h3><ul><li><a href="https://www.processon.com/">processon在线作图</a> 流程图、思维导图、原型图等</li><li><a href="https://naotu.baidu.com/">百度脑图</a> 思维导图</li></ul><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><ul><li><a href="http://css-tricks.neatbang.com/">CSS Tricks</a> CSS技巧收集与演示</li><li><a href="https://neumorphism.io/">CSS生成器</a></li><li><a href="https://www.colorzilla.com/gradient-editor/">CSS渐变生成器</a></li><li><a href="https://www.html.cn/tool/css3Preview/Box-Shadow.html">CSS3-Box Shadow(阴影)</a></li><li><a href="https://cubic-bezier.com/">贝塞尔曲线生成器    </a></li><li><a href="http://www.heropatterns.com/">花纹背景生成器</a></li><li><a href="https://github.com/bansal-io/pattern.css">花纹背景-pattern.css</a></li><li><a href="https://bennettfeely.com/ztext/">3D字体</a></li><li><a href="https://css-tricks.com/">css-tricks</a> css技巧文章</li><li><a href="https://lhammer.cn/You-need-to-know-css/#/zh-cn/">You-need-to-know-css</a> CSS的各种DEMO，很全</li><li><a href="https://animista.net/">animista</a> CSS动画可视化工具</li></ul><h3 id="CDN加速"><a href="#CDN加速" class="headerlink" title="CDN加速"></a>CDN加速</h3><ul><li><a href="http://www.jsdelivr.com/">jsDelivr</a> 国外的一家优秀的公共 CDN 服务提供商</li><li><a href="https://unpkg.com/">unpkg</a> cdn 服务</li></ul><h3 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h3><ul><li><a href="https://regex101.com/">正则可视化</a></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li><a href="https://ipcmen.com/">Linux命令手册</a></li><li><a href="https://carbon.now.sh/">代码图片生成器</a></li></ul><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><ul><li><a href="http://chuangzaoshi.com/">创造师导航</a></li><li><a href="http://hao.uisdc.com/">设计师网址导航</a></li><li><a href="https://www.remove.bg/zh">remove</a> AI抠图，抠图算法很厉害</li><li><a href="https://www.manypixels.co/gallery/">Manypixels</a> 插画</li><li><a href="https://undraw.co/illustrations">Undraw</a> 插画</li><li><a href="https://uimovement.com/">uimovement</a> 能从这个网站找到不少动画交互的灵感</li><li><a href="https://www.awwwards.com/">awwwards</a>是一个一个专门为设计精美的网站以及富有创意的网站颁奖的网站</li><li><a href="https://dribbble.com/">dribbble</a> 经常能在上面找到很多有创意好看的 gif 或者图片</li><li><a href="https://www.behance.net/">Bēhance</a> dribbble 是设计师的微博，Bēhance 是设计师的博客</li><li><a href="https://logojoy.com/">Logojoy</a> 使用 ai 做 logo 的网站，做出来的 logo 质量还不错。</li><li><a href="http://brandmark.io/">brandmark</a> 另一个在线制作 logo 网站</li><li><a href="https://instantlogodesign.com/">instant</a> 又一个 logo 制作网站</li><li><a href="https://www.namecheap.com/logo-maker/app/">namecheap</a>又一个 logo 制作网站</li><li><a href="https://www.designevo.com/logo-maker/">logo-maker</a> 又一个 logo 制作网站 这个更简单点 就是选模板之后微调</li><li><a href="https://coolors.co/">coolors</a> 帮你在线配色的网站 你能找到不少配色灵感</li><li><a href="http://colorhunt.co/">colorhunt</a> 另一个配色网站</li><li><a href="https://uigradients.com/#SummerDog">uigradients</a> 渐变色网站</li><li><a href="https://www.designcap.com/">designcap</a> 在线海报设计</li><li><a href="https://flatuicolors.com/">Flat UI 色表</a> Flat UI 色表</li><li><a href="https://www.0to255.com/">0to255</a> 颜色梯度</li><li><a href="https://github.com/mikolajdobrucki/ikonate">Ikonate</a> 提供免费的图标 icons</li><li><a href="https://remixicon.com/">remixicon</a> 又一个提供免费图标 icons</li><li><a href="https://github.com/feathericons/feather">feather</a> 免费的 icons</li><li><a href="https://github.com/arcticicestudio/nord">nord </a> 北欧性冷淡风主题配色</li><li><a href="https://unsplash.com/">Unsplash</a> 提供免费的高清图片</li><li><a href="https://www.pexels.com/zh-cn/">Pexels</a> 提供免费的高清图片</li><li><a href="https://colorkitty.com/">colorkitty</a> 从你的图片中提取配色</li><li><a href="http://design.youzan.com/">design.youzan</a> 有赞设计原则</li></ul><ul><li><p><a href="https://www.iconfont.cn/">iconfont</a> 阿里巴巴矢量图标库</p></li><li><p><a href="https://undraw.co/illustrations">undraw</a> 免费的矢量插画</p></li><li><p><a href="https://icomoon.io/">icomoon</a> 矢量图标库</p></li><li><p><a href="http://cssicon.space/#/">cssicon</a> 所有的 icon 都是纯 css 画的 缺点：icon 不够多</p></li><li><p><a href="http://apps.eky.hk/css-triangle-generator/">CSS triangle generator</a> 帮你快速用 css 做出三角形</p></li><li><p><a href="http://bennettfeely.com/clippy/">clippy</a> 在线帮你使用 css clip-path 做出各种形状的图形</p></li><li><p><a href="https://picsum.photos/">Lorem Picsum</a> 提供免费的占位图</p></li><li><p><a href="https://www.canva.cn/">Canva 可画</a> 生成插画、封面、海报、头像等</p><h3 id="图库"><a href="#图库" class="headerlink" title="图库"></a>图库</h3></li></ul><ul><li><a href="https://uigradients.com/">uigradients</a> 渐变色生成工具</li><li><a href="https://www.freepik.com/">freepik</a> banner 图库</li><li><a href="http://www.51yuansu.com/">觅元素</a>一天免费下载十张 psd</li><li><a href="https://www.gaoding.com/">搞定设计</a> 可以抠图</li><li><a href="https://www.vectorizer.io/">vectorizer</a> 真正的 png 转 svg 神器</li><li><a href="https://www.zcool.com.cn/">站酷</a></li><li><a href="https://huaban.com/">花瓣</a></li><li><a href="https://huke88.com/">虎克</a> Ps 学习教程</li><li><a href="https://themes.muffingroup.com/be/splash/">beTheme</a></li><li><a href="https://www.ui.cn/">UI 中国</a></li></ul><h2 id="有趣"><a href="#有趣" class="headerlink" title="有趣"></a>有趣</h2><ul><li><a href="https://fuun.fun/">奇趣网站收藏家</a> 收藏了很多有趣的网站</li><li><a href="http://www.baidu-x.com/">帮你百度一下</a> 可以 <a href="http://www.baidu-x.com/?q=%E5%92%8C%E8%B0%90%E6%9C%89%E7%88%B1%E5%AF%8C%E5%BC%BA">点我测试一下</a>-</li><li><a href="http://lmgtfy.com/">国际版</a> 同<code>帮我百度一下</code>-<a href="http://lmgtfy.com/?q=a">点我测试一下</a>-</li><li><a href="https://alpha.wallhaven.cc/">wallhaven</a> 壁纸网站-</li><li><a href="http://matthewrayfield.com/articles/animating-urls-with-javascript-and-emojis/#%F0%9F%8C%96">URL 地址播放 Emojis 动画</a> 在地址栏里面播放 emoji</li><li><a href="https://cantunsee.space/">Can’t Unsee</a> 强烈建议前端、客户端、UI 开发的同学玩下，检查一下自己对设计稿的敏感度怎么样</li><li><a href="https://talk.swift.gg/">ggtalk</a> 平时一直在听的一个技术博客</li><li><a href="https://github.com/Blankj/awesome-comment">awesome-comment</a> 里面收集了很多有趣的代码注释</li><li><a href="https://www.text-image.com/index.html">text-img</a> 都将图片转化为 ascii 用来写注释</li><li><a href="https://github.com/beizhedenglong/weird-fonts">weird-fonts</a> 将普通字母转化为 特殊 unicode</li><li><a href="https://github.com/epidemian/snake">snake</a> 在地址栏里面玩贪吃蛇</li><li><a href="https://github.com/yuanfux/zero-width-lib">zero-width-lib</a> 利用零宽度字符实现 隐形水印、加密信息分享、逃脱词匹配，很有创意</li><li><a href="https://www.abbreviations.com/">abbreviations</a> 查看一个简写是什么意思的网站</li><li><a href="https://magi.com/">magi</a> ai 搜索神器，超屌</li><li><a href="https://zzkia.noddl.me:8020/">诺基亚短信图片生成器</a></li></ul><h2 id="交互"><a href="#交互" class="headerlink" title="交互"></a>交互</h2><ul><li><a href="http://aliscued.lofter.com/">微交互</a> 里面收集了市面上很多很好的微交互例子 值得学习</li><li><a href="http://littlebigdetails.com/">Little Big Details</a> 同上，一个国外微交互汇集网站</li><li><a href="https://cruip.com/">cruip</a> 登录页的各种页面设计，可以免费下载模板</li><li><a href="https://comixify.ii.pw.edu.pl/">Comixify</a> 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，上图是他们提供的 demo，效果很棒。</li><li><a href="https://github.com/bui/taiko-web">taiko-web</a> 太鼓达人网页版 只能说很 6</li></ul><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><ul><li><a href="https://egghead.io/courses/execute-npm-package-binaries-with-the-npx-package-runner">npx</a> 教你怎么合理的使用 npx</li><li><a href="https://www.hacksplaining.com/lessons">hacksplaining</a> 网络安全学习网站</li><li><a href="https://github.com/mcuking/mobile-web-best-practice">mobile-web-best-practice</a> 移动 web 最佳实践</li></ul><h2 id="产品"><a href="#产品" class="headerlink" title="产品"></a>产品</h2><ul><li><a href="http://www.pmdaniu.com/">产品大牛</a> 什么有很多完整的产品原型可以借鉴</li><li><a href="https://modao.cc/pricing">磨刀</a> 快速出 ui 原型</li></ul><h2 id="实用"><a href="#实用" class="headerlink" title="实用"></a>实用</h2><ul><li><a href="https://browser-update.org/">browser-update</a> 浏览器版本更新提示插件</li><li><a href="https://admin.typeform.com/signup">typeform</a> 一个国外的在线调查问卷网站</li><li><a href="https://www.videofk.com/">VideoFk</a> VideoFk 视频在线解析下载</li><li><a href="https://www.allhistory.com/">全历史</a> 历史内容聚合网站</li><li><a href="https://www.uzer.me/">UzerMe</a> 云端办公工具</li><li><a href="https://sobooks.cc/">SoBooks</a> 强大的电子书资源网站</li><li><a href="https://www.gaoding.com/">稿定设计</a> 键式设计工具+智能抠图</li><li><a href="https://dalipan.com/">大力盘</a> 百度网盘搜索</li><li><a href="https://www.macbl.com/app/internet/enfi">ENFI 下载器</a> 不限速下载器</li><li><a href="https://www.laihua.com/">来画视频</a> 像做 PPT 一样做短视频</li><li><a href="https://www.arkie.cn/">Arkie 海报制作工具</a></li><li><a href="http://www.ypppt.com/">优品 PPT</a></li><li><a href="http://www.tretars.com/">比格 PPT</a></li><li><a href="https://www.pexels.com/">高清免费图片</a></li><li><a href="https://unsplash.com/">高清免费图片 2</a></li></ul><h2 id="Talk"><a href="#Talk" class="headerlink" title="Talk"></a>Talk</h2><ul><li><a href="https://github.com/peerigon/talks">peerigon-talks</a> 收集了不少有意思的 talks</li></ul><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ul><li><a href="https://github.com/azl397985856/leetcode">leetcode</a> 用 js 刷 leetcode</li></ul><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><ul><li><a href="https://www.ventusky.com/">Ventusky</a> 风雨气温图</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>资源</title>
    <link href="/pages/eee83a9211a70f9d"/>
    <url>/pages/eee83a9211a70f9d</url>
    
    <content type="html"><![CDATA[<h1 id="个人收藏夹"><a href="#个人收藏夹" class="headerlink" title="个人收藏夹"></a>个人收藏夹</h1><p>::: tip<br>收集一些常用的库、插件等资源，正在整理中…<br>:::</p><h2 id="前端常用"><a href="#前端常用" class="headerlink" title="前端常用"></a>前端常用</h2><blockquote><p>待整理</p></blockquote><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><ul><li><a href="https://vuesax.com/">Vuesax</a> 一个优质的vue的组件库</li></ul><h2 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h2><ul><li><a href="https://github.com/ftlabs/fastclick">fastclick</a> 解决移动端点击延迟300ms问题</li><li><a href="https://github.com/ustbhuangyi/better-scroll">better-scroll</a> 移动端滚动插件</li></ul><h2 id="工具-amp-插件"><a href="#工具-amp-插件" class="headerlink" title="工具 &amp; 插件"></a>工具 &amp; 插件</h2><ul><li><a href="https://www.codota.com/">codota</a> AI代码智能提示（应用于代码编辑器）</li></ul><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><ul><li><a href="https://github.com/tj/commander.js">commander</a> 提供了用户命令行输入和参数解析的强大功能</li><li><a href="https://github.com/SBoudrias/Inquirer.js">inquirer</a> 与命令行进行交互</li><li><a href="https://github.com/chalk/chalk">chalk</a> 美化命令行打印样式</li></ul><p><strong>文章</strong></p><ul><li><a href="https://blog.csdn.net/qq_41903941/article/details/90259369">跟着老司机玩转Node命令行</a></li></ul><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><ul><li><a href="https://github.com/gitalk/gitalk">Gitalk</a> |<br><a href="https://github.com/xCss/Valine">Valine</a> |<br><a href="https://github.com/meteorlxy/vssue">Vssue</a> 静态博客评论插件</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vdoing主题效果图</title>
    <link href="/pages/d557b9a89a215d2e"/>
    <url>/pages/d557b9a89a215d2e</url>
    
    <content type="html"><![CDATA[<h1 id="vdoing主题效果图"><a href="#vdoing主题效果图" class="headerlink" title="vdoing主题效果图"></a>vdoing主题效果图</h1><h2 id="PC端"><a href="#PC端" class="headerlink" title="PC端"></a>PC端</h2><br/><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408125410.png" style="width:48%;"/><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408120138.png"  style="width:48%;" /><p align="center">首页 & 目录页△</p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408120144.png"  style="width:48%;" /><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408120145.png"  style="width:48%;" /><p align="center">文章详情页 & 时间轴页△</p><h2 id="首页个性化大图"><a href="#首页个性化大图" class="headerlink" title="首页个性化大图"></a>首页个性化大图</h2><br/><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408125412.png" /><p align="center">首页个性化大图△</p><h2 id="深色模式和阅读模式"><a href="#深色模式和阅读模式" class="headerlink" title="深色模式和阅读模式"></a>深色模式和阅读模式</h2><br/><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408125408.png"  style="width:48%;" /><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408120139.png"  style="width:48%;" /><p align="center">深色模式△</p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408125409.png"  style="width:48%;" /><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408120143.png"  style="width:48%;" /><p align="center">阅读模式△</p><h2 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h2><br/><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408120606.png" style="width:24%;" /><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408120147.png" style="width:24%;" /><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408120148.png" style="width:24%;" /><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200408130831.png" style="width:24%;" /><p align="center">移动端效果△</p><style scoped>    /* .content__default img{border: 1px solid #ccc;} */</style>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>LG V30 韩版V300L 8.0 9.0 root刷类原生系统Havoc 10.0的详细过程</title>
    <link href="/posts/21.html"/>
    <url>/posts/21.html</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>官方系统：刷机root后，未安装其他软件，开机scene查看内存占50%<br>安装日常软件，开发者选项里面，系统可用用内存一般在200左右</p><span id="more"></span><p>Havoc 10：刷机root后，未安装其他任何软件，开机scene查看内存占37%<br>安装日常软件，开发者选项里面显示系统可用内存一般在1.3G左右<br>也就是说使用原生系统，系统可节约大概1G左右的内存<br>官方系统优势：4K显示，hifi音效，拍照，信号<br>havoc系统优势：流畅，省电<br>我不玩游戏，因为要安装支付宝（蚂蚁森林自动偷菜后台常驻），微信，微商相册，等软件，官方系统内存实在是不够用，反应慢，卡，实在是不能忍，换了havoc后，非常满意，上几张图<br>电池使用情况<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/%E7%94%B5%E6%B1%A02.jpg"></p><p>内存占用<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/%E5%86%85%E5%AD%982.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/%E5%86%85%E5%AD%983.jpg"></p><p>安装的软件<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/%E8%BD%AF%E4%BB%B6.jpg"></p><h1 id="刷机前的准备工作"><a href="#刷机前的准备工作" class="headerlink" title="刷机前的准备工作"></a>刷机前的准备工作</h1><p>参考：<a href="https://163168.xyz/archives/18.html">https://163168.xyz/archives/18.html</a><br>下载刷机系统和所需工具<br>链接: <a href="https://pan.baidu.com/s/1_tPSfWTyb8ZbHZs7HyKtBg">https://pan.baidu.com/s/1_tPSfWTyb8ZbHZs7HyKtBg</a> 提取码: 79ew<br>LG 手机官方系统下载地址<br><a href="https://lg-firmwares.com/lg-mv300l-firmwares/#tab=firmwares">https://lg-firmwares.com/lg-mv300l-firmwares/#tab=firmwares</a><br>安装好驱动和LGUP<br>记录手机的IMEI和SN等信息。</p><h1 id="刷机流程"><a href="#刷机流程" class="headerlink" title="刷机流程"></a>刷机流程</h1><h2 id="从8-0官方系统，混刷H93020d-00-OPEN-EU-OP-0326-kdz，并解锁root"><a href="#从8-0官方系统，混刷H93020d-00-OPEN-EU-OP-0326-kdz，并解锁root" class="headerlink" title="从8.0官方系统，混刷H93020d_00_OPEN_EU_OP_0326.kdz，并解锁root"></a>从8.0官方系统，混刷H93020d_00_OPEN_EU_OP_0326.kdz，并解锁root</h2><p>8.0 root教程可参照<br> <a href="https://163168.xyz/archives/18.html">https://163168.xyz/archives/18.html</a><br>9.0 root教程参考<br><a href="http://bbs.gfan.com/android-9614759-1-3.html">http://bbs.gfan.com/android-9614759-1-3.html</a><br><a href="http://bbs.gfan.com/android-9608902-1-1.html">http://bbs.gfan.com/android-9608902-1-1.html</a></p><h2 id="刷入官方9-0-300L30p-00-1220-kdz"><a href="#刷入官方9-0-300L30p-00-1220-kdz" class="headerlink" title="刷入官方9.0 300L30p_00_1220.kdz"></a>刷入官方9.0 300L30p_00_1220.kdz</h2><p>手机按住音量+号键，连接USB线插入电脑（最后是台式机插机箱后面的USB）大概6秒左右进入刷机模式<br>线刷300L30p_00_1220.kdz,  PD模式 除基带模块xbl xbl2 modem的三个分区不选,其他的全勾选<br>刷完后如果遇到卡LOGO，可用硬格: 按住音量减和电源键 8秒以上，会闪屏一下，当LOGO出现后，立刻松开，再重新按住关机键，直到出现data peset界面，才松开。用音量键选择YES（两次），按电源键 进入恢复出厂设置<br>手机进入系统后，打开开发者模式。USB连接电脑<br>在LGV30工具\LGV30 ROOT\3.解锁BL 里面找到Command Prompt  点击打开<br>输入adb  devices 回车     手机上会弹出授权.勾上后同意<br>输入  adb reboot bootloader  回车<br>输入 Fastboot flash recovery TWRP.img  回车<br>输入 Fastboot boot TWRP.img 回车<br>手机进入recovery 格式化DATA，清除chche<br>刷入 Magisk-v19.3.zip，<br>输入 Disable_Dm-Verity_ForceEncrypt_07.27.2019-test.zip<br>刷入 AK3_RCTD_Remover.zip</p><p>重启recovery  备份欧版官方的recocery （40M）备份好后复制到电脑</p><h2 id="刷回-9-0-300L30p-00-1220-kdz"><a href="#刷回-9-0-300L30p-00-1220-kdz" class="headerlink" title="刷回 9.0 300L30p_00_1220.kdz"></a>刷回 9.0 300L30p_00_1220.kdz</h2><p>线刷，选分区的时候排除recovery，recoverybak两个分区，刷完后会无限进TWRP<br>进TWRP后格式化DATA  清除chche<br>刷入 Magisk-v19.3.zip，<br>输入 Disable_Dm-Verity_ForceEncrypt_07.27.2019-test.zip<br>刷入 AK3_RCTD_Remover.zip<br>刷完后把之前备份复制到电脑的欧版recocery，（带备份日期和时间的这个文件夹）复制到手机，从TWRP恢复<br>我用的是8.0欧版recocery备份恢复的，9.0欧版recocery备份恢复我没有测试，有成功的朋友可用留言告诉我。<br>正常情况就可以开机了。<br>开机后连接一次wifi<br>进入开发者模式<br>在LGV30工具\LGV30 ROOT\3.解锁BL 里面找到Command Prompt  点击打开<br>输入adb shell<br>输入 su   手机点授权同意<br>复制 TWRP.img  到手机<br>输入dd if=/sdcard/TWRP.img of=/dev/block/bootdevice/by-name/recovery</p><h2 id="卡刷Havoc-OS-v3-2-20200228-h930-Unofficial"><a href="#卡刷Havoc-OS-v3-2-20200228-h930-Unofficial" class="headerlink" title="卡刷Havoc-OS-v3.2-20200228-h930-Unofficial"></a>卡刷Havoc-OS-v3.2-20200228-h930-Unofficial</h2><p>在LGV30工具\LGV30 ROOT\3.解锁BL 里面找到Command Prompt  点击打开<br>输入 adb devices<br>输入 adb reboot recovery<br>手机进入twrp后，四清，卡刷Havoc-OS-v3.2-20200228-h930-Unofficial</p><h1 id="遇到的问题和解决方法"><a href="#遇到的问题和解决方法" class="headerlink" title="遇到的问题和解决方法"></a>遇到的问题和解决方法</h1><h2 id="打开LGUP出现错误"><a href="#打开LGUP出现错误" class="headerlink" title="打开LGUP出现错误"></a>打开LGUP出现错误</h2><p>LGUP_Common.dll(任意刷包括9.0降级8.0)  下载并替换到安装文件夹</p><h2 id="twrp出现警告"><a href="#twrp出现警告" class="headerlink" title="twrp出现警告"></a>twrp出现警告</h2><p>格式化da’ta分区，再清除cache，一般就可用了</p><h2 id="卡LOGO"><a href="#卡LOGO" class="headerlink" title="卡LOGO"></a>卡LOGO</h2><p>可用硬格: 按住音量减和电源键 8秒以上，会闪屏一下，当LOGO出现后，立刻松开，再重新按住关机键，直到出现data peset界面，才松开。用音量键选择YES（两次），按电源键 进入恢复出厂设置</p><h2 id="手机无限重启"><a href="#手机无限重启" class="headerlink" title="手机无限重启"></a>手机无限重启</h2><p>同时按住音量减和电源键，强制关机，再硬格</p><h2 id="手机不能进刷机模式"><a href="#手机不能进刷机模式" class="headerlink" title="手机不能进刷机模式"></a>手机不能进刷机模式</h2><p>进入twrp，卡刷US998_20G_FULL.zip，我测试过两次不能进线刷模式，都是靠这个包恢复线刷模式的</p><h2 id="手机不能进刷机模式，也不能进recovery，硬格后也无限重启手机"><a href="#手机不能进刷机模式，也不能进recovery，硬格后也无限重启手机" class="headerlink" title="手机不能进刷机模式，也不能进recovery，硬格后也无限重启手机"></a>手机不能进刷机模式，也不能进recovery，硬格后也无限重启手机</h2><p>一直按住音量减 会进入bootloader模式<br>输入<br>fastboot flash recovery TWRP.img<br>再次输入<br>fastboot boot TWRP.img<br>进入 terp 四清，卡刷卡刷US998_20G_FULL.zip，再线刷韩版官方系统。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p> 测试 从8.0 root后，卡刷30q 卡刷Havoc   手机可用使用。关于手机，手机型号：Unknown<br>测试从9.0 H93020d卡刷30q 卡刷Havoc  手机可用使用，手机型号显示h930，开机2分钟后才会有信号，测试关闭飞行模式后也是两分钟左右出信号，信号不显示，就是一个空的三角形，不知道信号强度，可用打电话。<br>很多其他版本的机友反映要刷30q后开wifi，再刷Havoc，不会出现wifi的问题，但是韩版最新版本是30p，经过测试其实是可用用的<br>混刷是为了root，混刷后的系统信号差，断一次网，要等两分钟再连接，这个真不能忍。<br>教程的难点是9.0 混欧版刷root后，刷回韩版官方9.0p   如果长时间不能进系统，就只能按9.0 root的教程重新来一次。<br>混刷后一定记得要备份recovery，最好8.0和9.0的都备份<br>取得root 权限后要备份SN<br>参照 <a href="http://bbs.gfan.com/android-9574953-1-1.html">http://bbs.gfan.com/android-9574953-1-1.html</a><br>在LGV30工具\LGV30 ROOT\3.解锁BL 里面找到Command Prompt  点击打开<br>adb shell<br>su（此处注意手机上弹出授权提示）<br>dd if=/dev/block/bootdevice/by-name/ftm of=/sdcard/ftm-o.img<br>刷机掉了SN 只是输入 dd of=/dev/block/bootdevice/by-name/ftm if=/sdcard/ftm-mod.img<br>如果没有备份，先备份，备份好的ftm-o.img 复制到电脑，通过ultraedit 软件打开<br>找到12000H处，修改SM码 （非常难找，找了几分钟，眼睛都花）输入自己的SN码，据说输入别人的也可以。<br>修改后重启就可用了。</p><p>没一定把握就不要刷基带，风险大，容易9008</p>]]></content>
    
    
    <categories>
      
      <category>安卓手机</category>
      
      <category>LG V30</category>
      
      <category>刷机</category>
      
      <category>root</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓手机</tag>
      
      <tag>LG V30</tag>
      
      <tag>刷机</tag>
      
      <tag>root</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub加速下载项目的方法</title>
    <link href="/pages/95331c6a9613faf8"/>
    <url>/pages/95331c6a9613faf8</url>
    
    <content type="html"><![CDATA[<h1 id="GitHub加速下载项目的方法"><a href="#GitHub加速下载项目的方法" class="headerlink" title="GitHub加速下载项目的方法"></a>GitHub加速下载项目的方法</h1><p>国内在github上克隆项目总是异常的慢，据我多次克隆观察，下载速度最快就20k/s左右，特别是在克隆比较大的项目时简直慢得无法忍受！下面介绍一种加载克隆项目的方法。</p><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200309112604.png"></p><h2 id="利用码云来转接做下载加速"><a href="#利用码云来转接做下载加速" class="headerlink" title="利用码云来转接做下载加速"></a>利用码云来转接做下载加速</h2><ol><li><p>首先你得有一个 <a href="https://gitee.com/">码云</a> 的账号</p></li><li><p>登录码云之后在页面右上角的加号选择<code>从GitHub/GitLab导入项目</code></p><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200309112711.jpg"></p></li><li><p>选择<code>从URL导入</code>，粘贴从GitHub复制来的仓库地址，然后导入，这个导入过程一般是很快的。</p><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200309112710.jpg"></p></li><li><p>从码云克隆刚导入的这个项目，克隆速度会快很多，网速好的能达到几兆每秒（具体速度就看你的网速了，吐槽一下我家网速，总在关键时刻显示”视频加载中”….）</p><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200309112712.jpg"></p></li><li><p>另外要注意的一点，克隆下来的项目关联的是码云的仓库，如果你需要关联github仓库需要更改远程仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote -v <span class="hljs-comment"># 查看关联的远程仓库</span><br>git remote rm &lt;仓库名&gt; <span class="hljs-comment"># 删除远程仓库</span><br>git remote add &lt;仓库名&gt; &lt;远程仓库地址&gt; <span class="hljs-comment"># 关联远程仓库，仓库名一般使用origin</span><br></code></pre></td></tr></table></figure></li></ol><p>这个方法适合用于克隆比较大的项目，如果克隆小项目，20k/s的速度好像还能将就~~</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>GitHub技巧</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一个完美主义者的自我救赎</title>
    <link href="/pages/2d615df9a36a98ed"/>
    <url>/pages/2d615df9a36a98ed</url>
    
    <content type="html"><![CDATA[<h1 id="一个完美主义者的自我救赎"><a href="#一个完美主义者的自我救赎" class="headerlink" title="一个完美主义者的自我救赎"></a>一个完美主义者的自我救赎</h1><p>最近，看到一个心理测试题是测试你是否有完美主义：</p><blockquote><p>（1）你是不是经常为自己设定目标，而且最终往往达不到那些目标？</p><p>（2）当一件事件做得不够好时，你是否有再试一次的想法？</p><p>（3）你是否休息时仍想着学习、工作、或者其他还没有解决的事？</p><p>（4）如果遇到别人说话或打岔，破坏了你的注意力，你是否觉得不太高兴？</p><p>（5）你是否常常会在事后想，如果当时能换成另一种方式来解决，也许会更加理想？</p></blockquote><p>如果上面的问题，你的回答大部分是肯定的，那么你就有完美主义倾向。</p><span id="more"></span><p>对照自身，我就是那个完美主义者，时常会因为某件事做得不够好而感到痛苦，给我带来的后果就是：为了一件事想要达到“完美”的标准，付出了更多的成本，从而忽略真正需要优先处理的其他事情。最后，即使付出了成本，得到的结果也不一定是想要的”完美”。</p><p>看过一篇文章，里面说到：</p><blockquote><p>完美主义是一种压力，它让你为自己创造不切实际的期望。你明明做到了正常水平，但是因为设定的目标太高，所以看上去距离目的地仍然很遥远。你的心态变成了：这一切还不够好，依然可以改进。</p><p>完美主义消耗了我们最宝贵的资源和时间，让你将注意力从真正的优先事项上移开。</p></blockquote><p>完美主义就是追求一个较高水平的目标，不接受一个较低水平的，但可用的结果。我一直告诫自己，改掉追求完美的毛病。</p><p>完美主义已经对我造成了一些压力，还会妨碍我开始进入某些事情，总想着万事俱备之后才开始，结果是没有万事俱备，也没有东风，这事就搁置了。</p><p>某个军事文章里说，他们特种部队的射击理念是：绝对快，相对准！</p><blockquote><p>玩吃鸡游戏似乎也是这样，需要你有快速的反应能力，不管打不打到人，先开枪再说，即使打不到也可以吓到敌人啊，哈哈哈</p></blockquote><p>这个理念似乎也适用于我这样的完美主义者，“做得快”比“做得好”要好，不要太执着于“完美”，就好像我开始写博客，我知道自己的写作水平并不好，但这并不妨碍我开始写博客，相信我会越写越好的~</p><p>最后，心理医生也说过追求完美并不利于身心健康，不要追求完美，随心所欲地生活吧！</p>]]></content>
    
    
    <categories>
      
      <category>更多</category>
      
      <category>心情杂货</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>提高学习效率的策略</title>
    <link href="/pages/a8692ab3bdcb4588"/>
    <url>/pages/a8692ab3bdcb4588</url>
    
    <content type="html"><![CDATA[<h1 id="提高学习效率的策略"><a href="#提高学习效率的策略" class="headerlink" title="提高学习效率的策略"></a>提高学习效率的策略</h1><p>推荐一本关于学习方法的书《认知天性》，里面有讲到有一些简单实用的学习策略，能让大家学的更好、记得更牢，而且这些策略人人可用，时时可用。这些方法包括各种形式的<strong>检索练习</strong>——例如小的测试和自测，<strong>间隔练习</strong>、<strong>穿插</strong>不同但相关科目或技能的练习（<strong>多样化练习</strong>），在别人教给你解决方案前自己先试着解决问题，从不同类型问题中提取基本原理和规则。由于学习是反复的过程，需要复习早先学过的东西，持续更新已知，并把它们和新知识联系起来。</p><span id="more"></span><h3 id="检索式学习"><a href="#检索式学习" class="headerlink" title="检索式学习"></a>检索式学习</h3><p>练习从记忆中检索新知识或新技能是有效的学习工具，也是保持长久记忆的有力武器。但凡需要大脑记忆、需要在将来回忆的东西，都可以用到它——对于事实、复杂的概念、解决问题的技巧、运动技能来说都适用。</p><p>那么到底什么是检索式学习呢？说说我理解的检索式学习：在脑中检索知识，比如课后的一个小测试、对某个知识点用笔默写出来，甚至去参加面试，等等，都可以理解为检索式学习。</p><p>努力检索有助于人们获得更好的学习效果，产生更持久的记忆。我们很容易相信，学东西时越轻松，学习效果越好，但研究表明，事实恰恰相反。只有当头脑被迫工作时，才会将所学的东西记得更牢靠。在检索时所付出的努力越大——只要真正做到这一点检索就会更好地强化你的所学。在第一次检测后，推迟后续检索练习要比立即练习更能强化记忆，因为延迟后再检索需要会费更大力气。</p><p>反复检索不仅能让记忆更持久，还能让知识在更多变的环境中更容易被检索，而且可以解决更多的问题。</p><h3 id="频繁的集中练习只会产生短期记忆"><a href="#频繁的集中练习只会产生短期记忆" class="headerlink" title="频繁的集中练习只会产生短期记忆"></a>频繁的集中练习只会产生短期记忆</h3><p>人们顽固地相信，自己把心思放在一件事上，拼命重复就能学得更好，认为这些观点经受住了时间的考验，而且“练习，练习，再练习”的明显收效再次证明了这种方法的好处。但是，科学家们把习得技能阶段的这种成绩称为“暂时的优势”，并把它同“潜在的习惯优势”区分开来。形成习惯优势有种种技巧，例如有间隔的练习、有穿插内容的练习，以及多样化练习，这些技巧恰恰会放缓有明显成果的学习进程，它们不会在练习中提高我们的表现。我们从表面上看不到成绩提高，也就没有付出努力的动力（大多数人的学习心理就是这样，在看不到成果的时候容易失去动力）。填鸭式练习是集中练习的一种形式，它一直被比作贪食症——吃得不少，但没过多久基本上都吐出来了。</p><h3 id="间隔练习使知识存储更牢固"><a href="#间隔练习使知识存储更牢固" class="headerlink" title="间隔练习使知识存储更牢固"></a>间隔练习使知识存储更牢固</h3><p>把学习与练习间隔开来分期进行，让两者之间隔上一定时间，这样做就能让学习成果更加显著、记忆更加牢固，能有效地形成习惯优势。<strong>间隔多长时间才够？答案很简单：从最低限度上说，间隔的时间足够出现一点儿遗忘就对了</strong>。练习环节中间出现一点儿遗忘是好事，只要它能让人更加努力地练习就行。话说回来，你肯定不愿意忘掉太多东西，以至于检索最终变成了对资料的重新学习。间隔一段时间再练习能巩固记忆。睡眠似乎在巩固记忆的工作中扮演了重要角色，所以在两次练习间至少间隔一天应该是不错的做法。<br>要当心熟悉这个陷阱：你感觉自己明白了某样东西，觉得不再需要练习了。如果想走捷径，这种熟悉会让你在自测时受伤。道格拉斯·拉尔森说：“你必须自觉地说，好吧，我要强迫自己把这些全想起来，要是我想不起来，那我是忘掉了什么，我怎，么会不知道那个呢?’如果是教师出题测验，那就一下子变成你</p><h3 id="穿插练习有助于长期记忆"><a href="#穿插练习有助于长期记忆" class="headerlink" title="穿插练习有助于长期记忆"></a>穿插练习有助于长期记忆</h3><p>穿插练习两样或更多的内容同样也提供了一种间隔。穿插内容练习有助于发展人们辨识不同问题的能力，也是在培养人们从不断增加的解决方案中寻找合适工具的能力。进行穿插内容练习，不能是完成一个科目的全部练习再跳到下一个科目。你需要在每个科目的练习完成前就跳到下一个科目。我们的一个朋友这样描述自己的经历，“我去上了一堂冰球课，学习滑冰、控球、射门。滑冰练习还没进行多长时间，自己刚刚有点儿上手的感觉，教练就转到控球练习上了，这让我感到非常沮丧。灰心地到家后，我说，‘为什么教练不让我们一次把技能练好呢？”其实他是遇上了少有的好教练。这位教练懂得分散精力练习不同技能要比下力气一次掌握一件事更有效果。球员感到沮丧是因为并没有在短时间内看到成果，但到下一周，无论是滑冰、控球，还是其他内容，他都会获得全面进步，效果会好于每次只专心练习一项技能。</p><h3 id="多样化练习促进知识的活学活用"><a href="#多样化练习促进知识的活学活用" class="headerlink" title="多样化练习促进知识的活学活用"></a>多样化练习促进知识的活学活用</h3><p>与穿插内容练习一样，多样化练习有助于学习者树立更开阔的心理模式。这是一种能力，掌握它的人可以评估不断变化的条件，并调整应对方式进行适应。可以说，穿插内容练习与多样化练习有助于学习者超越暂时性记忆，步入更高层次的概念性学习，并把它们应用到实际情景中，从而获得更全面、更深刻、更持久的学习效果。这些学习成果在运动技能中就表现为潜在的习惯优势。</p><h3 id="小总结"><a href="#小总结" class="headerlink" title="小总结"></a>小总结</h3><p>有间隔、有内容穿插出现，以及内容多样化，其实就是我们生活的本来面貌。程序员每开发一个项目，都是一次测验，也是一次检索练习的锻炼。每次常规的拦车检查对于警察来说都是一次测验，而且每次检查都不一样，这会加强警察的外显记忆与内隐记忆。只要他上心，今后的工作就会更有效率。人们常说的一句话是“从经验中学习”。有些人似乎从来不学习，学与不学的一个区别可能就在于，人们是否培养了反思（总结）的习惯。反思（总结）是检索练习的一种形式（发生了什么？我是怎么做的？怎样才能有用？），而且辅以细化加强（下次我要采取别的什么方法？）</p><h3 id="知识的“滚雪球”效应"><a href="#知识的“滚雪球”效应" class="headerlink" title="知识的“滚雪球”效应"></a>知识的“滚雪球”效应</h3><p>学习的过程至少可以分成三步：最开始是对短期工作记忆中信息的<strong>编码</strong>。这时信息还没有被巩固成长期记忆中坚实的知识表征。<strong>巩固</strong>会辨识并稳定记忆线索，赋予其含义，把它们与过去的经验以及长期记忆中已经存储下来的其他知识联系起来。<strong>检索</strong>会更新所学的东西，并让你做到学以致用。</p><p>学习总是建立在已知基础之上。我们是通过与已知建立联系这种方式来解读事件和记忆事件的。</p><p>长期记忆的容量基本上是无限的。你知道得越多，就越有可能为新知识建立联系。</p><p>由于长期记忆的容量颇大，所以关键是要有一种能力，让你在需要的时候锁定并回忆已知。回忆所学知识的难易程度取决于对信息的重复使用（保持检索路径不会被忘却），也取决于你是否建立起了强大的检索线索，因为它能重新激活你的记忆。</p><p>阶段性地检索所学，有助于强化记忆间的联系，也能强化回忆知识的线索，同时还能弱化连通冲突记忆的路径。检索练习若是没什么难度，那就不能强化所学的知识；练习难度越大，收效才越大。</p><p>当你从短期记忆中回忆所学时，例如快速频繁地进行练习，是不需要花什么心思的，也不会有长期性的收效。但当你过一段时间再回忆时，当你对所学的东西有些遗忘时，你就不得不努力重建这一切。这种耗费心力的检索既能强化记忆，又能让所学再次具有可塑性，引发对所学知识的再巩固。再巩固可以用新信息更新你的记忆，同时可以将它们与最近学到的东西联系起来。</p><p>重复进行费力的回忆或是练习，有助于把所学的知识整合成心智模型。在心智模型中，一套彼此相关的概念或一系列运动技能被融会贯通，形成一个有意义的整体。它能适应随后的各种环境，并发挥作用。开车时的感知和操控就是一个例子。在面对弧线球时知道如何打出全垒打也是同一个道理。</p><p>练习的条件如果发生了变化，或是在检索中穿插安排了对其他资料的练习，我们就能强化自己的辨析与归纳能力，凭借全面发展，我们还能把所学的知识用在以后的新环境中。穿插与多样化建立了新的联系，拓展并进一步深化了记忆中的知识，同时增加了检索线索的数量。、</p><p>试着自己想出答案，而不是坐等别人给你答案，或是在拿到解决方案前自行尝试解决一个问题，会产生更好的学习效果，也能让你把正确的答案或解决方案记得更持久。即便有时你会犯错，只要有纠正性反馈就没问题。</p><p>——以上内容摘自《认知天性》，结合本人的个人理解，更多内容请查看该书籍。</p><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103144032.png" alt="认知天性" title="认知天性"></p>]]></content>
    
    
    <categories>
      
      <category>更多</category>
      
      <category>学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>k2p老毛子固件绑定域名之 cloudflare.com</title>
    <link href="/posts/20.html"/>
    <url>/posts/20.html</url>
    
    <content type="html"><![CDATA[<p>k2p老毛子固件绑定域名之 cloudflare.com</p><p>使用 Cloudflare 实现顶级个人域名的 ddns 服务。 <a href="https://www.cloudflare.com/">https://www.cloudflare.com</a></p><p>使用前需要安装 curl 程序，可以安装opt后输入 opkg install curl 敲回车键安装启用opt<br> <span id="more"></span></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200103134738.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200103134543.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200103132446.png"></p><p>点击获取<br><a href="https://dash.cloudflare.com/profile/api-tokens">https://dash.cloudflare.com/profile/api-tokens</a></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200103132545.png"></p><p>输入密码和验证码，就可以获得</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200103132918.png"></p><p>复制到  用户 Global API Key</p>]]></content>
    
    
    <categories>
      
      <category>k2p</category>
      
      <category>域名</category>
      
      <category>cloudflare</category>
      
      <category>路由</category>
      
      <category>网站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k2p</tag>
      
      <tag>域名</tag>
      
      <tag>cloudflare</tag>
      
      <tag>路由</tag>
      
      <tag>网站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床</title>
    <link href="/pages/a5f73af5185fdf0a"/>
    <url>/pages/a5f73af5185fdf0a</url>
    
    <content type="html"><![CDATA[<h1 id="GitHub-jsDelivr-TinyPNG-PicGo-打造稳定快速、高效免费图床"><a href="#GitHub-jsDelivr-TinyPNG-PicGo-打造稳定快速、高效免费图床" class="headerlink" title="GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床"></a>GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>Q：为什么要使用图床呢？什么是图床？</strong></p><p>A：写博客文章时，图片的上传和存放是一个问题，有的朋友可能会把图片放到和博客同一个仓库当中，使用相对路径来引用，这样后期维护起来会比较麻烦。还有的朋友会在不同的平台发布同一篇文章，这样一来每个平台都要上传图片，为了解决这些问题，比较推荐的做法是把图片统一上传到一个在线的第三方静态资源库中，我们把这个资源库称为图床，其返回一个图片的URL，使用<code>markdown+图片url</code>的方式写作文章，一次编写，到处使用~</p><span id="more"></span><p><strong>Q：图床的选择</strong></p><p>A：推荐使用GitHub作为图床，特点是免费、稳定，有一个小缺点是国内访问速度慢，不过没关系，可以使用<code>jsDelivr</code>免费CDN加速。</p><p><strong>Q：jsDelivr是什么？</strong></p><p>A：<code>jsDelivr</code>是国外的一家优秀的公共 CDN 服务提供商，该平台是首个「打通中国大陆与海外的免费CDN服务」，无须担心中国防火墙问题而影响使用。官网：<a href="http://www.jsdelivr.com/">http://www.jsdelivr.com/</a></p><h2 id="图床打造"><a href="#图床打造" class="headerlink" title="图床打造"></a>图床打造</h2><ol><li><p>新建GitHub仓库，注意仓库要设置成<strong>公开</strong></p></li><li><p>参照 <a href="https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line">官方文档</a> 生成一个token密钥</p></li><li><p>在 <a href="https://github.com/Molunerfinn/picgo/releases">这里</a> 下载PicGo，安装完成后打开，<code>图床设置</code> 选 <code>GitHub图床</code>，并填写相应的信息</p><ul><li>仓库名：前面新建的仓库，格式：<code>&lt;用户名&gt;/&lt;仓库名&gt;</code></li><li>分支名：填写主分支<code>master</code>即可</li><li>Token：前面生成的token密钥</li><li>存储路径：按你自己的需求填写</li><li>自定义域名：图片上传后，PicGo 会按照 <code>自定义域名+上传的图片名</code> 的方式生成访问链接，此处我们填写<code>jsDelivr</code>的CDN加速地址，格式：<code>https://cdn.jsdelivr.net/gh/&lt;用户名&gt;/&lt;仓库名&gt;</code></li></ul></li></ol><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103105720.png"></p><ol start="4"><li>使用<a href="https://tinypng.cn/">https://tinypng.cn/</a>压缩你要上传的图片（如图片已经很小或你有更好的压缩工具可省略这一步）</li><li>在PigGo的<code>上传区</code>上传你的图片，到<code>相册</code>一键复制刚刚上传的图片URL，至此，你就可以在你的文章当中愉快的插入图片啦~， 更多功能自己去探索吧~~</li></ol><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103121148.png"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>GitHub Actions 定时运行代码：每天定时百度链接推送</title>
    <link href="/pages/f44d2f9ad04ab8d3"/>
    <url>/pages/f44d2f9ad04ab8d3</url>
    
    <content type="html"><![CDATA[<h1 id="GitHub-Actions-定时运行代码：每天定时百度链接推送"><a href="#GitHub-Actions-定时运行代码：每天定时百度链接推送" class="headerlink" title="GitHub Actions 定时运行代码：每天定时百度链接推送"></a>GitHub Actions 定时运行代码：每天定时百度链接推送</h1><p>博客上线已经有些日子了，却发现百度迟迟没有收录我的博客页面，在百度推送工具当中除了有自动推送的代码嵌入网站之外，还有一个实时的主动推送更高效。</p><p>最近刚好了解到GitHub Actions的定时运行代码功能，可以用它来每天自动运行命令生成所有博客链接并进行一次性推送给百度。</p><p>GitHub Actions 是一个 CI/CD（持续集成/持续部署）工具，但也可用作代码运行环境。<strong>功能非常强大，能够玩出许多花样。</strong></p><span id="more"></span><h2 id="百度主动链接推送"><a href="#百度主动链接推送" class="headerlink" title="百度主动链接推送"></a>百度主动链接推送</h2><p>链接主动推送在百度站长中有介绍，如图。</p><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103124306.png" alt="主动提交"></p><p>具体使用方法就是创建一个文件<code>urls.txt</code>，文件内每行一条链接的格式写入提交的多个链接，如图。</p><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103124305.png" alt="urls.txt"></p><p>运行命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">curl -H <span class="hljs-string">&#x27;Content-Type:text/plain&#x27;</span> --data-binary @urls.txt <span class="hljs-string">&quot;http://data.zz.baidu.com/urls?site=xugaoyi.com&amp;token=T5PEAzhG*****&quot;</span><br></code></pre></td></tr></table></figure><p>上面命令的地址和参数由百度站长提供。运行完命令会返回推送结果，不出意外的话就会把<code>urls.txt</code>内的所有链接一次性推送给百度。</p><p>这个方法虽然比嵌入网站头部的自动推送更高效，但是也有它的麻烦之处，就是得自己填入链接到<code>urls.txt</code>文件，然后手动运行命令。</p><h2 id="自动生成urls-txt"><a href="#自动生成urls-txt" class="headerlink" title="自动生成urls.txt"></a>自动生成urls.txt</h2><p>没关系，技术的本质就是让人”偷懒”的。于是，我写了一个nodejs工具，用于把所有的博客页面链接生成到<code>urls.txt</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// baiduPush.js</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 生成百度链接推送文件</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">const</span> logger = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;tracer&#x27;</span>).colorConsole();<br><span class="hljs-keyword">const</span> matter = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;gray-matter&#x27;</span>); <span class="hljs-comment">// FrontMatter解析器 https://github.com/jonschlinkert/gray-matter</span><br><span class="hljs-keyword">const</span> readFileList = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./modules/readFileList&#x27;</span>);<br><span class="hljs-keyword">const</span> urlsRoot = path.join(__dirname, <span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-string">&#x27;urls.txt&#x27;</span>); <span class="hljs-comment">// 百度链接推送文件</span><br><span class="hljs-keyword">const</span> DOMAIN = process.argv.splice(<span class="hljs-number">2</span>)[<span class="hljs-number">0</span>]; <span class="hljs-comment">// 获取命令行传入的参数</span><br><br><span class="hljs-keyword">if</span> (!DOMAIN) &#123;<br>  logger.error(<span class="hljs-string">&#x27;请在运行此文件时指定一个你要进行百度推送的域名参数，例：node utils/baiduPush.js https://xugaoyi.com&#x27;</span>)<br>  <span class="hljs-keyword">return</span><br>&#125;<br><br>main();<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>  fs.writeFileSync(urlsRoot, DOMAIN)<br>  <span class="hljs-keyword">const</span> files = readFileList(); <span class="hljs-comment">// 读取所有md文件数据</span><br><br>  files.forEach( <span class="hljs-function"><span class="hljs-params">file</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> &#123; data &#125; = matter(fs.readFileSync(file.filePath, <span class="hljs-string">&#x27;utf8&#x27;</span>)); <br><br>    <span class="hljs-keyword">if</span> (data.permalink) &#123;<br>      <span class="hljs-keyword">const</span> link = <span class="hljs-string">`\r\n<span class="hljs-subst">$&#123;DOMAIN&#125;</span><span class="hljs-subst">$&#123;data.permalink&#125;</span>/`</span>;<br>      <span class="hljs-built_in">console</span>.log(link)<br>      fs.appendFileSync(urlsRoot, link);<br>    &#125;<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>上面代码仅是针对我个人的博客生成链接到<code>urls.txt</code>文件。更多代码在 <a href="https://github.com/xugaoyi/vuepress-theme-vdoing/blob/master/utils/baiduPush.js">这里</a>。</p><p>运行如下命令就可以生产一个包含博客所有链接的<code>urls.txt</code>文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">node utils/baiduPush.js https://xugaoyi.com<br></code></pre></td></tr></table></figure><p>哈哈，第一个麻烦解决了:smirk:，接下来是解决第二个需要手动运行推送命令的问题。</p><blockquote><p><strong>如果你没办法自动生成，你也可以自己手动创建一个<code>urls.txt</code>文件，放到github仓库。</strong></p></blockquote><h2 id="GitHub-Actions-定时运行代码"><a href="#GitHub-Actions-定时运行代码" class="headerlink" title="GitHub Actions 定时运行代码"></a>GitHub Actions 定时运行代码</h2><p>今天的主角GitHub Actions 要登场了。（相关：<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html?20191227113947#comment-last">GitHub Actions 入门教程</a>、<a href="https://xugaoyi.com/pages/6b9d359ec5aa5019/">GitHub Actions 实现自动部署静态博客</a>）</p><p>GitHub Actions 是一个 CI/CD（持续集成/持续部署）工具，但也可用作代码运行环境。<strong>功能非常强大，能够玩出许多花样。</strong></p><h3 id="配置-GitHub-Actions"><a href="#配置-GitHub-Actions" class="headerlink" title="配置 GitHub Actions"></a>配置 GitHub Actions</h3><p>触发 GitHub Actions 需要在项目仓库新建一个<code>.github/workflows</code>子目录，里面是 <a href="https://xugaoyi.com/pages/4e8444e2d534d14f/">YAML 格式</a>配置文件，文件名可以随便取。GitHub 只要发现配置文件，就会运行 Actions。</p><p>配置文件的第一部分是触发条件。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">## baiduPush.yml</span><br>name: <span class="hljs-string">&#x27;baiduPush&#x27;</span><br> <br>on:<br>  push:<br>  schedule:<br>    - cron: <span class="hljs-string">&#x27;0 23 * * *&#x27;</span><br></code></pre></td></tr></table></figure><p>上面代码中，<code>name</code>字段是配置文件的描述，<code>on</code>字段是触发条件。我们指定两种情况下触发，第一种是代码 Push 进仓库，第二种是<a href="https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows#scheduled-events-schedule">定时任务</a>，每天在国际标准时间23点（北京时间+8，即早上7点）运行。</p><blockquote><p>定时设置看<a href="https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows#scheduled-events-schedule">这里</a></p></blockquote><p>接着，就是运行流程。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">jobs</span>:<br>  bot:<br>    runs-on: ubuntu-latest <span class="hljs-comment"># 运行环境为最新版的Ubuntu</span><br>    steps:<br>      - name: <span class="hljs-string">&#x27;Checkout codes&#x27;</span> <span class="hljs-comment"># 步骤一，获取仓库代码</span><br>        uses: actions/checkout@v1<br>      - name: <span class="hljs-string">&#x27;Run baiduPush.sh&#x27;</span> <span class="hljs-comment"># 步骤二，执行sh命令文件</span><br>        run: npm install &amp;&amp; npm run baiduPush <span class="hljs-comment"># 运行命令。（注意，运行目录是仓库根目录）</span><br></code></pre></td></tr></table></figure><p>上面代码中，指定运行环境是最新的ubuntu，流程的第一步是从代码仓库获取代码，第二步运行两个命令，先安装项目依赖，再运行写在<code>package.json</code>的<code>baiduPush</code>命令。完整代码看 <a href="https://github.com/xugaoyi/vuepress-theme-vdoing/blob/master/.github/workflows/baiduPush.yml">这里</a></p><h3 id="baiduPush命令在package-json配置"><a href="#baiduPush命令在package-json配置" class="headerlink" title="baiduPush命令在package.json配置"></a><code>baiduPush</code>命令在<code>package.json</code>配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// package.json</span><br><span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br><span class="hljs-string">&quot;baiduPush&quot;</span>: <span class="hljs-string">&quot;node utils/baiduPush.js https://xugaoyi.com &amp;&amp; bash baiduPush.sh&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>上面脚本中在<code>node utils/baiduPush.js</code>的后面加入你的域名参数。运行此命令生成<code>urls.txt</code>文件，然后执行<code>baiduPush.sh</code>文件。</p><p>注意，在使用window系统时，请使用git bash命令窗运行上面的脚本。</p><blockquote><p><code>baiduPush</code>命令之所以没有放在<code>baiduPush.yml</code>的 run 里面是因为我想在本地也可以执行<code>npm run baiduPush</code>命令。</p></blockquote><h3 id="baiduPush-sh执行百度推送命令"><a href="#baiduPush-sh执行百度推送命令" class="headerlink" title="baiduPush.sh执行百度推送命令"></a><code>baiduPush.sh</code>执行百度推送命令</h3><p><code>baiduPush.sh</code>文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/usr/bin/env sh</span><br><br><span class="hljs-built_in">set</span> -e<br><br><span class="hljs-comment"># 百度链接推送</span><br>curl -H <span class="hljs-string">&#x27;Content-Type:text/plain&#x27;</span> --data-binary @urls.txt <span class="hljs-string">&quot;http://data.zz.baidu.com/urls?site=https://xugaoyi.com&amp;token=T5PEAzhGa*****&quot;</span><br><br>rm -rf urls.txt <span class="hljs-comment"># 灭迹</span><br></code></pre></td></tr></table></figure><p>上面代码中，把<code>urls.txt</code>文件中的所有链接一次性推送。</p><blockquote><p>baiduPush.sh内的命令之所以没有写在<code>package.json</code>是因为我觉得命令太长了，不方便阅读。</p></blockquote><p>写好配置，推送到仓库，就会在每天的早上7点钟，自动运行命令生成一个包含博客所有页面链接的<code>urls.txt</code>文件，并把所有链接一次性推送到百度。麻麻再也不用担心我的网站不被收录~~:kissing_heart: :kissing_heart: :kissing_heart: </p><p>在这个基础上可以扩展，使用GitHub Actions满足你自己的各种定时需求。</p><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><p><a href="https://xugaoyi.com/pages/6b9d359ec5aa5019/">《 GitHub Actions 实现自动部署静态博客》</a></p><p><a href="https://xugaoyi.com/pages/41f87d890d0a02af/">《解决百度无法收录搭建在GitHub上的静态博客的问题》</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>GitHub技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于微店购物的相关问题</title>
    <link href="/posts/19.html"/>
    <url>/posts/19.html</url>
    
    <content type="html"><![CDATA[<h1 id="关于微店回复慢"><a href="#关于微店回复慢" class="headerlink" title="关于微店回复慢"></a>关于微店回复慢</h1><p>因实体批发比较繁忙，经常回复会比较慢，谢理解！大家可以先看下下面的相关解答哈！有不清楚的还可以咨询我们的哈！</p><h1 id="关于发货"><a href="#关于发货" class="headerlink" title="关于发货"></a>关于发货</h1><p>默认中通，晚上十一点左右统一发货，一般当天下午接的单，当天就可以发的。为避免大家心累，不接急单哈！！！</p><span id="more"></span><h1 id="关于鞋子的码数"><a href="#关于鞋子的码数" class="headerlink" title="关于鞋子的码数"></a>关于鞋子的码数</h1><p>默认都是标准皮鞋码，比运动鞋偏大一码，比如运动鞋穿43，这个鞋子就拍42。鞋子偏大或者偏小，码数里面会显示的。</p><h1 id="关于退换货"><a href="#关于退换货" class="headerlink" title="关于退换货"></a>关于退换货</h1><p>本店支持收货后三天内无理由退换货，但是不欢迎退货率超过百分之三十的买家，部分素质低下的买家试鞋子把新鞋子都试成旧鞋子了，只是想买回来试试的，建议其他家购买哈，大家都不想穿二手鞋。<br>很多低素质的买家不想付鞋子发货的邮费，故意找点问题来要求我们负责邮费，为避免纠纷，我们鞋子全部设置成包邮，无论是不喜欢，不合适，轻微瑕疵，退换货等等问题，鞋子我们发货的邮费我们付，买家发回来的邮费买家付。<br>以上问题，不能接受的请不要拍！</p><h1 id="关于是不是正品"><a href="#关于是不是正品" class="headerlink" title="关于是不是正品"></a>关于是不是正品</h1><p>因为一些政策的原因，这个问题微店不回答的哈。<br>打个比方，耐克鞋子的品牌商，本身是不生产鞋子的，他和全球几十家鞋厂合作，下订单给工厂，工厂才能生产的。<br>比如这次订单是十万双，工厂最少要备十二万双的材料，因为验货很严格，会打掉一部分鞋子，所以必须有候补的。<br>合同如果是十万双，不能多，也不能少，部分品牌商会要求工厂销毁做多的鞋子，但条件是品牌商要承担这部分费用。<br>有的品牌商不愿意付这些费用，工厂就把这些做多的鞋子卖出来，剩余的材料也会做成鞋子卖，这部分鞋子是没有品牌授权的，是不是正品大家各自理解吧！</p><h1 id="为什么这么便宜"><a href="#为什么这么便宜" class="headerlink" title="为什么这么便宜"></a>为什么这么便宜</h1><p>我们这是实体批发的价格，老客户都知道，我们这是批发价，无论买多少双，都是不议价。</p><h1 id="如何买微信上的商品"><a href="#如何买微信上的商品" class="headerlink" title="如何买微信上的商品"></a>如何买微信上的商品</h1><p>可以微信付，可以支付宝付，可以到微店随便拍个价格一样的，或者价格差不多的，联系我们修改价格，就可以了。</p><h1 id="关于必加微信的原因"><a href="#关于必加微信的原因" class="headerlink" title="关于必加微信的原因"></a>关于必加微信的原因</h1><p>微店鞋子上架很耗时间，所以上新比较慢，微信上新就快很多的。<br>也是因为政策的原因，我们从淘宝到咸鱼，从咸鱼到微店，我们也不知道下一次平台会是什么，不久的将来，好东西不是大家想买就买的到的，加个微信，只是为了让大家以后还能找到我们！！！<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>关于</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>GitHub Actions 实现自动部署静态博客</title>
    <link href="/pages/6b9d359ec5aa5019"/>
    <url>/pages/6b9d359ec5aa5019</url>
    
    <content type="html"><![CDATA[<h1 id="GitHub-Actions-实现自动部署静态博客"><a href="#GitHub-Actions-实现自动部署静态博客" class="headerlink" title="GitHub Actions 实现自动部署静态博客"></a>GitHub Actions 实现自动部署静态博客</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我使用vuepress搭建了一个静态博客，挂在了Github pages和<a href="https://dev.tencent.com/">Coding pages</a>上面。</p><p>coding pages在国内的访问速度比github pages要快很多，而且还可以被百度收录。</p><span id="more"></span><p>一开始的部署方式是使用<a href="https://github.com/xugaoyi/vuepress-theme-vdoing/blob/master/deploy.sh">sh部署脚本</a>把代码提交到这两个平台的仓库分支，虽然已经很方便了，但是我还想把博客未打包的源码提交到Github主分支上。这就需要我操作两次命令，<strong>我就想能不能只需要一次操作就可以同时把源码、部署代码一次性提交到两个平台呢？</strong></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>在了解GitHub Actions最近（2019.12）刚正式发布了之后，尝试使用它发现能够满足我的需求。<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html?20191227113947#comment-last">GitHub Actions 入门教程</a></p><p>首先，需要获取token，后面会用到。获取方法：github获取token<a href="https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line">官方文档</a>、coding获取token<a href="https://dev.tencent.com/help/doc/account/access-token">官方文档</a>。</p><p>然后，将这两个token同时储存到github仓库的<code>Settings/Secrets</code>里面。变量名可以随便取，但是注意要和后面的<code>ci.yml</code>文件内的变量名一致，这里取的是<code>ACCESS_TOKEN</code>和<code>CODING_TOKEN</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103124812.jpg" alt="token设置" title="token设置"></p><p>GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的<code>.github/workflows</code>目录。</p><p>workflow 文件采用 <a href="https://xugaoyi.com/pages/4e8444e2d534d14f/">YAML 格式</a>，文件名可以任意取，但是后缀名统一为<code>.yml</code>，比如<code>ci.yml</code>。一个库可以有多个 workflow 文件。GitHub 只要发现<code>.github/workflows</code>目录里面有<code>.yml</code>文件，就会自动运行该文件。    </p><p>我的<code>ci.yml</code>文件：    </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">CI</span><br><br><span class="hljs-comment"># 在master分支发生push事件时触发。</span><br><span class="hljs-attr">on:</span> <br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">master</span><br><span class="hljs-attr">jobs:</span> <span class="hljs-comment"># 工作流</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span> <span class="hljs-comment">#运行在虚拟机环境ubuntu-latest</span><br><br>    <span class="hljs-attr">strategy:</span><br>      <span class="hljs-attr">matrix:</span><br>        <span class="hljs-attr">node-version:</span> [<span class="hljs-number">10.</span><span class="hljs-string">x</span>]<br><br>    <span class="hljs-attr">steps:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-comment"># 步骤1</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v1</span> <span class="hljs-comment"># 使用的动作。格式：userName/repoName。作用：检出仓库，获取源码。 官方actions库：https://github.com/actions</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Use</span> <span class="hljs-string">Node.js</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.node-version</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-comment"># 步骤2</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v1</span> <span class="hljs-comment"># 作用：安装nodejs</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.node-version</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-comment"># 版本</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">run</span> <span class="hljs-string">deploy.sh</span> <span class="hljs-comment"># 步骤3 （同时部署到github和coding）</span><br>        <span class="hljs-attr">env:</span> <span class="hljs-comment"># 设置环境变量</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.ACCESS_TOKEN</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-comment"># toKen私密变量</span><br>          <span class="hljs-attr">CODING_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.CODING_TOKEN</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-comment"># 腾讯云开发者平台（coding）私密token</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">npm</span> <span class="hljs-string">run</span> <span class="hljs-string">deploy</span> <span class="hljs-comment"># 执行的命令  </span><br>        <span class="hljs-comment"># package.json 中添加 &quot;deploy&quot;: &quot;bash deploy.sh&quot;</span><br></code></pre></td></tr></table></figure><p>这个配置文件会在我push提交代码到主分支时触发工作，运行环境是<code>ubuntu-latest</code>，工作步骤：</p><ul><li><p>一，获取仓库源码</p></li><li><p>二，安装nodejs，打包项目有用到nodejs</p></li><li><p>三，把token设置到环境变量，安装项目依赖，并运行<code>deploy.sh</code>文件，</p></li></ul><blockquote><p>ACCESS_TOKE 和 CODING_TOKEN 都是保存在github仓库的<code>Settings/Secrets</code>位置的私密变量，仓库代码中可以通过&lt;secrets.变量名&gt;来获取，保证了token的私密性。</p></blockquote><p>再来看看将要被运行的<code>deploy.sh</code>部署代码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/usr/bin/env sh</span><br><span class="hljs-comment"># 确保脚本抛出遇到的错误</span><br><span class="hljs-built_in">set</span> -e<br>npm run build <span class="hljs-comment"># 生成静态文件</span><br><span class="hljs-built_in">cd</span> docs/.vuepress/dist <span class="hljs-comment"># 进入生成的文件夹</span><br><br><span class="hljs-comment"># deploy to github</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;blog.xugaoyi.com&#x27;</span> &gt; CNAME<br><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$GITHUB_TOKEN</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>  msg=<span class="hljs-string">&#x27;deploy&#x27;</span><br>  githubUrl=git@github.com:xugaoyi/blog.git<br><span class="hljs-keyword">else</span><br>  msg=<span class="hljs-string">&#x27;来自github action的自动部署&#x27;</span><br>  githubUrl=https://xugaoyi:<span class="hljs-variable">$&#123;GITHUB_TOKEN&#125;</span>@github.com/xugaoyi/blog.git<br>  git config --global user.name <span class="hljs-string">&quot;xugaoyi&quot;</span><br>  git config --global user.email <span class="hljs-string">&quot;894072666@qq.com&quot;</span><br><span class="hljs-keyword">fi</span><br>git init<br>git add -A<br>git commit -m <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;msg&#125;</span>&quot;</span><br>git push -f <span class="hljs-variable">$githubUrl</span> master:gh-pages <span class="hljs-comment"># 推送到github</span><br><br><span class="hljs-comment"># deploy to coding</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;www.xugaoyi.com\nxugaoyi.com&#x27;</span> &gt; CNAME  <span class="hljs-comment"># 自定义域名</span><br><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$CODING_TOKEN</span>&quot;</span> ]; <span class="hljs-keyword">then</span>  <span class="hljs-comment"># -z 字符串 长度为0则为true；$CODING_TOKEN来自于github仓库`Settings/Secrets`设置的私密环境变量</span><br>  codingUrl=git@git.dev.tencent.com:xugaoyi/xugaoyi.git<br><span class="hljs-keyword">else</span><br>  codingUrl=https://xugaoyi:<span class="hljs-variable">$&#123;CODING_TOKEN&#125;</span>@git.dev.tencent.com/xugaoyi/xugaoyi.git<br><span class="hljs-keyword">fi</span><br>git add -A<br>git commit -m <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;msg&#125;</span>&quot;</span><br>git push -f <span class="hljs-variable">$codingUrl</span> master <span class="hljs-comment"># 推送到coding</span><br><br><span class="hljs-built_in">cd</span> -<br>rm -rf docs/.vuepress/dist<br></code></pre></td></tr></table></figure><p>这个文件使用<a href="https://ipcmen.com/">Shell命令</a>写的，它会先运行打包命令，进入打包好的文件，创建一个自定义域名的CNAME文件（如果你没有自定义域名可去掉这个命令），判断是否有token环境变量，如果没有说明是在本地自己的电脑上运行的部署，使用ssh代码仓库地址，如果有token环境变量，说明是GitHub Actions自动触发的部署，此时使用的是可以通过toKen来获取代码提交权限的提交地址。最后通过git命令提交到各自的仓库，完成部署。</p><blockquote><p>提示：</p><ul><li><p>Shell 可以获取到环境变量。</p></li><li><p>我想给两个平台上部署的博客不一样的自定义域名，因此做了分开创建CNAME文件，分开提交。</p></li></ul></blockquote><p>至此，我前面提到的需求就实现啦，只需要把源码push到github仓库这一个步骤，后面的博客打包、部署到github和coding等工作都由GitHub Actions来自动完成。</p><p>如下你想查看部署日志，你可以到github仓库的Actions这一项查看。</p><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103124813.png" alt="部署日志" title="部署日志"></p><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><p><a href="https://xugaoyi.com/pages/f44d2f9ad04ab8d3/">《GitHub Actions 定时运行代码：每天定时百度链接推送》</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>GitHub技巧</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>友情链接</title>
    <link href="/friends"/>
    <url>/friends</url>
    
    <content type="html"><![CDATA[<!--普通卡片列表容器，可用于友情链接、项目推荐、古诗词展示等。cardList 后面可跟随一个数字表示每行最多显示多少个，选值范围1~4，默认3。在小屏时会根据屏幕宽度减少每行显示数量。--><p>::: cardList</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">麋鹿鲁哟</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">大道至简，知易行难</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200122153807.jpg</span> <span class="hljs-comment"># 可选</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://www.cnblogs.com/miluluyo/</span> <span class="hljs-comment"># 可选</span><br>  <span class="hljs-attr">bgColor:</span> <span class="hljs-string">&#x27;#CBEAFA&#x27;</span> <span class="hljs-comment"># 可选，默认var(--bodyBg)。颜色值有#号时请添加单引号</span><br>  <span class="hljs-attr">textColor:</span> <span class="hljs-string">&#x27;#6854A1&#x27;</span> <span class="hljs-comment"># 可选，默认var(--textColor)</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">XAOXUU</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">&#x27;#IOS #Volantis主题作者&#x27;</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://cdn.jsdelivr.net/gh/xaoxuu/assets@master/avatar/avatar.png</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://xaoxuu.com</span><br>  <span class="hljs-attr">bgColor:</span> <span class="hljs-string">&#x27;#B9D59C&#x27;</span><br>  <span class="hljs-attr">textColor:</span> <span class="hljs-string">&#x27;#3B551F&#x27;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">lookroot的个人空间</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">寻求理想和显示的平衡</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://www.lookroot.cn/logo.png</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://www.lookroot.cn/</span><br>  <span class="hljs-attr">bgColor:</span> <span class="hljs-string">&#x27;#B7DBFF&#x27;</span><br>  <span class="hljs-attr">textColor:</span> <span class="hljs-string">&#x27;#294D71&#x27;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">平凡的你我</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">理想成为大牛的&lt;br/&gt;小陈同学</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://reinness.com/avatar.png</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://reinness.com</span><br>  <span class="hljs-attr">bgColor:</span> <span class="hljs-string">&#x27;#FFE5B4&#x27;</span><br>  <span class="hljs-attr">textColor:</span> <span class="hljs-string">&#x27;#A05F2C&#x27;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">znote</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">荷尽已无擎雨盖，&lt;br/&gt;菊残犹有傲霜枝。</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://zpj80231.gitee.io/znote/vuepress/head-fish.jpg</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://zpj80231.gitee.io/znote/</span><br>  <span class="hljs-attr">bgColor:</span> <span class="hljs-string">&#x27;#FCE5BF&#x27;</span><br>  <span class="hljs-attr">textColor:</span> <span class="hljs-string">&#x27;#7B2532&#x27;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">全栈软件开发直通车</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">全栈软件开发技术博客，&lt;br/&gt;从小白到大神!</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://gitee.com/wangshibiao/blog_picBed2/raw/master/images/20200806151030.png</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://sofineday.com</span><br>  <span class="hljs-attr">bgColor:</span> <span class="hljs-string">&#x27;#FBEBEC&#x27;</span><br>  <span class="hljs-attr">textColor:</span> <span class="hljs-string">&#x27;#603420&#x27;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">易良同学的博客</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">正在努力！</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://yiliang.site/assets/images/avatar.jpeg</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://yiliang.site</span><br>  <span class="hljs-attr">bgColor:</span> <span class="hljs-string">&#x27;#FFEFE2&#x27;</span><br>  <span class="hljs-attr">textColor:</span> <span class="hljs-string">&#x27;#A05F2C&#x27;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">永远的救赎者</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">知者减半，省者全无。</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://i.loli.net/2020/08/10/PkQMGL6pATW1vBg.jpg</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">http://www.yuanchengcheng.vip/</span><br>  <span class="hljs-attr">bgColor:</span> <span class="hljs-string">&#x27;#FBEBEC&#x27;</span><br>  <span class="hljs-attr">textColor:</span> <span class="hljs-string">&#x27;#603420&#x27;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">辰旭博客</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">凤鸣初阳，百鸟朝凰</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://s1.ax1x.com/2020/08/09/aoLTDx.png</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://kareny.cn</span><br>  <span class="hljs-attr">bgColor:</span> <span class="hljs-string">&#x27;#FFCEDE&#x27;</span><br>  <span class="hljs-attr">textColor:</span> <span class="hljs-string">&#x27;#621529&#x27;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">JokerM&#x27;s</span> <span class="hljs-string">Palace</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">Take</span> <span class="hljs-string">your</span> <span class="hljs-string">heart</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://cdn.jokerm.com/?/imgcdn/logo.png</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://jokerm.com/</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Saul.J.Wu</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">立身之本，不在高低。</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://raw.githubusercontent.com/SaulJWu/images/main/20201114225611.jpg</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://sauljwu.github.io/</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Lake&#x27;s</span> <span class="hljs-string">blog</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">不积跬步，无以至千里；不积小流，无以成江海。</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://cdn.jsdelivr.net/gh/taixingyiji/image_store@main/blog/logo/img.png</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://taixingyiji.com/</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">杨庭培的博客</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">太平世界，环球同此凉热。</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://www.ytpblog.com/img/favicon.ico</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://www.ytpblog.com/</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">眼里有光</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">道阻且长，行则将至</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://icooloop.gitee.io/img/logo.jpg</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://icooloop.gitee.io/</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">x·π</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">为开发者量身制作的技术博客和知识库管理平台。</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://cdn.jsdelivr.net/gh/Ezuy-Lee/RainzeDrawingBed/media/logo.png</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://ezuy-lee.github.io/xpai/</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Cubik65536&#x27;s</span> <span class="hljs-string">blog</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">RECOMMENDED</span> <span class="hljs-string">BY</span> <span class="hljs-string">DR.CREATIVE</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://cdn.jsdelivr.net/gh/Cubik65536/Cubik-Image-Hosting-Service/public/assets/img/rubiks-cube-1321158.jpg</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://blog.cubik65536.top/</span><br><br></code></pre></td></tr></table></figure><p>:::</p><h3 id="友链申请"><a href="#友链申请" class="headerlink" title="友链申请"></a>友链申请</h3><p>与我<a href="/about/#%E8%81%94%E7%B3%BB"> 联系 </a>或者 在本页面评论区留言您的友链信息，格式：(点击代码块右上角一键复制)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Evan&#x27;s</span> <span class="hljs-string">blog</span> <span class="hljs-comment"># 昵称</span><br>  <span class="hljs-attr">desc:</span> <span class="hljs-string">积跬步以至千里，喜欢学习喜欢你。</span> <span class="hljs-comment"># 介绍</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103123203.jpg</span> <span class="hljs-comment"># 头像</span><br>  <span class="hljs-attr">link:</span> <span class="hljs-string">https://xugaoyi.com/</span>  <span class="hljs-comment"># 链接</span><br></code></pre></td></tr></table></figure><p>申请前记得先添加本站哦~,谢谢！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>关于</title>
    <link href="/about"/>
    <url>/about</url>
    
    <content type="html"><![CDATA[<h3 id="📚Blog"><a href="#📚Blog" class="headerlink" title="📚Blog"></a>📚Blog</h3><p>这是一个兼具博客文章、知识管理、文档查找的个人网站，主要内容是Web前端技术。如果你喜欢这个博客&amp;主题欢迎到<a href="https://github.com/xugaoyi/vuepress-theme-vdoing">GitHub</a>点个Star，或者交换<a href="/friends/">友链</a> ( •̀ ω •́ )✧</p><p>:::tip<br>文章内容仅是我个人的小总结，资历尚浅，如有误还请指正。<br>:::</p><p><a href="https://github.com/xugaoyi/vuepress-theme-vdoing/commits/master">更新日志</a></p><h3 id="🎨Theme"><a href="#🎨Theme" class="headerlink" title="🎨Theme"></a>🎨Theme</h3><p><a href="https://github.com/xugaoyi/vuepress-theme-vdoing"><img src="https://github-readme-stats.vercel.app/api/pin/?username=xugaoyi&amp;repo=vuepress-theme-vdoing" alt="ReadMe Card" class="no-zoom"></a><br><a href="https://doc.xugaoyi.com/"><img src="https://github-readme-stats.vercel.app/api/pin/?username=xugaoyi&amp;repo=vuepress-theme-vdoing-doc" alt="ReadMe Card" class="no-zoom"></a></p><p>本站主题是 <a href="https://github.com/xugaoyi/vuepress-theme-vdoing"><code>Vdoing</code></a>，这是一款简洁高效的VuePress 知识管理&amp;博客 主题。旨在轻松打造一个<code>结构化</code>与<code>碎片化</code>并存的个人在线知识库&amp;博客，让你的知识海洋像一本本书一样清晰易读。配合多维索引，让每一个知识点都可以快速定位！ 更多<a href="https://github.com/xugaoyi/vuepress-theme-vdoing">详情</a>。</p><!-- <a href="https://github.com/xugaoyi/vuepress-theme-vdoing" target="_blank"><img src='https://img.shields.io/github/stars/xugaoyi/vuepress-theme-vdoing' alt='GitHub stars' class="no-zoom"></a><a href="https://github.com/xugaoyi/vuepress-theme-vdoing" target="_blank"><img src='https://img.shields.io/github/forks/xugaoyi/vuepress-theme-vdoing' alt='GitHub forks' class="no-zoom"></a> --><h3 id="🐼Me"><a href="#🐼Me" class="headerlink" title="🐼Me"></a>🐼Me</h3><p>web前端小学生</p><h4 id="技能"><a href="#技能" class="headerlink" title="技能"></a>技能</h4><ul><li>熟悉 JavaScript、HTML、CSS、Vue 的拼写</li><li>了解 Linux、windows、macOS 的开关机方式</li><li>精通 Git 的 pull 和 push，并注册了 GitHub 帐号刷了一些 star</li></ul><p>本人↓↓↓</p><img src='https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103123203.jpg' alt='本人照片' style="width:106px;"><h2 id="email-联系"><a href="#email-联系" class="headerlink" title=":email: 联系"></a>:email: 联系</h2><ul><li><strong>WeChat or QQ</strong>: <a :href="qqUrl" class='qq'>894072666</a></li><li><strong>Email</strong>:  <a href="mailto:894072666@qq.com">894072666@qq.com</a></li><li><strong>GitHub</strong>: <a href="https://github.com/xugaoyi">https://github.com/xugaoyi</a></li><li><strong>Vdoing主题文档</strong>：<a href="https://doc.xugaoyi.com/">https://doc.xugaoyi.com</a></li><li><strong>Vdoing交流QQ群</strong>：694387113</li></ul><h2 id="前端学习"><a href="#前端学习" class="headerlink" title="前端学习"></a>前端学习</h2><p>🎉🎉✨与我 <a :href="qqUrl">联系↑</a> 获取前端 <a href="https://github.com/xugaoyi/blog-gitalk-comment/wiki/Front-end-Study">学习资源</a></p><script>  export default {    data(){      return {        qqUrl: 'tencent://message/?uin=894072666&Site=&Menu=yes'      }    },    mounted(){      const flag =  navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);      if(flag){        this.qqUrl = 'mqqwpa://im/chat?chat_type=wpa&uin=894072666&version=1&src_type=web&web_src=oicqzone.com'      }    }  }</script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>解决百度无法收录搭建在GitHub上的个人博客的问题</title>
    <link href="/pages/41f87d890d0a02af"/>
    <url>/pages/41f87d890d0a02af</url>
    
    <content type="html"><![CDATA[<h1 id="解决百度无法收录搭建在GitHub上的静态博客的问题"><a href="#解决百度无法收录搭建在GitHub上的静态博客的问题" class="headerlink" title="解决百度无法收录搭建在GitHub上的静态博客的问题"></a>解决百度无法收录搭建在GitHub上的静态博客的问题</h1><p>::: warning<br>如果你正在寻找本博客的搭建文档，博主建议您查看这个仓库的<a href="https://github.com/xugaoyi/vuepress-theme-vdoing">README</a>。<br>:::</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>由于GitHub禁止百度爬虫访问，造成托管在GitHub Pages上的博客无法被百度收录。相关问题可以通过百度站长平台的<code>抓取诊断</code>再现，每次都是403 Forbidden的错误。</p><span id="more"></span><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>同时将博客同时同步托管到GitHub Pages和<a href="https://dev.tencent.com/">coding pages</a>上，解决百度不收录问题。最后发现在国内使用coding pages打开速度特别快，而且还会被百度收录，因此我把coding pages的站点作为主站点，原本在github pages的作为分站点。</p><p>步骤：</p><p>1、注册<a href="https://dev.tencent.com/">coding</a>账号，创建仓库，把代码推送到coding仓库，并开启pages服务。</p><blockquote><p>git 操作部分和使用github的差不多，不了解git操作的可以看我的另一篇文章：<a href="https://xugaoyi.com/pages/9a7ee40fc232253e/">Git使用手册</a></p></blockquote><p>2、我的博客项目使用vuepress搭建的，使用的是如下自动部署脚本，同时将代码推送到github和conding。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/usr/bin/env sh</span><br><br><span class="hljs-comment"># 确保脚本抛出遇到的错误</span><br><span class="hljs-built_in">set</span> -e<br><br><span class="hljs-comment"># 生成静态文件</span><br>npm run build<br><br><span class="hljs-comment"># 进入生成的文件夹</span><br><span class="hljs-built_in">cd</span> docs/.vuepress/dist<br><br><span class="hljs-comment"># github</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;b.xugaoyi.com&#x27;</span> &gt; CNAME<br>git init<br>git add -A<br>git commit -m <span class="hljs-string">&#x27;deploy&#x27;</span><br>git push -f git@github.com:xugaoyi/blog.git master:gh-pages <span class="hljs-comment"># 发布到github</span><br><br><span class="hljs-comment"># coding</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;xugaoyi.com&#x27;</span> &gt; CNAME<br>git add -A<br>git commit -m <span class="hljs-string">&#x27;deploy&#x27;</span><br>git push -f git@git.dev.tencent.com:xugaoyi/xugaoyi.git master <span class="hljs-comment"># 发布到coding</span><br><br><span class="hljs-built_in">cd</span> - <span class="hljs-comment"># 退回开始所在目录</span><br>rm -rf docs/.vuepress/dist<br></code></pre></td></tr></table></figure><blockquote><p>因为我想给两个平台上绑定不同的自定义域名，因此我分开创建了CNAME文件。</p></blockquote><p>3、有自定义域名的，也可以在coding pages绑定自定义域名，域名DNS解析中添加CNAME记录指向coding pages的站点地址即可。（没有自定义域名的可忽略，同时把自动部署脚本中的创建CNAME文件的脚本去掉）</p><p>最后，使用百度站长的抓取诊断，发现抓取成功啦，再使用百度站长的<a href="https://ziyuan.baidu.com/linksubmit/index">链接提交</a>功能，把链接提交给百度，过一段时间就可能在百度搜索中搜索到啦。</p><h3 id="如何知道百度有没有收录？"><a href="#如何知道百度有没有收录？" class="headerlink" title="如何知道百度有没有收录？"></a>如何知道百度有没有收录？</h3><p>在百度搜索框中使用site:&lt;链接地址&gt;，如：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">site:</span>xugaoyi.com<br></code></pre></td></tr></table></figure><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><p><a href="https://xugaoyi.com/pages/f44d2f9ad04ab8d3/">《GitHub Actions 定时运行代码：每天定时百度链接推送》</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>GitHub高级搜索技巧</title>
    <link href="/pages/4c778760be26d8b3"/>
    <url>/pages/4c778760be26d8b3</url>
    
    <content type="html"><![CDATA[<h1 id="GitHub高级搜索技巧"><a href="#GitHub高级搜索技巧" class="headerlink" title="GitHub高级搜索技巧"></a>GitHub高级搜索技巧</h1><p><code>in:name &lt;关键字&gt;</code><br> 仓库名称带关键字查询</p><p><code>in:description &lt;关键字&gt;</code><br> 仓库描述带关键字查询</p><p><code>in:readme &lt;关键字&gt;</code><br> README文件带关键字查询</p><span id="more"></span><p><code>stars(fork): &gt;(=) &lt;数字&gt; &lt;关键字&gt;</code><br> star或fork数大于(或等于)指定数字的带关键字查询</p><p><code>stars(fork): 10..20 &lt;关键词&gt;</code><br> star或fork数在10到20之间的带关键字查询</p><p><code>size:&gt;=5000 &lt;关键词&gt;</code><br> 限定仓库大于等于5000K的带关键字查询</p><p><code>pushed(created):&gt;2019-11-15 &lt;关键字&gt;</code><br> 更新 或 创建 日期在2019年11月16日之后的带关键字查询</p><p><code>license:apache-2.0 &lt;关键字&gt;</code><br> LICENSE为apache-2.0的带关键字查询</p><p><code>language:java &lt;关键词&gt;</code><br> 仓库语言为Java的带关键字查询</p><p><code>user:&lt;用户名&gt;</code><br> 查询某个用户的项目</p><p><code>org:&lt;组织名&gt;</code><br> 查询某个组织的项目</p><p>*<strong>以上查询条件可组合使用，空格隔开</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 示例1：搜索仓库名包含javascript，并且stars数大于1000的项目</span><br><span class="hljs-keyword">in</span>:name javascript stars:&gt;1000<br><br><span class="hljs-comment"># 示例2：搜索描述中包含&quot;小程序&quot;，并且fork大于100，并且最近更新时间在2019-11-15之后的，并且使用开发语言为vue的项目</span><br><span class="hljs-keyword">in</span>:description 小程序 fork:&gt;100 pushed:&gt;2019-11-15 language:vue<br></code></pre></td></tr></table></figure><p>*<strong>或使用高级搜索页搜索：</strong></p><p><a href="https://github.com/search/advanced">https://github.com/search/advanced</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>GitHub技巧</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>使用Gitalk实现静态博客无后台评论系统</title>
    <link href="/pages/1da0bf9a988eafe5"/>
    <url>/pages/1da0bf9a988eafe5</url>
    
    <content type="html"><![CDATA[<h1 id="使用Gitalk实现静态博客无后台评论系统"><a href="#使用Gitalk实现静态博客无后台评论系统" class="headerlink" title="使用Gitalk实现静态博客无后台评论系统"></a>使用Gitalk实现静态博客无后台评论系统</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Gitalk，一个基于 Github Issue 和 Preact 开发的评论插件。</p><p>下面我们来用它在vuepress搭建的博客中搭建评论区吧</p><span id="more"></span><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>使用一个新的东西首先当然是要了解它</p><p>Gitalk demo：<a href="https://gitalk.github.io/">https://gitalk.github.io/</a></p><p>Gitalk github：<a href="https://github.com/gitalk/gitalk">https://github.com/gitalk/gitalk</a></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>如何实现？最好的方法我认为是看<a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md">官方文档</a>，这里我只是记录一下实现的步骤。</p><p>使用一个别人已经开发好的 <a href="https://github.com/dongyuanxin/vuepress-plugin-comment">vuepress-plugin-comment</a> 插件来帮助我们把Gitalk应用到vuepress搭建的静态博客。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install --save vuepress-plugin-comment<br></code></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><code>options</code>的配置和<code>Gitalk</code>的配置相同</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">module</span>.exports = &#123;<br>  plugins: [<br>    [<br>      <span class="hljs-string">&#x27;vuepress-plugin-comment&#x27;</span>,<br>      &#123;<br>        choosen: <span class="hljs-string">&#x27;gitalk&#x27;</span>, <br>        options: &#123;<br>          clientID: <span class="hljs-string">&#x27;GitHub Application Client ID&#x27;</span>,<br>          clientSecret: <span class="hljs-string">&#x27;GitHub Application Client Secret&#x27;</span>,<br>          repo: <span class="hljs-string">&#x27;GitHub repo&#x27;</span>,<br>          owner: <span class="hljs-string">&#x27;GitHub repo owner&#x27;</span>,<br>          admin: [<span class="hljs-string">&#x27;GitHub repo owner and collaborators, only these guys can initialize github issues&#x27;</span>],<br>          distractionFreeMode: <span class="hljs-literal">false</span> <br>        &#125;<br>      &#125;<br>    ]<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><p>需要 <strong>GitHub Application</strong>，如果没有 <a href="https://github.com/settings/applications/new">点击这里申请</a>，<code>Authorization callback URL</code> 填写当前使用插件页面的域名。</p><p><img src="https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/QQ%E6%88%AA%E5%9B%BE20191220124134.jpg"></p><p>申请完成就会得 Client ID 和 Client Secret。然后把对应参数填写到配置中，例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">module</span>.exports = &#123;<br>  plugins: [<br>    [<br>      <span class="hljs-string">&#x27;vuepress-plugin-comment&#x27;</span>,<br>      &#123;<br>        choosen: <span class="hljs-string">&#x27;gitalk&#x27;</span>, <br>        options: &#123;<br>          clientID: <span class="hljs-string">&#x27;a6e*******4709b88b&#x27;</span>,<br>          clientSecret: <span class="hljs-string">&#x27;f0e***************beb8b2d54d7241&#x27;</span>,<br>          repo: <span class="hljs-string">&#x27;blog&#x27;</span>, <span class="hljs-comment">// GitHub 仓库</span><br>          owner: <span class="hljs-string">&#x27;xugaoyi&#x27;</span>, <span class="hljs-comment">// GitHub仓库所有者</span><br>          admin: [<span class="hljs-string">&#x27;xugaoyi&#x27;</span>], <span class="hljs-comment">// 对仓库有写权限的人</span><br>          distractionFreeMode: <span class="hljs-literal">false</span> <br>        &#125;<br>      &#125;<br>    ]<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><p>配置好之后重启项目就发现页面上多了一个评论区，说明评论功能实现啦。但还是有一些bug，继续完善它~</p><h3 id="BUG修复"><a href="#BUG修复" class="headerlink" title="BUG修复"></a>BUG修复</h3><p><strong>评论区与博客样式不匹配</strong></p><p>解决办法：新增全局样式文件<code>.vuepress/styles/index.styl</code>，写入样式</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#vuepress-plugin-comment<br>  <span class="hljs-attribute">max-width</span> <span class="hljs-variable">$contentWidth</span><br>  <span class="hljs-attribute">margin</span> <span class="hljs-number">0</span> auto<br>  <span class="hljs-attribute">padding</span> <span class="hljs-number">2rem</span> <span class="hljs-number">2.5rem</span><br>  <span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width</span>: $MQNarrow)<br>    padding <span class="hljs-number">2rem</span><br>  @media (<span class="hljs-attribute">max-width</span>: $MQMobileNarrow)<br>    padding <span class="hljs-number">1.5rem</span><br></code></pre></td></tr></table></figure><p><strong>评论区出现 Error: Validation Failed.</strong></p><p>问题分析：当页面 链接过长  或 存在中文链接，导致整个链接字符串长度超过50时，会造成请求issues接口失败，出现422状态码。（中文链接会自动转码，变得很长，id参数默认取的是链接，长度不能超过50）</p><p>解决办法：手动设置id取值，限制长度不超过50。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br> choosen: <span class="hljs-string">&#x27;gitalk&#x27;</span>, <br> options: &#123;<br>   ...<br>   id: <span class="hljs-string">&quot;&lt;%- (window.location.origin + (frontmatter.to.path || window.location.pathname)).slice(-50) %&gt;&quot;</span>, <span class="hljs-comment">//  页面的唯一标识,长度不能超过50</span><br>   title: <span class="hljs-string">&quot;「评论」&lt;%- document.title %&gt;&quot;</span>, <span class="hljs-comment">// GitHub issue 的标题</span><br>   labels: [<span class="hljs-string">&quot;Gitalk&quot;</span>, <span class="hljs-string">&quot;Comment&quot;</span>], <span class="hljs-comment">// GitHub issue 的标签</span><br>   body:<span class="hljs-string">&quot;&lt;%- document.title %&gt;：&lt;%- window.location.origin + (frontmatter.to.path || window.location.pathname) %&gt;&quot;</span> <span class="hljs-comment">// GitHub issue 的内容</span><br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>访问变量时，如 <code>$frontmatter</code> 或 <code>window</code>等，请使用  <strong>EJS</strong> 语法。因为在配置中不能使用回调函数，会被vuepress过滤，因此使用 <strong>EJS</strong> 语法。 ——插件作者文档说明</p></blockquote><p><strong>切换页面后评论区内容还是上一个页面的评论</strong></p><p>解决：id在获取<code>path</code>时使用 <code>frontmatter.to.path</code>，插件内置了 ``frontmatter.from<code>、</code>frontmatter.to`。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br> choosen: <span class="hljs-string">&#x27;gitalk&#x27;</span>, <br> options: &#123;<br>   ...<br>   id: <span class="hljs-string">&quot;&lt;%- (window.location.origin + (frontmatter.to.path || window.location.pathname)).slice(-50) %&gt;&quot;</span>, <span class="hljs-comment">//  页面的唯一标识,长度不能超过50</span><br>   title: <span class="hljs-string">&quot;「评论」&lt;%- document.title %&gt;&quot;</span>, <span class="hljs-comment">// GitHub issue 的标题</span><br>   labels: [<span class="hljs-string">&quot;Gitalk&quot;</span>, <span class="hljs-string">&quot;Comment&quot;</span>], <span class="hljs-comment">// GitHub issue 的标签</span><br>   body:<span class="hljs-string">&quot;&lt;%- document.title %&gt;：&lt;%- window.location.origin + (frontmatter.to.path || window.location.pathname) %&gt;&quot;</span> <span class="hljs-comment">// GitHub issue 的内容</span><br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>面试问题集锦</title>
    <link href="/pages/aea6571b7a8bae86"/>
    <url>/pages/aea6571b7a8bae86</url>
    
    <content type="html"><![CDATA[<h1 id="面试问题集锦"><a href="#面试问题集锦" class="headerlink" title="面试问题集锦"></a>面试问题集锦</h1><h2 id="请做一下自我介绍"><a href="#请做一下自我介绍" class="headerlink" title="请做一下自我介绍"></a>请做一下自我介绍</h2><p><strong>回答提示：</strong> 一般人回答这个问题过于平常，只说姓名、年龄、工作经验，这些在简历上都有。其实，企业最希望知道的是求职者能否胜任工作，包括：最强的技能、最深入研究的知识领域、个性中最积极的部分、做过的最成功的事，主要的成就等，要突出积极的个性和做事的能力，说的合情合理企业才会相信。</p><h2 id="你最大的优点是什么？"><a href="#你最大的优点是什么？" class="headerlink" title="你最大的优点是什么？"></a>你最大的优点是什么？</h2><p><strong>回答提示：</strong> 沉着冷静、条理清楚、立场坚定、乐于助人等，加上例子如：我在XX经过一到两年的培训及项目实战，加上实习工作，我想我适合这份工作。</p><h2 id="说说你最大的缺点？"><a href="#说说你最大的缺点？" class="headerlink" title="说说你最大的缺点？"></a>说说你最大的缺点？</h2><p><strong>回答提示：</strong> 这个问题企业问的概率很大，通常不希望听到直接回答的缺点是什么等，如果求职者说自己小心眼、非常懒、工作效率低，企业肯定不会录用你。要从自己的优点说起，中间加一些小缺点，最后再把问答转回到优点上，突出优点的部分。</p><h2 id="说说你对加班的看法？"><a href="#说说你对加班的看法？" class="headerlink" title="说说你对加班的看法？"></a>说说你对加班的看法？</h2><p><strong>回答提示：</strong> 实际上好多公司问这个问题，并不证明一定要加班，只是想测试你是否愿意为公司奉献。</p><p><strong>回答样本：</strong> 如果是工作需要我会义不容辞加班，我现在单身，没有任何家庭负担，可以全身心的投入工作。但同时，我也会提高工作效率，减少不必要的加班。</p><h2 id="说说你对薪资的要求？"><a href="#说说你对薪资的要求？" class="headerlink" title="说说你对薪资的要求？"></a>说说你对薪资的要求？</h2><p><strong>回答提示：</strong> 如果你对薪资的要求太低，那显然贬低自己的能力；如果你对薪资的要求太高，那又会显得你分量过重，公司受用不起。一些雇主通常都事先对求聘的职位定下开支预算，因而他们第一次提出的价钱往往是他们所能给予的最高价钱，他们问你只不过想证实一下这笔钱是否足以引起你对该工作的兴趣。</p><p><strong>回答样本：</strong> </p><p>①我对工资没有硬性要求，我相信贵公司会友善合理。我注重的是找到工作机会，所以只要条件公平，我则不会计较太多。</p><p>②我受过系统的软件编程的训练，不需要进行大量的培训，而且我本人也对编程特别感兴趣。因此，我希望公司能根据我的情况和市场标准的水平，给我合理的薪水。</p><p>③如果你必须自己说出具体数目，请不要说一个宽泛的范围，那样你将只能得到最低限度的数字。最好给出一个具体的数字，这样表明你已经对当今的人才市场做了调查，知道像自己这样学历的雇员有什么样的价值。</p><h2 id="在五年内，你的职业规划？"><a href="#在五年内，你的职业规划？" class="headerlink" title="在五年内，你的职业规划？"></a>在五年内，你的职业规划？</h2><p><strong>回答提示：</strong> 这是每一个应聘者都不希望被问到的问题，但是几乎每个人都会被问到，比较多的答案是“管理者”。当然，说出其他一些你感兴趣的职位也是可以的。要知道，考官总是喜欢有进取心的应聘者，此时如果说“不知道”，或许就会使你丧失一个好机会。最普通的回答应该是“我准备在技术领域有所作为”或“我希望能按照公司的管理思路发展”。</p><h2 id="你朋友对你的评价"><a href="#你朋友对你的评价" class="headerlink" title="你朋友对你的评价?"></a>你朋友对你的评价?</h2><p><strong>回答提示：</strong> 想从侧面了解一下你的性格及与人相处的问题。</p><p><strong>回答样本：</strong> </p><p>①我朋友都说我是一个可以信赖的人。因为，我一旦答应别人的事情，就一定会做到。如果我做不到，我就不会轻易许诺。</p><p>②我觉的我是一个比较随和的人，与不同的人都可以友好相处。在我与人相处时，我总是能站在别人的角度考虑问题。</p><h2 id="你还有什么问题要问吗"><a href="#你还有什么问题要问吗" class="headerlink" title="你还有什么问题要问吗?"></a>你还有什么问题要问吗?</h2><p><strong>回答提示：</strong> 企业的这个问题看上去可有可无，其实很关键，企业不喜欢说“没问题”的人，因为其很注重员工的个性和创新能力。企业不喜欢求职者问个人福利之类的问题，如果有人这样问：贵公司对新入公司的员工有没有什么培训项目，我可以参加吗？或者说贵公司的晋升机制是什么样的？企业将很欢迎，因为体现出你对学习的热情和对公司的忠诚度以及你的上进心。</p><h2 id="录用后发现不适合这个职位，怎么办"><a href="#录用后发现不适合这个职位，怎么办" class="headerlink" title="录用后发现不适合这个职位，怎么办?"></a>录用后发现不适合这个职位，怎么办?</h2><p><strong>回答提示：</strong> 工作一段时间发现工作不适合，有两种情况：①如果你确实热爱这个职业，那就要不断学习，虚心向领导和同事学习业务知识和处事经验，了解这个职业的精神内涵和职业要求，力争减少差距；②你觉得这个职业可有可无，那还是趁早换个职业，去发现适合你的，你热爱的职业，那样你的发展前途也会大点，对单位和个人都有好处。</p><h2 id="工作时跟领导意见不同怎么办"><a href="#工作时跟领导意见不同怎么办" class="headerlink" title="工作时跟领导意见不同怎么办?"></a>工作时跟领导意见不同怎么办?</h2><p><strong>回答样本：</strong> ①原则上我会尊重和服从领导的工作安排，同时私底下找机会以请教的口吻，婉转地表达自己的想法，看看领导是否能改变想法。②如果领导没有采纳我的建议，我也同样会按领导的要求认真地去完成这项工作。③还有一种情况，假如领导要求的方式违背原则，我会坚决提出反对意见，如领导仍固执己见，我会毫不犹豫地再向上级领导反映。</p><h2 id="工作出现失误并造成损失，你会怎么做"><a href="#工作出现失误并造成损失，你会怎么做" class="headerlink" title="工作出现失误并造成损失，你会怎么做?"></a>工作出现失误并造成损失，你会怎么做?</h2><p><strong>回答样本：</strong> ①我本意是为公司努力工作，如果造成经济损失，我认为首要的问题是想方设法去弥补或挽回经济损失。如果我无能力负责，希望单位帮助解决。</p><p>②分清责任，各负其责，如果是我的责任，我甘愿受罚；如果是一个我负责的团队中别人的失误，也不能幸灾乐祸，作为一个团队，需要互相提携共同成工作，安慰同事并且帮助同事查找原因总结经验。</p><p>③个人的一生不可能不犯错误，重要的是能从自己的或者是别人的错误中吸取经验教训，要检讨自己的工作方法、分析问题的深度和力度。</p><h2 id="谈谈你对跳槽的看法"><a href="#谈谈你对跳槽的看法" class="headerlink" title="谈谈你对跳槽的看法?"></a>谈谈你对跳槽的看法?</h2><p><strong>回答样本：</strong> ①正常的“跳槽”能够促进人才合理流动，应该支持。②频繁的跳槽对单位和个人双方都不利，应该反对。</p><h2 id="和同事、上司难以相处，你怎么办"><a href="#和同事、上司难以相处，你怎么办" class="headerlink" title="和同事、上司难以相处，你怎么办?"></a>和同事、上司难以相处，你怎么办?</h2><p><strong>回答样本：</strong> ①我会服从领导的指挥，配合同事的工作。②我会从自身找原因，仔细分析是不是自己工作做得不好。还要看看是不是为人处世方面做得不好，如果是这样的话我会努力改正。③如果我找不到原因，我会找机会跟他们沟通，请他们指出我的不足，及时改正。④作为优秀的员工，应该时刻以大局为重，即使在一段时间内，领导和同事对我不理解，我也会做好本职工作，虚心向他们学习，我相信，他们会看见我的努力。</p><h2 id="上级领导抢了你的功劳怎么办"><a href="#上级领导抢了你的功劳怎么办" class="headerlink" title="上级领导抢了你的功劳怎么办?"></a>上级领导抢了你的功劳怎么办?</h2><p> <strong>回答样本：</strong> 首先我不会找那位上级领导说明这事，我会主动找我的主管领导来沟通，因为沟通是解决人际关系的最好办法，但结果会有两种：①我的主管领导认识到自己的错误，我想我会视具体情况决定是否原谅他。②他更加变本加厉的来威胁我，那我会毫不犹豫地找我的上级领导反映此事，因为他这样做会造成负面影响，对今后的工作不利。</p><h2 id="同事孤立你，你怎么办"><a href="#同事孤立你，你怎么办" class="headerlink" title="同事孤立你，你怎么办?"></a>同事孤立你，你怎么办?</h2><p><strong>回答样本：</strong> ①检讨一下自己是不是对工作的热心度超过同事间交往的热心了，加强同事间的交往及共同的兴趣爱好。②工作中，切勿伤害别人的自尊心。③不在领导前拨弄是非。</p><h2 id="你最近是否参加了培训课程"><a href="#你最近是否参加了培训课程" class="headerlink" title="你最近是否参加了培训课程?"></a>你最近是否参加了培训课程?</h2><p><strong>回答提示：</strong> 自费参加，就是XX的培训课程（可以多谈谈自己学的技术）。</p><h2 id="你对于我们公司了解多少"><a href="#你对于我们公司了解多少" class="headerlink" title="你对于我们公司了解多少?"></a>你对于我们公司了解多少?</h2><p><strong>回答提示：</strong> 在去公司面试前上网查一下该公司主营业务。可类似回答：贵公司有意改变策略，加强与国外大厂的OEM合作，自有品牌的部分则透过海外经销商。</p><h2 id="你最擅长的技术方向是什么"><a href="#你最擅长的技术方向是什么" class="headerlink" title="你最擅长的技术方向是什么?"></a>你最擅长的技术方向是什么?</h2><p><strong>回答提示：</strong> 说和你要应聘的职位相关的技术，表现一下自己的热诚没有什么坏处。</p><h2 id="请说出你选择这份工作的动机"><a href="#请说出你选择这份工作的动机" class="headerlink" title="请说出你选择这份工作的动机?"></a>请说出你选择这份工作的动机?</h2><p><strong>回答提示：</strong> 这是想知道面试者对这份工作的热忱及理解度，并筛选因一时兴起而来应试的人，如果是无经验者，可以强调“就算职种不同，也希望有机会发挥之前的经验”。</p><p><strong>回答样本：</strong> 因为我很热爱这个工作，很想从事这方面的工作。</p><h2 id="你能为我们公司带来什么呢"><a href="#你能为我们公司带来什么呢" class="headerlink" title="你能为我们公司带来什么呢?"></a>你能为我们公司带来什么呢?</h2><p><strong>回答提示：</strong> ①假如你可以的话，试着告诉他们你可以减低他们的费用“我已经接受过XX近两年专业的培训，立刻就可以上岗工作”。②企业很想知道未来的员工能为企业做什么，求职者应再次重复自己的优势，然后表示：“就我的能力，我可以做一个优秀的员工在组织中发挥能力，给组织带来高效率和更多的收益”。企业喜欢求职者就申请的职位表明自己的能力，比如申请营销之类的职位，可以说：“我可以开发大量的新客户，同时，对老客户做更全面周到的服务，开发老客户的新需求和消费。” 等等。</p><h2 id="最能概括你自己的三个词"><a href="#最能概括你自己的三个词" class="headerlink" title="最能概括你自己的三个词?"></a>最能概括你自己的三个词?</h2><p><strong>回答样本：</strong> 我经常用的三个词是：适应能力强，有责任心和做事有始终，并结合具体例子向主考官解释。</p><h2 id="作为被面试者给我打一下分"><a href="#作为被面试者给我打一下分" class="headerlink" title="作为被面试者给我打一下分?"></a>作为被面试者给我打一下分?</h2><p><strong>回答提示：</strong> 试着列出四个优点和一个非常非常非常小的缺点（可以抱怨一下设施，没有明确责任人的缺点是不会有人介意的）。</p><h2 id="你怎么理解你应聘的职位"><a href="#你怎么理解你应聘的职位" class="headerlink" title="你怎么理解你应聘的职位?"></a>你怎么理解你应聘的职位?</h2><p><strong>回答提示：</strong> 可以把岗位职责和任务及工作态度阐述下。</p><h2 id="喜欢这份工作的哪一点"><a href="#喜欢这份工作的哪一点" class="headerlink" title="喜欢这份工作的哪一点?"></a>喜欢这份工作的哪一点?</h2><p><strong>回答提示：</strong> 在回答面试官这个问题时不能太直接就把自己心理的话说出来，尤其是薪资方面的问题，不过一些无伤大雅的回答是不错的考虑，如交通方便，工作性质及内容颇能符合自己的兴趣等等都是不错的答案，不过如果这时自己能仔细思考出这份工作的与众不同之处，相信在面试上会大大加分。</p><h2 id="为什么要离职"><a href="#为什么要离职" class="headerlink" title="为什么要离职?"></a>为什么要离职?</h2><p><strong>回答提示：</strong> ①回答这个问题时一定要小心，就算在前一个工作受到再大的委屈，对公司有多少的怨言都千万不要表现出来，尤其要避免对公司本身主管的批评，避免面试官的负面情绪及印象。建议此时最好的回答方式是将问题归咎在自己身上，例如觉得工作没有学习发展的空间，自己想在面试工作的相关产业中多加学习，或是前一份工作与自己的生涯规划不合等等，回答的答案最好是积极正面的。②我希望能获得一份更好的工作，如果机会来临，我会抓住。我觉得目前的工作，已经达到顶峰，即没有升迁机会。</p><h2 id="说说你对行业、技术发展趋势的看法"><a href="#说说你对行业、技术发展趋势的看法" class="headerlink" title="说说你对行业、技术发展趋势的看法?"></a>说说你对行业、技术发展趋势的看法?</h2><p><strong>回答提示：</strong> 企业对这个问题很感兴趣，只有有备而来的求职者能够过关。求职者可以直接在网上查找对你所申请的行业部门的信息，只有深入了解才能产生独特的见解。企业认为最聪明的求职者是对所面试的公司预先了解很多，包括公司各个部门，发展情况，在面试回答问题的时候可以提到所了解的情况，企业欢迎进入企业的人是“知己”，而不是“盲人”。</p><h2 id="对工作的期望与目标何在"><a href="#对工作的期望与目标何在" class="headerlink" title="对工作的期望与目标何在?"></a>对工作的期望与目标何在?</h2><p><strong>回答提示：</strong> 这是面试者用来评断求职者是否对自己有一定程度的期望、对这份工作是否了解的问题。<br>对于工作有确实学习目标的人通常学习较快，对于新工作自然较容易进入状况，这时建议你，最好针对工作的性质找出一个确实的答案，如业务员的工作可以这样回答：“我的目标是能成为一个超级业务员，将公司的产品广泛的推销出去，达到最好的业绩成效；为达到这个目标，我一定会努力学习，而我相信以我认真负责的态度，一定可以达到这个目标。” 其他类的工作也可以比照这个方式回答，只要在目标方面稍微修改一下就可以了。</p><h2 id="谈谈你的家庭"><a href="#谈谈你的家庭" class="headerlink" title="谈谈你的家庭?"></a>谈谈你的家庭?</h2><p><strong>回答提示：</strong> 企业面试时询问家庭问题不是非要知道求职者家庭的情况，而是要了解家庭背景对求职者的塑造和影响。企业希望听到的重点也在于家庭对求职者的积极影响。</p><p><strong>回答样本：</strong> 我很爱我的家庭，我们家一向很和睦，虽然我的父亲和母亲都是普通人，但是从小，我就看到我父亲起早贪黑，每天工作特别勤劳，他的行动无形中培养了我认真负责的态度和勤劳的精神。我母亲为人善良，对人热情，特别乐于助人，所以在单位人缘很好，她的一言一行也一直在教导我做人的道理。</p><h2 id="你认为自己申请这个职位还欠缺什么"><a href="#你认为自己申请这个职位还欠缺什么" class="headerlink" title="你认为自己申请这个职位还欠缺什么?"></a>你认为自己申请这个职位还欠缺什么?</h2><p><strong>回答提示：</strong> 企业喜欢问求职者弱点，但精明的求职者一般不直接回答。</p><p><strong>回答样本：</strong> 继续重复自己的优势，然后说：“对于这个职位和我的能力来说，我相信自己是可以胜任的，只是缺乏经验，这个问题可以进入公司以后以最短的时间来解决，我的学习能力很强，我相信可以很快融入公司的企业文化，进入工作状态。</p><h2 id="你欣赏哪种性格的人"><a href="#你欣赏哪种性格的人" class="headerlink" title="你欣赏哪种性格的人?"></a>你欣赏哪种性格的人?</h2><p><strong>回答提示：</strong> 诚实、不死板而且容易相处的人、有实际行动的人，加上具体例子。</p><h2 id="你通常如何处理别人的批评"><a href="#你通常如何处理别人的批评" class="headerlink" title="你通常如何处理别人的批评?"></a>你通常如何处理别人的批评?</h2><p><strong>回答提示：</strong> ①沈默是金，不必说什么，否则情况更糟，不过我会接受建设性的批评。②我会等大家冷静下来再讨论。</p><h2 id="怎样对待自己的失败"><a href="#怎样对待自己的失败" class="headerlink" title="怎样对待自己的失败?"></a>怎样对待自己的失败?</h2><p><strong>回答提示：</strong> 大意：我们生来都不是十全十美的，我相信我有第二个机会改正我的错误。</p><h2 id="什么会让你有成就感"><a href="#什么会让你有成就感" class="headerlink" title="什么会让你有成就感?"></a>什么会让你有成就感?</h2><p><strong>回答提示：</strong> 为贵公司竭力效劳，尽我所能，完成一个项目。</p><h2 id="眼下你生活中最重要的是什么"><a href="#眼下你生活中最重要的是什么" class="headerlink" title="眼下你生活中最重要的是什么?"></a>眼下你生活中最重要的是什么?</h2><p><strong>回答提示：</strong> 对我来说，能在这个领域找到工作是最重要的，能在贵公司任职对我说最重要。</p><h2 id="你为什么愿意到我们公司来工作"><a href="#你为什么愿意到我们公司来工作" class="headerlink" title="你为什么愿意到我们公司来工作?"></a>你为什么愿意到我们公司来工作?</h2><p><strong>回答提示：</strong> 对于这个问题，你要格外小心，如果你已经对该单位作了研究，你可以回答一些详细的原因。</p><p><strong>回答样本：</strong> ①公司本身高技术开发环境很吸引我我同公司出生在同样的时代，我希望能够进入一家与我共同成长的公司。②你们公司一直都稳定发展，在近几年来在市场上有竞争力。我认为贵公司能够给我提供一个与众不同的发展道路。</p><h2 id="你和别人发生过争执吗"><a href="#你和别人发生过争执吗" class="headerlink" title="你和别人发生过争执吗?"></a>你和别人发生过争执吗?</h2><p><strong>回答提示：</strong> 这是面试中最险恶的问题，其实是考官布下的一个陷阱，成功解决矛盾是一个协作团体中成员所必备的能力。假如你工作在一个服务行业，这个问题简直成了最重要的个环节。你是否能获得这份工作，将取决于这个问题的回答。考官希望看到你是成熟且乐于奉献的。他们通过这个问题了解你的成熟度和处世能力。在没有外界干涉的情况下，通过妥协的方式来解决才是正确答案。</p><h2 id="你做过的哪件事最令自己感到骄傲"><a href="#你做过的哪件事最令自己感到骄傲" class="headerlink" title="你做过的哪件事最令自己感到骄傲?"></a>你做过的哪件事最令自己感到骄傲?</h2><p><strong>回答提示：</strong> 这是考官给你的一个机会，让你展示自己把握命运的能力。这会体现你潜在的领导能力以及你被提升的可能性。假如你应聘于一个服务性质的单位，你很可能会被邀请去餐。记住：你的前途取决于你的知识、你的社交能力和综合表现。</p><h2 id="对这项工作，你有哪些可预见的困难"><a href="#对这项工作，你有哪些可预见的困难" class="headerlink" title="对这项工作，你有哪些可预见的困难?"></a>对这项工作，你有哪些可预见的困难?</h2><p><strong>回答提示：</strong> ①不宜直接说出具体的困难，否则可能令对方怀疑应聘者不行。②可以尝试迂回战术，说出应聘者对困难所持有的态度工作中出现一些困难是正常的，也是难免的，但是只要有坚忍不拔的毅力、良好的合作精神以及事前周密而充分的准备，任何困难都是可以克服。</p><h2 id="录用后你将怎样开展工作"><a href="#录用后你将怎样开展工作" class="headerlink" title="录用后你将怎样开展工作?"></a>录用后你将怎样开展工作?</h2><p><strong>回答提示：</strong> ①如果应聘者对于应聘的职位缺乏足够的了解，最好不要直接说出自己开展工作的具体办法。②可以尝试采用迂回战术来回答，如“首先听取领导的指示和要求，然后就有关情况进行了解和熟悉，接下来制定一份近期的工作计划并报领导批准，最后根据计划开展工作。”。</p><h2 id="你希望与什么样的上级共事"><a href="#你希望与什么样的上级共事" class="headerlink" title="你希望与什么样的上级共事?"></a>你希望与什么样的上级共事?</h2><p><strong>回答提示：</strong> ①通过应聘者对上级的“希望”可以判断出应聘者对自我要求的意识，这既上一个陷阱，又是一次机会。②最好回避对上级具体的希望，多谈对自己的要求。如“做为刚步入社会的新人，我应该多要求自己尽快熟悉环境、适应环境，而不应该对环境提出什么要求，只要能发挥我的专长就可以了。</p><h2 id="你工作经验欠缺，如何能胜任这项工作"><a href="#你工作经验欠缺，如何能胜任这项工作" class="headerlink" title="你工作经验欠缺，如何能胜任这项工作?"></a>你工作经验欠缺，如何能胜任这项工作?</h2><p><strong>回答提示：</strong> ①如果招聘单位对应届毕业生的应聘者提出这个问题，说明招聘公司并不真正在乎经验，关键看应聘者怎样回答。②对这个问题的回答最好要体现出应聘者的诚恳、机智、果敢及敬业。</p><p><strong>回答样本：</strong> 作为应届毕业生，在工作经验方面的确会有所欠缺，因此在读书期间我一直利用各种机会在这个行业里做兼职。我也发现，实际工作远比书本知识丰富、复杂。但我有较强的责任心、适应能力和学习能力，而且比较勤奋，所以在兼职中均能圆满完成各项工作，从中获取的经验也令我受益非浅。请贵公司放心，学校所学及兼职的工作经验使我一定能胜任这个职位。</p><h2 id="你会怎样获得同事的帮助"><a href="#你会怎样获得同事的帮助" class="headerlink" title="你会怎样获得同事的帮助?"></a>你会怎样获得同事的帮助?</h2><p><strong>回答提示：</strong> 每个公司都在不断变化发展的过程中，你当然希望你的员工也是这样。你希望得到那些希望并欢迎变化的人，因为这些明白，为了公司的发展，变化是公司日常生活中重要组成部分。这样的员工往往很容易适应公司的变化，并会对变化做出积极的响应。</p><h2 id="如果你没被录用，你怎么打算"><a href="#如果你没被录用，你怎么打算" class="headerlink" title="如果你没被录用，你怎么打算?"></a>如果你没被录用，你怎么打算?</h2><p><strong>回答样本：</strong> 现在的社会是一个竞争的社会，从这次面试中也可看出这一点，有竞争就必然有优劣，有成功必定就会有失败。往往成功的背后有许多的困难和挫折，如果这次失败了也仅仅是一次而已，只有经过经验经历的积累才能塑造出一个完全的成功者。我会从以下几个方面来正确看待这次失败：①要敢于面对，面对这次失败不气馁，接受已经失去了这次机会就不会回头这个现实，从心理意志和现出对这次失败的抵抗力。要有自信，相信自己经历了这次之后经过努力一定能行，能够超越自我。②善于反思，对于这次面试经验要认真总结，思考剖析，能够从自身的角度找差距正确对自己，实事求是地评价自己，辩证的看待自己的长短得失，做一个明白人。③走出阴影，克服这一次失败带给自己的心理压力，时刻牢记自己弱点，防患于未然，加强学习，提高自身素质。④认真工作，回到原单位岗位上后，要实实在在、踏踏实实地工作，三十六行行行出状元，争取在本岗位上做出一定的成绩。⑤再接再厉，以后如果有机会我仍然后再次参加竞争。</p><h2 id="最令你沮丧的事情"><a href="#最令你沮丧的事情" class="headerlink" title="最令你沮丧的事情?"></a>最令你沮丧的事情?</h2><p><strong>回答样本：</strong> 曾经接触过一个客户，原本就有耳闻他以挑剔出名，所以事前的准备功夫做得十分充分，也投入了相当多的时间与精力，最后客户虽然并没有照单全收，但是接受的程度已经出乎我们意料之外了。原以为从此可以合作愉快，却得知客户最后因为预算关系选择了另一家代理商，之前的努力因而付诸流水。尽管如此，我还是从这次的经验学到很多，如对该产业的了解，整个team的默契也更好了。</p><h2 id="想过创业吗"><a href="#想过创业吗" class="headerlink" title="想过创业吗?"></a>想过创业吗?</h2><p><strong>回答提示：</strong> 这个问题可以显示你的冲劲，但如果你的回答是“有”的话，千万小心，下一个问题可能就是：那么为什么你不这样做呢?</p><h2 id="为什么我们要在众多的面试者中选择你"><a href="#为什么我们要在众多的面试者中选择你" class="headerlink" title="为什么我们要在众多的面试者中选择你?"></a>为什么我们要在众多的面试者中选择你?</h2><p><strong>回答提示：</strong> 别过度吹嘘自己的能力，或信口开河地乱开支票，例如一定会为该公司带来多少钱的业务等，这样很容易给人一种爱说大话、不切实际的感觉。</p><p><strong>回答样本：</strong> 根据我对贵公司的了解，以及我在这份工作上所累积的专业、经验及人脉，相信正是贵公司所找寻的人才。而我在工作态度、EQ上，也有圆融、成熟的一面，和主管、同事都能合作愉快。</p><h2 id="除了本公司外，还应聘了哪些公司"><a href="#除了本公司外，还应聘了哪些公司" class="headerlink" title="除了本公司外，还应聘了哪些公司?"></a>除了本公司外，还应聘了哪些公司?</h2><p><strong>回答提示：</strong> 这是相当多公司会问的问题，其用意是要概略知道应征者的求职志向，所以这并非绝对是负面答案，就算不便说出公司名称，也应回答“销售同种产品的公司”，如果应聘的其他公司是不同业界，容易让人产生无法信任的感觉。</p><h2 id="你并非毕业于名牌院校"><a href="#你并非毕业于名牌院校" class="headerlink" title="你并非毕业于名牌院校?"></a>你并非毕业于名牌院校?</h2><p><strong>回答样本：</strong> 是否毕业于名牌院校不重要，重要的是有能力完成您交给我的工作，我接受了XX的职业培训，掌握的技能完全可以胜任贵公司现在工作，而且我比一些名牌院校的应届毕业生的动手能力还要强，我想我更适合贵公司这个职位。</p><h2 id="怎样看待学历和能力"><a href="#怎样看待学历和能力" class="headerlink" title="怎样看待学历和能力?"></a>怎样看待学历和能力?</h2><p><strong>回答样本：</strong> 学历我想只要是大学专科的学历，就表明觉得我具备了根本的学习能力。剩下的，你是学士也好，还是博士也好，对于这一点的讨论，不是看你学了多少知识，而是看你在这个领域上发挥了什么，也就是所说的能力问题。一个人工作能力的高低直接决定其职场命运，而学历的高低只是进入一个企业的敲门砖，如果公司把学历卡在博士上我就无法进入贵公司，当然这不一定只是我个人的损失，如果一个专科生都能完成的工作，您又何必非要招聘一位博士生呢?</p><h2 id="谈谈如何适应办公室工作的新环境"><a href="#谈谈如何适应办公室工作的新环境" class="headerlink" title="谈谈如何适应办公室工作的新环境?"></a>谈谈如何适应办公室工作的新环境?</h2><p><strong>回答样本：</strong> ①办公室里每个人都有各自的岗位与职责，不得擅离岗位。②根据领导指示和工作安排，制定工作计划，提前预备，并按计划完成。③多请示并及时汇报，遇到不明白的要虚心请教。④抓间隙时间，多学习，努力提高自己的政治素质和业务水平。</p><h2 id="谈谈对这个职务的期许"><a href="#谈谈对这个职务的期许" class="headerlink" title="谈谈对这个职务的期许?"></a>谈谈对这个职务的期许?</h2><p><strong>回答提示：</strong> 回答前不妨先询问公司对这项职务的责任认定及归属，因为每一家公司的状况不尽相同，以免说了一堆理想抱负却发现牛头不对马嘴。</p><p><strong>回答样本：</strong> 希望能借此发挥我的所学及专长，同时也吸收贵公司在这方面的经验，就公司、我个人而言，缔造双赢的局面。</p><h2 id="何时可以到职"><a href="#何时可以到职" class="headerlink" title="何时可以到职?"></a>何时可以到职?</h2><p><strong>回答提示：</strong> 大多数企业会关心就职时间，最好是回答：“如果被录用的话，到职日可以按公司规定上班”，但是如果还未辞去上一个工作、上班时间又太近，似乎有些强人所难，因为交接至少要一个月的时间，应进一步说明原因，录取公司应该会通融的。</p>]]></content>
    
    
    <categories>
      
      <category>更多</category>
      
      <category>面试</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LG V30韩版 ROOT详细教程</title>
    <link href="/posts/18.html"/>
    <url>/posts/18.html</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2019年最火的洋垃圾LG V30，骁龙835cpu（从此告别发烧），4G内存，64G储存，能满足日用生活，能玩游戏，2k屏幕，hifi，极高的性价比。</p><span id="more"></span><h1 id="LG-V30韩版-ROOT详细教程"><a href="#LG-V30韩版-ROOT详细教程" class="headerlink" title="LG V30韩版 ROOT详细教程"></a>LG V30韩版 ROOT详细教程</h1><p>一个非常详细的视频教程，建议大家仔细观看，全部看懂了再来操作<br><a href="https://www.bilibili.com/video/av47071667">https://www.bilibili.com/video/av47071667</a><br>看视频刷机比较麻烦，我把视频整理成图文版的，包括命令这些，方便机友们刷机<br>需要的工具视频下面的评论里面都有的，大家可以先去下载</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="安装LG官方驱动"><a href="#安装LG官方驱动" class="headerlink" title="安装LG官方驱动"></a>安装LG官方驱动</h2><h2 id="安装LGUP刷机工具"><a href="#安装LGUP刷机工具" class="headerlink" title="安装LGUP刷机工具"></a>安装LGUP刷机工具</h2><p>把下载的modle和LGUP覆盖到安卓目录</p><h2 id="安装谷歌驱动"><a href="#安装谷歌驱动" class="headerlink" title="安装谷歌驱动"></a>安装谷歌驱动</h2><p>首先下载并打开此ADB工具箱<a href="http://pan.baidu.com/s/1nuHwTcP">http://pan.baidu.com/s/1nuHwTcP</a><br>在弹出的窗口中输入y并按回车，依次重复操作3 次</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223193123.png"></p><h1 id="混刷-h930的kdz"><a href="#混刷-h930的kdz" class="headerlink" title="混刷 h930的kdz"></a>混刷 h930的kdz</h1><p>手机拔掉sim卡，断开wifi，退出google账户，设置，常规，关于手机，软件信息，连续点击内部版本号开启开发人员选项。<br>进入开发人员选项，点击启用OEM解锁，和USB调试，手机关机。关机后，按住音量+，插入已经连接电脑的USB线，手机会进入download 刷机模式<br>右键点击LGUP软件，选择以管理员身份运行，</p><p> <img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223132526.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223132704.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223132846.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223132942.png"></p><p>刷完之后会卡LOGO</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223133059.png"></p><p>按住音量减和电源键 8秒以上，会闪屏一下，当LOGO出现后，立刻松开，再重新按住关机键，直到出现data peset界面，才松开。用音量键选择YES，按电源键 进入恢复出厂设置</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223133708.png"></p><p>开始硬格手机，格式完毕后，就可以进入系统，手机开机没有基带的，不能使用SIM卡，</p><h1 id="解锁BootLoader"><a href="#解锁BootLoader" class="headerlink" title="解锁BootLoader"></a>解锁BootLoader</h1><p>按照前面的教程打开设置进入开发者模式，启用OEM解锁，和USB调试，usb调成照片传输模式</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223134217.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223134343.png"></p><p>LG V30工具包里有命令的，我还是把命令贴这里，方便一些<br>输入命令<br>adb devices<br>勾选手机始终运行在此计算机上进行操作，点确定<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223160120.png"></p><p>adb reboot bootloader<br>—–进入了fastboot—–<br>fastboot flash unlock unlock.bin</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223160511.png"></p><p>fastboot reboot<br>—–解锁了BL并重启了手机—–<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223160704.png"></p><p>手机开机后，按照前面的教程打开设置进入开发者模式，启用OEM解锁，和USB调试，usb调成照片传输模式</p><p>输入<br>adb devices<br>adb reboot bootloader<br>fastboot getvar unlocked<br>出现 yes  就是解锁成功了。<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223161325.png"></p><p>—-进入fastboot以查看是否解锁—–</p><h1 id="root，备份欧版recovery"><a href="#root，备份欧版recovery" class="headerlink" title="root，备份欧版recovery"></a>root，备份欧版recovery</h1><p>fastboot boot TWRP.img<br>临时进入twrp，可以手机操作切换到中文<br>格式化分区<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223161714.png"><br>会出现红字 不用理</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223161820.png"></p><p>再清除 cache</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223162004.png"><br>也会出现红字，点击返回，点击重启bootloader</p><p>fastboot boot TWRP.img<br>再次进入twrp，电脑上可以显示手机存储了。把拷贝内存文件夹里面的三个文件复制粘贴到手机里面<br>依次刷入这三个文件，顺序不能乱，这次刷入没有出现红字。<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223162654.png"></p><p>接着备份欧版官方的recocery</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223162928.png"></p><p>备份好后，复制到电脑，重启手机到bootloader<br>输入<br>fastboot flash recovery TWRP.img<br>再次输入<br>fastboot boot TWRP.img<br>电脑上就可以看到手机储存了</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223163401.png"><br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223163523.png"></p><p>把里面的twrp文件夹复制到电脑，然后手机关机</p><h1 id="刷回韩版系统"><a href="#刷回韩版系统" class="headerlink" title="刷回韩版系统"></a>刷回韩版系统</h1><p>关机状态下，按住音量加 插入USB，就会进入刷机模式<br>右键点击LGUP，以管理员身份运行。</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223163954.png"></p><p>刷韩版的kdz系统<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223164216.png"></p><p>选分区的时候排除recovery，recoverybak两个分区，也就是不刷入官方recovery，因为韩版系统即使解锁bootloader也无法进入fastboot，也就无法刷入TWRP</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223164329.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223164450.png"></p><p>刷完，一般会进入TWRP，如果没有进去，就要从 混刷 h930的kdz 开始重新刷</p><p>刷完韩版系统，进入TWRP后<br>格式化data，再清除 cache，依次刷入<br>1_Magisk-v16.0<br>2_no-verity-opt-encrypt-6.0<br>3_lg-rctd-disabler-1.0(1)adb shell<br>刷完后把之前备份复制到电脑的欧版recocery，（带备份日期和时间的这个文件夹）复制到手机，从TWRP恢复。</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223174444.png"></p><p>恢复之后关机再开机，一般可以正常进系统，如果等10分钟还不能开机，就要重新执行工厂格式化开机</p><p>按住音量减和电源键 8秒以上，会闪屏一下，当LOGO出现后，立刻松开，再重新按住关机键，直到出现data peset界面，才松开。用音量键选择YES，按电源键 进入恢复出厂设置<br>按照前面的教程，并引用了之前的图片<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223133708.png"></p><p>开始硬格手机，格式完毕后，就可以进入系统<br>现在的系统状态是已解锁BL锁，有root权限<br>把TWEP.img文件复制到手机储存<br>打开开发者模式，开启adb调试<br>输入下面的命令<br>adb shell<br>su</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223175719.png"></p><p>手机点允许</p><p>dd if=/sdcard/TWRP.img of=/dev/block/bootdevice/by-name/recovery</p><h1 id="教程补充"><a href="#教程补充" class="headerlink" title="教程补充"></a>教程补充</h1><p>刷机前可以先备份基带再刷机</p><p>手机进入刷机模式（完全关机按住音量+插入数据线连接电脑）</p><p>右键管理员打开桌面“LG UP”。</p><p>先备份基带（备份xbl xbl2 modem分区） （机锋论坛浪大教程）</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223185115.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223185236.png"></p><p>以后要升级系统，可以从刷回韩版教程开始刷</p><p>在ADB和Fastboot工具的文件夹中，按住shift并右击空白处，选择“在此处打开Powershell窗口”（旧版Windows为命令提示符）<br>界面不同，但命令无区别）,进入命令行窗口。</p><h1 id="机锋精品教程"><a href="#机锋精品教程" class="headerlink" title="机锋精品教程"></a>机锋精品教程</h1><p> LG V30韩版解锁Bootloader+TWRP+韩版系统+root详细教程&amp;资源  （非常详细的刷机教程）<br> <a href="http://bbs.gfan.com/android-9493762-1-4.html">http://bbs.gfan.com/android-9493762-1-4.html</a></p><p>LG V30官方KDZ混刷教程<br><a href="http://bbs.gfan.com/android-9313407-1-1.html">http://bbs.gfan.com/android-9313407-1-1.html</a></p><p> LG V30解BL 安装TWRP及root详细教程<br> ttp://bbs.gfan.com/android-9313266-1-1.html</p><p>韩版刷机说明..防砖.刷第三方<br><a href="http://bbs.gfan.com/android-9561523-1-1.html">http://bbs.gfan.com/android-9561523-1-1.html</a></p><p> 韩版v300l，解锁+root+原生系统教程之五大步（补充）<br> <a href="http://bbs.gfan.com/android-9506755-1-1.html">http://bbs.gfan.com/android-9506755-1-1.html</a></p><p>LG V30目前可以通刷的版本说明<br><a href="http://bbs.gfan.com/android-9310017-1-3.html">http://bbs.gfan.com/android-9310017-1-3.html</a></p><p>【PIE+Volte】韩版移动电信成功开启Volte更新详细教程<br><a href="http://bbs.gfan.com/android-9618911-1-3.html">http://bbs.gfan.com/android-9618911-1-3.html</a></p><p>韩版用户折腾经验分享<br><a href="http://bbs.gfan.com/android-9492238-1-6.html">http://bbs.gfan.com/android-9492238-1-6.html</a></p><p>俄罗斯论坛LG V30刷机固件下载<br><a href="http://4pda.ru/forum/index.php?showtopic=902834">http://4pda.ru/forum/index.php?showtopic=902834</a></p><p>看下载量 Dot OS 这个不错 也是官方的，比较稳定，其他rom应该也不错的。<br>8.1<br><a href="https://forum.xda-developers.com/lg-v30/development/rom-dotos-v2-2-t37984419.0">https://forum.xda-developers.com/lg-v30/development/rom-dotos-v2-2-t37984419.0</a></p><p>9.0<br><a href="https://forum.xda-developers.com/lg-v30/development/rom-pie-dot-os-3-0-t3908490">https://forum.xda-developers.com/lg-v30/development/rom-pie-dot-os-3-0-t3908490</a></p><p>LG-US998 20D ROM 常用底包 里面有解锁的相关链接<br><a href="https://forum.xda-developers.com/lg-v30/development/rom-lg-us998-20d-rom-t3830318">https://forum.xda-developers.com/lg-v30/development/rom-lg-us998-20d-rom-t3830318</a></p>]]></content>
    
    
    <categories>
      
      <category>安卓手机</category>
      
      <category>LG V30</category>
      
      <category>刷机</category>
      
      <category>root</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓手机</tag>
      
      <tag>LG V30</tag>
      
      <tag>刷机</tag>
      
      <tag>root</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决安卓手机卡顿 安装google商店官方软件的方法</title>
    <link href="/posts/17.html"/>
    <url>/posts/17.html</url>
    
    <content type="html"><![CDATA[<p>下载play.google.com商店软件的方法<br>国内安卓软件多数都是比较流氓，内存占用大，弹广告，要想手机流畅运行，建议尽量使用google商店下载的软件。</p><p>下面提到的所以资源可以到蓝奏云网盘下载，无广告，速度飞快</p><span id="more"></span><p><a href="https://www.lanzous.com/b059xemze">https://www.lanzous.com/b059xemze</a></p><h1 id="下载国际版安卓软件最简单的方法"><a href="#下载国际版安卓软件最简单的方法" class="headerlink" title="下载国际版安卓软件最简单的方法"></a>下载国际版安卓软件最简单的方法</h1><h2 id="下载setupvpn-4-6-2-apk-安装好，注册，登陆，切换外郭ip"><a href="#下载setupvpn-4-6-2-apk-安装好，注册，登陆，切换外郭ip" class="headerlink" title="下载setupvpn_4.6.2.apk 安装好，注册，登陆，切换外郭ip"></a>下载setupvpn_4.6.2.apk 安装好，注册，登陆，切换外郭ip</h2><h2 id="下载-APKPure-v3-15-1-apkpure-com-apk-安装"><a href="#下载-APKPure-v3-15-1-apkpure-com-apk-安装" class="headerlink" title="下载 APKPure_v3.15.1_apkpure.com.apk  安装"></a>下载 APKPure_v3.15.1_apkpure.com.apk  安装</h2><p>就可以在APKPure中下载到国际版的软件，值得一提的是，所以软件都有历史版本下载，特别要提的是微信，新版的非常卡顿，老版的又不给登陆。</p><h1 id="下面介绍几个可以登陆旧版本微信的方法给大家。"><a href="#下面介绍几个可以登陆旧版本微信的方法给大家。" class="headerlink" title="下面介绍几个可以登陆旧版本微信的方法给大家。"></a>下面介绍几个可以登陆旧版本微信的方法给大家。</h1><h2 id="方法一、安装新版的微信（国际版），正常登陆"><a href="#方法一、安装新版的微信（国际版），正常登陆" class="headerlink" title="方法一、安装新版的微信（国际版），正常登陆"></a>方法一、安装新版的微信（国际版），正常登陆</h2><h3 id="下载-Terminal-Emulator-for-Android-97ef8922-apk-安装-这个是安卓手机的终端模拟器"><a href="#下载-Terminal-Emulator-for-Android-97ef8922-apk-安装-这个是安卓手机的终端模拟器" class="headerlink" title="下载 Terminal_Emulator_for_Android_97ef8922.apk 安装  这个是安卓手机的终端模拟器"></a>下载 Terminal_Emulator_for_Android_97ef8922.apk 安装  这个是安卓手机的终端模拟器</h3><p>输入   su<br>输入   pm uninstall -k com.tencent.mm</p><p>下载微信6.5.23（国际版）很多网友反映6.6微信开始卡顿，所以我选择6.5的最后一个版本，直接安装旧版本的微信，安装成功后，微信会提示错误，重新登陆就可以了。</p><h3 id="电脑有安装adb的朋友，可以电脑连接手机，adb依次输入下面的命令"><a href="#电脑有安装adb的朋友，可以电脑连接手机，adb依次输入下面的命令" class="headerlink" title="电脑有安装adb的朋友，可以电脑连接手机，adb依次输入下面的命令"></a>电脑有安装adb的朋友，可以电脑连接手机，adb依次输入下面的命令</h3><p>adb shell<br>su<br>pm uninstall -k com.tencent.mm</p><p>下载微信6.5.23（国际版）很多网友反映6.6微信开始卡顿，所以我选择6.5的最后一个版本，直接安装旧版本的微信，安装成功后，微信会提示错误，重新登陆就可以了。</p><h2 id="方法二、下载安装核心破解，禁用签名认证…随意升降级安装"><a href="#方法二、下载安装核心破解，禁用签名认证…随意升降级安装" class="headerlink" title="方法二、下载安装核心破解，禁用签名认证…随意升降级安装"></a>方法二、下载安装核心破解，禁用签名认证…随意升降级安装</h2><h2 id="方法三、装上微信最新国际版本-登陆，用钛备份备份-卸载微信-再装上老版本-再用钛备份还原date-启动微信的时候再重新要求输入密码-这样就成了"><a href="#方法三、装上微信最新国际版本-登陆，用钛备份备份-卸载微信-再装上老版本-再用钛备份还原date-启动微信的时候再重新要求输入密码-这样就成了" class="headerlink" title="方法三、装上微信最新国际版本,登陆，用钛备份备份.卸载微信,再装上老版本,再用钛备份还原date.启动微信的时候再重新要求输入密码,这样就成了"></a>方法三、装上微信最新国际版本,登陆，用钛备份备份.卸载微信,再装上老版本,再用钛备份还原date.启动微信的时候再重新要求输入密码,这样就成了</h2><h1 id="新增几个直接下载谷歌商店软件的网站"><a href="#新增几个直接下载谷歌商店软件的网站" class="headerlink" title="新增几个直接下载谷歌商店软件的网站"></a>新增几个直接下载谷歌商店软件的网站</h1><p><a href="https://apkcombo.com/zh-cn">https://apkcombo.com/zh-cn</a></p><p><a href="https://apkdl.in/">https://apkdl.in/</a></p><p><a href="https://www.apkturbo.com/">https://www.apkturbo.com/</a></p><p><a href="https://www.ourplay.net/">https://www.ourplay.net/</a></p><h1 id="以下资源暂时失效"><a href="#以下资源暂时失效" class="headerlink" title="以下资源暂时失效"></a>以下资源暂时失效</h1><p>下面我做一个教程教大家下载google商店的软件。<br>下载chrome 谷歌浏览器，这个百度一下就有的。<br>下载谷歌助手，访问谷歌商店需要这个<br><a href="https://www.lanzous.com/b059xemze">https://www.lanzous.com/b059xemze</a></p><p>点击谷歌浏览器右上角的三个小点，点更多工具，点扩展程序，点右上角的开发者模式，将下载的google助手拖进浏览器，点击打开google 助手的开关</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223114314.png"></p><p>这个个时候，我们就可以访问谷歌商店了<br><a href="https://play.google.com/">https://play.google.com/</a><br>安装下载软件的插件 APK Downloader<br><a href="https://chrome.google.com/webstore/search/%20APK%20Downloader?hl=zh-CN">https://chrome.google.com/webstore/search/%20APK%20Downloader?hl=zh-CN</a><br>第一个就是，点击添加至chrome<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223114517.png"></p><p>以下载支付宝为例</p><p>在<a href="https://play.google.com/">https://play.google.com/</a> 搜索支付宝<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223114641.png"><br>复制地址栏的地址<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223114746.png"><br>打开APK Downloader<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223115247.png"><br>将刚刚复制的支付宝的地址粘贴到这里<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223115404.png"><br>点击generate download link</p><p>会出现一个二维码，大家可以用手机扫这个二维码<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191223115650.png"><br>扫描后会一般会出现三个版本信息，一般建议用最新版的</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/681577073583_.pic.jpg"></p><p>点击 10.1.84.474.apk，就可以下载的。<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/691577073585_.pic.jpg"></p><p>为了方便大家，我把一些常用的软件下载的二维码贴出来，直接扫描二维码就可以下载的</p><p>微信<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/%E5%BE%AE%E4%BF%A1.png"></p><p>支付宝</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/zfb.png"></p><p>淘宝<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/taobao.png"></p><p>咸鱼</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/xianyu.png"></p><p>京东</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/jd.png"></p><p>微博</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/weibo.png"></p><p>什么值得买</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/smzdm.png"></p><p>via浏览器</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/via.png"></p><p>kiwi 浏览器</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/kiwi.png"></p><p>yandex 浏览器</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/Yandex.png"></p><p>eage浏览器</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/eage.png"></p><p>火狐浏览器</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/fiefox.png"></p><p>qq</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/qq2.png"></p><p>微云</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/weiyun.png"></p><p>OneDrive</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/OneDrive2.png"></p><p>mega网盘</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/mega.png"></p><p>有道云</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/youdaoyun.png"></p><p>今日头条</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/toutiao.png"></p><p>老王</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/laowangvpn.png"></p><p>高德地图</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/gaodeditu.png"></p><p>百度地图</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/baiduditu.png"></p><p>携程</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/xiecheng.png"></p><p>去哪儿</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/qunaer.png"></p>]]></content>
    
    
    <categories>
      
      <category>安卓手机</category>
      
      <category>安卓软件</category>
      
      <category>APK Downloader</category>
      
      <category>cheome插件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓手机</tag>
      
      <tag>安卓软件</tag>
      
      <tag>APK Downloader</tag>
      
      <tag>cheome插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>黑苹果给安卓手机刷入twrp recovery教程</title>
    <link href="/posts/16.html"/>
    <url>/posts/16.html</url>
    
    <content type="html"><![CDATA[<h1 id="手机设置"><a href="#手机设置" class="headerlink" title="手机设置"></a>手机设置</h1><p>点击设置，系统，关机手机，版本号联系点击三下，进入开发者模式，找到开发者选项，打开OME解锁，打开Android调试，打开网络ADB调试。</p><span id="more"></span><h1 id="下载twrp"><a href="#下载twrp" class="headerlink" title="下载twrp"></a>下载twrp</h1><p> 下面以lgnexus5x为例<br> <a href="https://twrp.me/lg/lgnexus5x.html">https://twrp.me/lg/lgnexus5x.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191218000645.png"></p><p>下载最新的<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191218000719.png"></p><h1 id="安装-ADB-和-Fastboot-工具"><a href="#安装-ADB-和-Fastboot-工具" class="headerlink" title="安装 ADB 和 Fastboot 工具"></a>安装 ADB 和 Fastboot 工具</h1><p>点击下载platform-tools<br><a href="https://dl.google.com/android/repository/platform-tools-latest-darwin.zip">https://dl.google.com/android/repository/platform-tools-latest-darwin.zip</a><br>解压后放在一个方便使用的位置，英文名字的文件夹<br>打开终端，用 cd 命令进入 SDK 目录的 platform-tools 文件夹。即 输入 cd 和一个空格，后面输入文件夹路径，也可以直接拖拽文件夹进终端。下面是我的路径存放地址示例：<br>cd ~/desktop/az/platform-tools</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191218001247.png"></p><p>文件夹路径可以直接使用快捷键win+ alt + C来复制，粘贴当然还是`win + V</p><p>把 ADB 拷贝到系统，回车后继续输入你的密码。密码是隐藏的，输入完毕，回车就行<br>sudo cp adb /usr/bin/adb<br>把 Fastboot 也复制进来<br>sudo cp fastboot /usr/bin/fastboot</p><h1 id="刷入第三方-Recovery-（以-TWRP-为例）"><a href="#刷入第三方-Recovery-（以-TWRP-为例）" class="headerlink" title="刷入第三方 Recovery （以 TWRP 为例）"></a>刷入第三方 Recovery （以 TWRP 为例）</h1><p>手机关机，按住音量减号键+开机键 进入bootloader刷机模式，（或者在终端输入adb reboot bootloader）<br>手机用USB线连接电脑（尽量用原装线，台式机尽量插机箱后面的USB接口）<br>cd ~/desktop/az/platform-tools    （这个是我的platform-tools存放的路径，你可以自己设置的哈）<br>有两个方法可以刷入的</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>输入 fastboot flash recovery<br>把recovery文件img结尾的拖入命令后，留意空格哈<br>如果无法刷入recovery，建议使用这个命令sudo fastboot flash recovery<br>这个刷好recovery无法自动重启，可以长按关机键关机，再安装音量加+开机键十秒左右，一般就会进入recovery<br>实在没有进入，可以手机开机，输入命令 adb reboot recovery</p><p>把下载好的文件twrp文件放到platform-tools 并重新命名为twrp.img</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>把下载好的文件twrp文件放到platform-tools 并重新命名为twrp.img<br>输入 fastboot flash recovery twrp.img<br>再输入命令<br>fastboot boot twrp.img<br>正常手机就会重启到recovery 模式了，就可以进入里面刷机了。</p><h1 id="终端相关的命令解释"><a href="#终端相关的命令解释" class="headerlink" title="终端相关的命令解释"></a>终端相关的命令解释</h1><p>adb reboot bootloader<br>进入手机刷机模式bootloader</p><p>adb reboot recovery<br>进入手机恢复模式recovery</p><p>adb reboot system<br>进入手机系统</p>]]></content>
    
    
    <categories>
      
      <category>安卓手机</category>
      
      <category>twrp</category>
      
      <category>recovery</category>
      
      <category>黑苹果</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓手机</tag>
      
      <tag>twrp</tag>
      
      <tag>recovery</tag>
      
      <tag>黑苹果</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>支付宝通过三星健康修改步数的教程和注意事项</title>
    <link href="/posts/15.html"/>
    <url>/posts/15.html</url>
    
    <content type="html"><![CDATA[<h2 id="支付宝通过三星健康修改步数的教程和注意事项"><a href="#支付宝通过三星健康修改步数的教程和注意事项" class="headerlink" title="支付宝通过三星健康修改步数的教程和注意事项"></a>支付宝通过三星健康修改步数的教程和注意事项</h2><p>全部软件下载地址（担心以后新版的支付宝不能同步，所以在网盘也放了最近的三个支付宝，酷安下载的）<br><a href="https://www.lanzous.com/b059xem4d">https://www.lanzous.com/b059xem4d</a></p><span id="more"></span><h1 id="安卓8，安卓9，安卓10安装edxposed"><a href="#安卓8，安卓9，安卓10安装edxposed" class="headerlink" title="安卓8，安卓9，安卓10安装edxposed"></a>安卓8，安卓9，安卓10安装edxposed</h1><p>下载MagiskManager-v7.4.0.apk<br>下载Magisk-v20.1.zip<br>下载应用变量旧版本 com.sollyu.xposed.hook.model-3.2.10.ef7885b-0-13665-841308-coolapk.apk<br>下载三星步数管理.apk<br>下载三星健康.apk</p><p>在twrp刷入Magisk-v20.1.zip<br>手机开机<br>安装Magisk Manager v7.4<br>在magisk中安装好riru-core，再安装riru edxposed<br>在酷安下载安装edxposed installer<br>安装支付宝，安装三星步数管理.apk，安装下载三星健康.apk<br>打开edxposed  在模块中勾选应用变量 3.2.10.ef78856<br>重启手机</p><h1 id="安卓6，安卓7安装xposed"><a href="#安卓6，安卓7安装xposed" class="headerlink" title="安卓6，安卓7安装xposed"></a>安卓6，安卓7安装xposed</h1><p>下载MagiskManager-v7.4.0.apk<br>下载Magisk-v20.1.zip<br>下载XposedInstaller_3.1.5-Magisk.apk<br>下载应用变量旧版本 com.sollyu.xposed.hook.model-3.2.10.ef7885b-0-13665-841308-coolapk.apk<br>下载三星步数管理.apk<br>下载三星健康.apk在twrp刷入Magisk-v20.1.zip<br>手机开机<br>安装Magisk Manager v7.4<br>在magisk中安装xposed framework<br>手机开机安装XposedInstaller_3.1.5-Magisk.apk<br>打开xposed  在模块中勾选应用变量 3.2.10.ef78856<br>重启手机</p><h1 id="下面开始软件设置"><a href="#下面开始软件设置" class="headerlink" title="下面开始软件设置"></a>下面开始软件设置</h1><h2 id="打开应用变量"><a href="#打开应用变量" class="headerlink" title="打开应用变量"></a>打开应用变量</h2><p>点击支付宝<br>手机厂商选择samsung<br>手机型号选择Galaxy S8<br>手机序号选择随机<br>手机版本随便选一个<br>其他的不用填<br>点击三星健康<br>手机厂商选择samsung<br>手机型号选择Galaxy S8<br>手机序号选择随机<br>手机版本随便选一个</p><h2 id="打开三星健康"><a href="#打开三星健康" class="headerlink" title="打开三星健康"></a>打开三星健康</h2><p>点击右上角的三角点，点击设置，点击关于三星健康在版本号那里点击10次以上，进如开发者模式，前面会出现（Developer Mode）<br>点击数据权限，点击支付宝，里面的全打开，点击三星健康步数管理，里面的全打开<br>如果找不到支付宝或者三星健康步数管理，需先打开支付宝和三星健康步数管理，再打开三星健康，就可以看到了。</p><h2 id="打开三星健康步数管理"><a href="#打开三星健康步数管理" class="headerlink" title="打开三星健康步数管理"></a>打开三星健康步数管理</h2><p>点右上角的三个小点，点连接到三星健康<br>点右下角的+号，可以自定义加多少步</p><h2 id="打开支付宝"><a href="#打开支付宝" class="headerlink" title="打开支付宝"></a>打开支付宝</h2><p>点击运动，点右上角上小点，点设置点击记录运动数据，选择三星健康，就可以了。</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>第一次同步很快，后面同步数据大概要十几二十分钟。<br>加速要快，我一般连续点两次加1万步，再点一个自定义几十步，整数不好看。<br>当天加步要在下午四点前完成，下午四点后加的步会自动加到第二天。<br>网友反映经常会有步数不能同步的问题，经过很多次试验，终于找到解决这个问题的方法，担心流传开会失效，暂时不公开，有需要理解的朋友可以加我微信咨询。</p>]]></content>
    
    
    <categories>
      
      <category>支付宝运动</category>
      
      <category>三星健康</category>
      
      <category>xposed</category>
      
      <category>edxposed</category>
      
    </categories>
    
    
    <tags>
      
      <tag>edxposed</tag>
      
      <tag>支付宝运动</tag>
      
      <tag>三星健康</tag>
      
      <tag>xposed</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小白电脑安装windows系统，linxu和黑苹果的相关资料</title>
    <link href="/posts/14.html"/>
    <url>/posts/14.html</url>
    
    <content type="html"><![CDATA[<p>电脑安装系统必备<br>操作系统下载<br>官方系统</p><span id="more"></span><p><a href="http://msdn.itellyou.cn/">http://msdn.itellyou.cn/</a><br><a href="https://tb.rg-adguard.net/public.php">https://tb.rg-adguard.net/public.php</a>  </p><p>第三方系统<br><a href="http://twm000.top/">http://twm000.top/</a><br><a href="http://www.uqi.me/">http://www.uqi.me/</a><br><a href="https://icura.cn/">https://icura.cn/</a><br>PE<br><a href="http://www.wepe.com.cn/">http://www.wepe.com.cn/</a><br><a href="https://www.itsk.com/topic-software.html">https://www.itsk.com/topic-software.html</a><br><a href="http://www.myfeng.cn/">http://www.myfeng.cn/</a><br>驱动<br><a href="https://www.sysceo.com/">https://www.sysceo.com/</a><br><a href="https://www.160.com/">https://www.160.com/</a><br><a href="http://www.drivergenius.com/">http://www.drivergenius.com/</a><br><a href="http://weishi.360.cn/qudongdashi/index.html">http://weishi.360.cn/qudongdashi/index.html</a><br><a href="https://www.ludashi.com/">https://www.ludashi.com/</a><br>系统激活<br><a href="http://twm000.ys168.com/">http://twm000.ys168.com/</a>  </p><p>精品软件下载<br><a href="https://www.landiannews.com/">https://www.landiannews.com/</a><br><a href="https://www.appcgn.com/">https://www.appcgn.com/</a><br><a href="https://www.repaik.com/">https://www.repaik.com/</a><br><a href="http://www.carrotchou.blog/">http://www.carrotchou.blog/</a><br><a href="https://www.ccava.net/">https://www.ccava.net/</a><br><a href="https://www.luochenzhimu.com/">https://www.luochenzhimu.com/</a><br><a href="https://hrtsea.com/">https://hrtsea.com/</a></p><p>国产杀毒推荐<br><a href="https://www.huorong.cn/">https://www.huorong.cn/</a><br><a href="https://www.wisevector.com/">https://www.wisevector.com/</a><br>杀毒论坛推荐<br><a href="https://bbs.kafan.cn/">https://bbs.kafan.cn/</a></p><p>黑苹果教程网站<br><a href="http://bbs.pcbeta.com/">http://bbs.pcbeta.com/</a><br><a href="https://blog.daliansky.net/">https://blog.daliansky.net/</a><br><a href="https://www.tonymacx86.com/">https://www.tonymacx86.com/</a><br><a href="http://www.insanelymac.com/">http://www.insanelymac.com/</a><br><a href="https://osxlatitude.com/">https://osxlatitude.com/</a>  </p><p>mac软件下载<br> <a href="http://www.pc6.com/mac/soft/">http://www.pc6.com/mac/soft/</a><br> <a href="https://www.macbl.com/">https://www.macbl.com/</a><br> <a href="https://www.macdo.cn/">https://www.macdo.cn/</a></p><p>linxu<br><a href="https://www.deepin.org/">https://www.deepin.org/</a><br><a href="https://ubuntu.com/download">https://ubuntu.com/download</a><br><a href="https://www.debian.org/">https://www.debian.org</a><br><a href="https://www.manjaro.cn/153">https://www.manjaro.cn/153</a><br><a href="https://bbs.archlinuxcn.org/">https://bbs.archlinuxcn.org/</a><br><a href="https://lubuntu.net/">https://lubuntu.net/</a><br><a href="https://elementaryos.cn/">https://elementaryos.cn/</a>  </p>]]></content>
    
    
    <categories>
      
      <category>电脑软件</category>
      
      <category>电脑系统</category>
      
      <category>PE</category>
      
      <category>驱动</category>
      
      <category>mac</category>
      
      <category>黑苹果</category>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>黑苹果</tag>
      
      <tag>linux</tag>
      
      <tag>电脑软件</tag>
      
      <tag>电脑系统</tag>
      
      <tag>PE</tag>
      
      <tag>驱动</tag>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图床搭建的最佳选择 PicGo + Github + Jsdelivr免费公用CDN加速.</title>
    <link href="/posts/12.html"/>
    <url>/posts/12.html</url>
    
    <content type="html"><![CDATA[<p><strong>图床搭建的最佳选择 PicGo + Github + Jsdelivr免费公用CDN加速</strong></p><h1 id="Github创建仓库"><a href="#Github创建仓库" class="headerlink" title="Github创建仓库"></a>Github创建仓库</h1><h2 id="点击-New-repository"><a href="#点击-New-repository" class="headerlink" title="点击 New repository"></a>点击 New repository</h2><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/0.png"></p><h2 id="创建好后，获取Token"><a href="#创建好后，获取Token" class="headerlink" title="创建好后，获取Token"></a>创建好后，获取Token</h2><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/2.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/3.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/4.png"></p><h2 id="这个Token只出现一次的，一定要记得复制好，pico设置要用到的"><a href="#这个Token只出现一次的，一定要记得复制好，pico设置要用到的" class="headerlink" title="这个Token只出现一次的，一定要记得复制好，pico设置要用到的"></a>这个Token只出现一次的，一定要记得复制好，pico设置要用到的</h2><h1 id="下载picgo"><a href="#下载picgo" class="headerlink" title="下载picgo"></a>下载picgo</h1><p><a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p><p>我使用的是黑苹果，下载PicGo-2.1.2.dmg<br>安装好后，在屏幕右上角会有一个标志，右键打开详细窗口</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/5.png"></p><p>设定仓库名：waimao8/image   （你设置成你自己的哈）<br>分支名一般是master   （默认建议这个）<br>存储的路径：img         （可以不填我没有填）<br>设定自定义域名：可以不填使用默认的，但是Github服务器在外国，访问速度不太理想，我们可以通过Jsdelivr免费公用CDN加速来加速图片是访问速度<br>所以我设置成<br><a href="https://cdn.jsdelivr.net/gh/waimao8/image@master">https://cdn.jsdelivr.net/gh/waimao8/image@master</a></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191213175919.png"></p><p>记得点设为默认图床哦！</p><h1 id="顺便介绍下这篇文件的制作过程"><a href="#顺便介绍下这篇文件的制作过程" class="headerlink" title="顺便介绍下这篇文件的制作过程"></a>顺便介绍下这篇文件的制作过程</h1><p>打开 <a href="http://marxi.co/">http://marxi.co/</a><br>登陆微信<br>默认截图的快捷键ctrl+win+A，选择截图后，<br>点击shift+win+p<br>截图会自动通过Picgo上传到Github上面了，直接粘贴到文章就可以了，真的是非常方便！</p><p>笔记本屏幕太小，我外接了显示器，发现点击shift+win+p后，上次图片失败，<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191213175553.png">百度了一下相关的教程<br>打开mac的系统偏好设置，点击显示器，点击颜色，选择普通RGB描述文件，就可以了。</p>]]></content>
    
    
    <categories>
      
      <category>Github</category>
      
      <category>hexo</category>
      
      <category>PicGo</category>
      
      <category>Jsdelivr</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>Github</tag>
      
      <tag>PicGo</tag>
      
      <tag>Jsdelivr</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nexus 5X手机在支付宝的蚂蚁森林自动收能量的过程.</title>
    <link href="/posts/11.html"/>
    <url>/posts/11.html</url>
    
    <content type="html"><![CDATA[<h1 id="下载刷机包"><a href="#下载刷机包" class="headerlink" title="下载刷机包"></a>下载刷机包</h1><p><a href="https://downloads.aospextended.com/bullhead">https://downloads.aospextended.com/bullhead</a></p><p>个人觉得aospextended的rom比较省电，其他刷机包或者不刷机也是可以的，只要是手机不能杀支付宝的后台就行，如果需要用都省电模式，要在省电模式里面排除支付宝。</p><span id="more"></span><h1 id="下载twrp"><a href="#下载twrp" class="headerlink" title="下载twrp"></a>下载twrp</h1><p><a href="https://twrp.me/lg/lgnexus5x.html">https://twrp.me/lg/lgnexus5x.html</a></p><h1 id="下载magisk"><a href="#下载magisk" class="headerlink" title="下载magisk"></a>下载magisk</h1><p><a href="https://t00y.com/file/22940096-413054846">下载MagiskManager-v7.4.0.apk</a></p><p><a href="https://t00y.com/file/22940096-413054839">下载Magisk-v20.1.zip</a><br><a href="https://t00y.com/file/22940096-413054839">https://t00y.com/file/22940096-413054839</a><br>刷入twrp<br>在twrp中四清，刷入aospextended的刷机包<br>在twrp中刷入Magisk-v20.1.zip</p><p>手机开机<br>安装Magisk Manager v7.4<br>在magisk中安装好riru-core，再安装riru edxposed<br>在酷安下载安装edxposed installer </p><!-- more --><h1 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h1><p>下载插件<a href="https://t00y.com/file/22940096-413054804">小鸡炖蘑菇</a><br>或者<a href="https://t00y.com/file/22940096-413054745">XQuickEnergy</a><br>安装后，在edxposed软件中勾选插件，重启手机，打开支付宝，就可以通过上面两个插件设置自动收取能量了，记得，支付宝不可以退出哦！</p><h1 id="下载tasker软件设定自动打开支付宝"><a href="#下载tasker软件设定自动打开支付宝" class="headerlink" title="下载tasker软件设定自动打开支付宝"></a>下载tasker软件设定自动打开支付宝</h1><p>点击任务，新建任务，命名打开支付宝，点+号。点程序，点启动应用，点支付宝。点配置文件，点+号，点时间，点从上午6点到凌晨1点，点每30分钟。点击打开支付宝，就完成了设置，这样即使支付宝后天即使被关闭了，每30分钟也会自动打开一次，时间都是可以自己设置的。十分钟打开一次也可以，一个小时打开一次也行，主要是看支付宝多久会被杀后台。</p>]]></content>
    
    
    <categories>
      
      <category>安卓手机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓手机</tag>
      
      <tag>magisk</tag>
      
      <tag>edxposed</tag>
      
      <tag>XQuickEnergy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>百度网盘不限速下载的一些方法</title>
    <link href="/posts/10.html"/>
    <url>/posts/10.html</url>
    
    <content type="html"><![CDATA[<h1 id="ENFI"><a href="#ENFI" class="headerlink" title="ENFI"></a>ENFI</h1><p>下载地址 <a href="http://www.enfi.cloud/">http://www.enfi.cloud/</a>  需要搭配enfi下载助手<br>用P2P下载技术，支持HTTP，BT，磁力链等各种协议，高速下载让你摆脱限速的困扰，从此告别低速<br>这个可以挂机赚钱的，本人测试黑苹果笔记本戴尔E6430用的无线wifi2.4的网络，50M的东莞联通宽带，显示当前网络能力25.2M，估计一天收入预计4388积分，一元可以买10000积分。一积分可以加速1M的下载，加速测试下载速度在每秒6M左右，还是不错的。<br>具体收益大小还和上传带宽大小有关，比如上传带宽是65.98Mbps，那么预计一天的收益大概是28800积分（大约是2.9元，1元=10000积分），挂机一天就有50G流量，足够普通人使用一个月了。</p><span id="more"></span><p>教程参考<br><a href="https://www.macdo.cn/23833.html">https://www.macdo.cn/23833.html</a></p><h1 id="百度网盘不限速下载器-BND-下载地址"><a href="#百度网盘不限速下载器-BND-下载地址" class="headerlink" title="百度网盘不限速下载器 BND 下载地址"></a>百度网盘不限速下载器 BND 下载地址</h1><p>利用baiduPCS-Web搭建的，个人下载500M以下使用。速度1M左右，超过500M下载会限速到200K左右，大文件下载不建议使用，下载过程中尽量不要暂停或者停止，可能会导致后面不能下载，如果限速或者不能下载了，请切换自己的其他百度账号使用。<br><a href="https://hacpai.com/article/1563154719934">https://hacpai.com/article/1563154719934</a></p><h1 id="Motrix-全能下载工具"><a href="#Motrix-全能下载工具" class="headerlink" title="Motrix 全能下载工具"></a>Motrix 全能下载工具</h1><p>Motrix 是一款开源免费且界面非常清爽简约的全能型下载软件，它跨平台支持 Windows、Mac、Linux 三大系统，可以支持下载 HTTP、FTP、BT、磁力链接以及下载百度网盘等资源</p><p>个人使用，下载速度在每秒130K左右，速度不快，可以续传，个人感觉比百度网盘客户端好用些</p><p>教程参考 <a href="https://www.macdo.cn/21811.html">https://www.macdo.cn/21811.html</a></p><h1 id="Aria2百度云加速下载器"><a href="#Aria2百度云加速下载器" class="headerlink" title="Aria2百度云加速下载器"></a>Aria2百度云加速下载器</h1><h2 id="下载Aria2GUI客户端"><a href="#下载Aria2GUI客户端" class="headerlink" title="下载Aria2GUI客户端"></a>下载Aria2GUI客户端</h2><p>地址：<a href="https://github.com/yangshun1029/aria2gui/releases#">https://github.com/yangshun1029/aria2gui/releases#</a> BaiduPCS-Web</p><h2 id="下载chrome插件：网盘助手，这里记得整个文件都要保存下来"><a href="#下载chrome插件：网盘助手，这里记得整个文件都要保存下来" class="headerlink" title="下载chrome插件：网盘助手，这里记得整个文件都要保存下来"></a>下载chrome插件：网盘助手，这里记得整个文件都要保存下来</h2><p>地址：<a href="https://github.com/acgotaku/BaiduExporter#">https://github.com/acgotaku/BaiduExporter#</a> </p><h2 id="浏览器上安装插件："><a href="#浏览器上安装插件：" class="headerlink" title="浏览器上安装插件："></a>浏览器上安装插件：</h2><p>把下载下来的BaiduExporter.crx文件拖拽到chrome的扩展程序里面。<br>百度网盘文件下载时，使用Chrome打开百度网盘，选择文件，点击导出下载 ，导出下载前需要先打开 Aria2 ，选择 ARIA2 RPC 即可</p><h1 id="百度网盘直链下载助手"><a href="#百度网盘直链下载助手" class="headerlink" title="百度网盘直链下载助手"></a>百度网盘直链下载助手</h1><p>软件下载地址<br><a href="https://545c.com/dir/3994041-35240665-e1ea37">https://545c.com/dir/3994041-35240665-e1ea37</a></p><h1 id="其他插件有时行有时不行，比如下面的几款，大家可以去尝试"><a href="#其他插件有时行有时不行，比如下面的几款，大家可以去尝试" class="headerlink" title="其他插件有时行有时不行，比如下面的几款，大家可以去尝试"></a>其他插件有时行有时不行，比如下面的几款，大家可以去尝试</h1><h2 id="BaiduPCS-Web"><a href="#BaiduPCS-Web" class="headerlink" title="BaiduPCS-Web"></a>BaiduPCS-Web</h2><h2 id="Proxyee-Down"><a href="#Proxyee-Down" class="headerlink" title="Proxyee Down"></a>Proxyee Down</h2>]]></content>
    
    
    <categories>
      
      <category>电脑软件</category>
      
      <category>百度网盘下载</category>
      
    </categories>
    
    
    <tags>
      
      <tag>电脑软件</tag>
      
      <tag>百度网盘下载</tag>
      
      <tag>it软件</tag>
      
      <tag>百度网盘下载不限速</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>戴尔笔记本E6430安装黑苹果的全部过程</title>
    <link href="/posts/9.html"/>
    <url>/posts/9.html</url>
    
    <content type="html"><![CDATA[<h1 id="寻找EFI文件"><a href="#寻找EFI文件" class="headerlink" title="寻找EFI文件"></a>寻找EFI文件</h1><p>   从黑苹果长期维护机型 EFI 及安装教程整理<br>        <a href="https://www.jianshu.com/p/484f07b8c7fd">https://www.jianshu.com/p/484f07b8c7fd</a><br>        找到  <a href="https://github.com/kinoute/Hack-Dell-Latitude-E6430">https://github.com/kinoute/Hack-Dell-Latitude-E6430</a> 下载EFI文件夹<br>        <span id="more"></span></p><h1 id="下载系统"><a href="#下载系统" class="headerlink" title="下载系统"></a>下载系统</h1><p>从黑果小兵下载macOS Mojave 10.14.6，自带Clover的<br><a href="https://blog.daliansky.net/macOS-Mojave-10.14.6-18G87-Release-version-with-Clover-5033-original-image.html">https://blog.daliansky.net/macOS-Mojave-10.14.6-18G87-Release-version-with-Clover-5033-original-image.html</a></p><h1 id="制作启动U盘"><a href="#制作启动U盘" class="headerlink" title="制作启动U盘"></a>制作启动U盘</h1><p>下载etcher软件，<a href="https://www.balena.io/etcher">https://www.balena.io/etcher</a> 选择U盘，点击Flash即可。（10分钟左右）<br>      也可以用TransMac制作启动盘（比较麻烦），用管理员权限打开，在软件的左侧找到自己的U盘，然后右键 ，选择Formar Disk for Mac意思是将U盘格式化为Mac格式，然后右键选择Restore with Disk Image来将准备的dmg镜像写入到U盘中（要30分钟左右）</p><h1 id="替换EFI文件"><a href="#替换EFI文件" class="headerlink" title="替换EFI文件"></a>替换EFI文件</h1><p>​    拔下U盘重新插上，会发现有一个EFI文件夹，将里面的文件删除，把下载好的适合自己机型的EFI文件复制进去就可以了，如果找不到EFI文件夹，可以用DiskGenius读取，并强制删除里面的EFI文件，Ctrl+V粘贴自己的EFI文件夹  </p><h1 id="设置bios"><a href="#设置bios" class="headerlink" title="设置bios"></a>设置bios</h1><p>   拥有正确的BIOS版本后，请使用F12启动时的密钥进入BIOS 。单击“加载默认值”，然后将SATAOperations设置为AHCI，将Boot List Option设置为UEFI并禁用Secure Boot</p><h1 id="安装mac"><a href="#安装mac" class="headerlink" title="安装mac"></a>安装mac</h1><p>   参考 <a href="https://blog.daliansky.net/MacOS-installation-tutorial-XiaoMi-Pro-installation-process-records.html">https://blog.daliansky.net/MacOS-installation-tutorial-XiaoMi-Pro-installation-process-records.html</a></p><p>启动U盘插入电脑，开机按F12，选择USB启动安装程序，选择macOS Install、选择磁盘工具，点击左侧，切换到显示所有设备，然后找到我们要安装系统的硬盘，点击抹掉，名称随便写，格式选mac os扩展（日志式），方案选择GUID 分区图，点击抹掉。<br>安装Mac OS ，提示:应用程序副本不能验证 它在下载过程中可能已遭破坏或篡改<br>先关闭电脑的网络, 如关闭右上角的WIFI或者拔掉网线 然后在终端里面修改时间<br>请完全复制下面代码，按回车键确认:<br>date 122014102015.30<br>输入上面的代码按回车后返回的是 Sun Dec 20 14:10:30 PST 2015<br>其他就都简单了，都是中文的，第一次走完进度条后，会自动重启一次，整个安装过程大概20来分钟。<br>安装完成后，每次启动都是要从U盘启动的，要想设置成从电脑启动。我们需要下面的操作。</p><h1 id="将U盘内的EFI文件复制到电脑"><a href="#将U盘内的EFI文件复制到电脑" class="headerlink" title="将U盘内的EFI文件复制到电脑"></a>将U盘内的EFI文件复制到电脑</h1><p>查看磁盘分区表<br>diskutil list<br>挂载磁盘EFI分区<br>sudo diskutil mount disk0s1<br>挂载U盘EFI分区<br>sudo diskutil mount disk2s1<br>打开Finder，注意后面有个.<br>open .<br>电脑上会显示U盘和硬盘的EFI文件夹，将U盘的EFI文件复制到硬盘的EFI文件夹就可以拔掉U盘启动mac了</p>]]></content>
    
    
    <categories>
      
      <category>黑苹果</category>
      
    </categories>
    
    
    <tags>
      
      <tag>黑苹果</tag>
      
      <tag>lnmp</tag>
      
      <tag>Mac</tag>
      
      <tag>戴尔E6430</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>N1安装omv后安装docker+transmission+lnmp搭建网站</title>
    <link href="/posts/8.html"/>
    <url>/posts/8.html</url>
    
    <content type="html"><![CDATA[<p>N1安装好omv后，<br>进入系统，常规设置，修改web管理员密码，需要安装的lnmp搭建网站的话，还需要修改端口，自动登出时间可以设置为1天。<br>进入磁盘，文件管理，挂着ext4格式的U盘或者硬盘（其他格式的不能修改权限比如777 755等）</p><span id="more"></span><p>进入共享文件夹，设置共享，设置ftp nfs smb 等<br>进入omv-extars，打开docker ce<br>进入插件安装transmissionbt ，webdav docker<br>启动容器，设置路径数据盘，避免8G内存不够用</p><p>安装transmission-web 看官方的教程</p><p><a href="https://github.com/ronggang/transmission-web-control/wiki/Linux-Installation-CN">https://github.com/ronggang/transmission-web-control/wiki/Linux-Installation-CN</a></p><p>安装最新发布版本</p><!-- more --><p>docker安装portainer</p><blockquote><p>docker run -d -p 9888:9000 <br>–restart=always <br>-v /var/run/docker.sock:/var/run/docker.sock <br>–name prtainer-test <br>docker.io/portainer/portainer</p></blockquote><p>docker run -d -p 9888:9000 –restart=always –name portainer -v /var/run/docker.sock:/var/run/docker.sock -v /Users/lee/dev/docker_file/portainer/data:/data docker.io/portainer/portainer<br>安装lnmp（我试过通过docker安装deibian后安装lnmp和宝塔，omv是改过端口的，安装后omv还是打不开，所以我选择直接安装）<br>宝塔会占内存，经常安装出错，所以我选择安装lnmp无人值守安装<br><a href="https://lnmp.org/auto.html">https://lnmp.org/auto.html</a> 选择版本<br>无人值守安装命令：<br>wget <a href="http://soft.vpser.net/lnmp/lnmp1.6.tar.gz">http://soft.vpser.net/lnmp/lnmp1.6.tar.gz</a> -cO lnmp1.6.tar.gz &amp;&amp; tar zxf lnmp1.6.tar.gz &amp;&amp; cd lnmp1.6 &amp;&amp; LNMP_Auto=”y” DBSelect=”3” DB_Root_Password=”lnmp.org” InstallInnodb=”y” PHPSelect=”8” SelectMalloc=”1” ./install.sh lnmp<br>默认数据库密码是lnmp.org 大家可以先修改<br>一切都是自动的，大概要2个小时，安装好后，打开NI的ip<br>在首页可以看到 查看本地环境: 探针 phpinfo phpMyAdmin<br>再参考<br>LNMP添加、删除虚拟主机及伪静态使用教程<br><a href="https://lnmp.org/faq/lnmp-vhost-add-howto.html">https://lnmp.org/faq/lnmp-vhost-add-howto.html</a><br>安装好后，先停止 nginx<br>lnmp nginx stop<br>移动wwwroot文件夹到数据盘比如我的数据盘目录是/sharedfolders/2t/www<br>mv /home/wwwroot /sharedfolders/2t/www<br>将数据盘的wwwroot印射回/home/wwwroot<br>ln -s /sharedfolders/2t/www/wwwroot /home/wwwroot<br>这样网站的数据就不占N1的空间了，都是在外接的数据盘上面了（必须ext4格式）<br>添加域名后/home/wwwroot/目录回有一个域名的目录，在里面上传php程序安装，（比如我的这个博客typecho）</p><p>下面是lnmp相关的命令<br>添加主机</p><p>lnmp vhost add<br>修改添加的主机的端口<br>/usr/local/nginx/conf/vhost</p><p>重启lnmp start|stop|restart 启动停止重新启动</p><p>lnmp restart<br>lnmp nginx restart</p><p>列出网站(虚拟主机)<br>执行：lnmp vhost list</p><p>删除网站(虚拟主机)<br>执行：lnmp vhost del</p>]]></content>
    
    
    <categories>
      
      <category>斐讯N1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>斐讯N1</tag>
      
      <tag>omv</tag>
      
      <tag>docker</tag>
      
      <tag>lnmp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>斐讯N1安Armbian安装OMV安装nginx+mysql安装typecho全过程</title>
    <link href="/posts/7.html"/>
    <url>/posts/7.html</url>
    
    <content type="html"><![CDATA[<h1 id="安装armbian"><a href="#安装armbian" class="headerlink" title="安装armbian"></a>安装armbian</h1><p>测试了很多版本的Armbian+omv，OMV经常会报错，改用了XQ7的N1首个支持FullCone Nat的Armbian系统，非常好用<br>下面是链接<br><a href="https://www.right.com.cn/forum/thread-788004-1-1.html">https://www.right.com.cn/forum/thread-788004-1-1.html</a></p><span id="more"></span><p>ROM下载地址：链接：<a href="https://share.weiyun.com/5IsYMcO">https://share.weiyun.com/5IsYMcO</a> 密码：fop0i5<br>需要说明的是img制作成U盘后，不需要替换dtb，不需要更换内核，直接使用就可以，一步到位。</p><p>先把镜像写入U盘，从U盘启动后，从路由器找到N1的ip地址<br>通过Xshell登陆 输入N1的ip 账号root 密码1234<br>第一次进入需要修改密码<br>再写入N1的内置存储，用下面的命令就可以了<br>/boot/create-mbr-linux.sh<br>/root/install.sh<br>写入完成后，断电，拔U盘，插电重启</p><p>切换中国时间<br>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo “Asia/Shanghai” &gt; /etc/timezone</p><p>运行<br>nano /etc/apt/sources.list<br>修改源为国内源<br>deb <a href="http://mirrors.tuna.tsinghua.edu.cn/debian">http://mirrors.tuna.tsinghua.edu.cn/debian</a> stretch main contrib non-free<br>deb <a href="http://mirrors.tuna.tsinghua.edu.cn/debian">http://mirrors.tuna.tsinghua.edu.cn/debian</a> stretch-updates main contrib non-free<br>deb <a href="http://mirrors.tuna.tsinghua.edu.cn/debian-security">http://mirrors.tuna.tsinghua.edu.cn/debian-security</a> stretch/updates main contrib non-free<br>deb <a href="http://mirrors.tuna.tsinghua.edu.cn/debian">http://mirrors.tuna.tsinghua.edu.cn/debian</a> stretch-backports main</p><p>或者</p><p>deb <a href="http://mirrors.ustc.edu.cn/debian">http://mirrors.ustc.edu.cn/debian</a> stretch main contrib non-free<br>deb <a href="http://mirrors.ustc.edu.cn/debian">http://mirrors.ustc.edu.cn/debian</a> stretch-updates main contrib non-free<br>deb <a href="http://mirrors.ustc.edu.cn/debian">http://mirrors.ustc.edu.cn/debian</a> stretch-backports main contrib non-free<br>deb <a href="http://mirrors.ustc.edu.cn/debian-security/">http://mirrors.ustc.edu.cn/debian-security/</a> stretch/updates main contrib non-free</p><p>保存后，更新源<br>执行 apt-get update 命令即可更新源<br>执行 apt-get upgrade 更新软件</p><h2 id="做一个补充，切换国内源后安装omv和插件有一定概率会出问题，官方的也是一样，最稳的做法是，外国ip，官方源，稳定，速度又快。"><a href="#做一个补充，切换国内源后安装omv和插件有一定概率会出问题，官方的也是一样，最稳的做法是，外国ip，官方源，稳定，速度又快。" class="headerlink" title="做一个补充，切换国内源后安装omv和插件有一定概率会出问题，官方的也是一样，最稳的做法是，外国ip，官方源，稳定，速度又快。"></a>做一个补充，切换国内源后安装omv和插件有一定概率会出问题，官方的也是一样，最稳的做法是，外国ip，官方源，稳定，速度又快。</h2><h1 id="安装omv"><a href="#安装omv" class="headerlink" title="安装omv"></a>安装omv</h1><p>armbian-config</p><p>选择Software，回车确认 接着选择Softy，回车确认 最后选择OMV，空格勾选，回车确认开始安装</p><p>然后，按tab键，选择OK，回车确认 最后等OMV程序自动安装完成</p><p>依次选择Exit、Cancel，返回命令行<br>至此OMV安装完毕，正常的话，浏览器输入N1 ip或<a href="http://aml/">http://aml/</a> ,会看到OpenMediaVault登陆界面</p><p>此时使用默认用户名：admin 默认密码：openmediavault ，登陆即可</p><p>OMV安装OMVEXTRAS<br>官方教程  <a href="https://www.openmediavault.cn/read-omvextrasorg.html">https://www.openmediavault.cn/read-omvextrasorg.html</a><br>安装好后，按下图设置</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112165303.png"></p><h1 id="安装Typecho"><a href="#安装Typecho" class="headerlink" title="安装Typecho"></a>安装Typecho</h1><h2 id="在文件管理，找到自己的usb设备，我的是移动2T的移动硬盘，选择挂载。"><a href="#在文件管理，找到自己的usb设备，我的是移动2T的移动硬盘，选择挂载。" class="headerlink" title="在文件管理，找到自己的usb设备，我的是移动2T的移动硬盘，选择挂载。"></a>在文件管理，找到自己的usb设备，我的是移动2T的移动硬盘，选择挂载。</h2><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112170829.png"></p><p>用winscp软件，到2t下面建www文件夹，在www下面建typecho文件夹，在typecho下面建public_html 文件夹  都设置777权限，如下图</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112170108.png"><br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112170222.png"></p><h2 id="安装nginx和mysql"><a href="#安装nginx和mysql" class="headerlink" title="安装nginx和mysql"></a>安装nginx和mysql</h2><p>在插件找插件，点安装就可以的，先安装nginx，再安装mysql，安装好后入下图</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112171153.png"></p><h3 id="设置nginx-点击pools，添加typecho"><a href="#设置nginx-点击pools，添加typecho" class="headerlink" title="设置nginx 点击pools，添加typecho"></a>设置nginx 点击pools，添加typecho</h3><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112171656.png"><br>点击服务器，添加后保存<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112171847.png"><br>应用更改后再设置，选择typecho目录，选择公共目录，选择public_html，启用php，php-fpm-pool选择刚刚建立的typecho</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112172404.png"></p><p>Index下面的三个选项都打开</p><p>这里先打乱一些顺序，我发现安装好typecho后，只能打开前台，文件页面和管理后台都出现404，下面就是解决方法<br>下面有个扩展选项，填入下面代码</p><p>if (-f $request_filename/index.html){<br>    rewrite (.<em>) $1/index.html break;<br>}<br>if (-f $request_filename/index.php){<br>    rewrite (.</em>) $1/index.php;<br>}<br>if (!-f $request_filename){<br>    rewrite (.*) /index.php;<br>}</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112173220.png"></p><p>也可以直接在配置 /etc/nginx/sites-available/zzz-omv-nginx 最后面加上面的代码<br>就可以了</p><p>最后在General点击启用，nginx 就配置好了<br>下面配置数据库</p><h3 id="omv安装数据库"><a href="#omv安装数据库" class="headerlink" title="omv安装数据库"></a>omv安装数据库</h3><p><a href="https://www.openmediavault.cn/read-omv-install-mysql.html">https://www.openmediavault.cn/read-omv-install-mysql.html</a></p><p>打开mysql，重设密码。绑定ip改成n1的ip</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112174209.png"></p><p>点击show<br>用户ID：omvadmin<br>密码：刚修改过的<br>登陆后，创建数据库<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112174527.png"><br>官方下载 <a href="http://typecho.org/">http://typecho.org/</a><br>解压后，将文件上传到前面建立都public_html文件夹，就可以安装了。</p><h3 id="mysql自动启动"><a href="#mysql自动启动" class="headerlink" title="mysql自动启动"></a>mysql自动启动</h3><p>安装配置完nginx和mysql后默认mysql是不能自启动的。所以还要配置数据库自启动。用winscp连接OMV系统【默认用户名root密码openmediavault】。连接后打开etc-找到rc.loal,右键点编辑，在exit 0上一行添加service mysqld start保存退出。就可以了</p><h3 id="备份数据库和还原数据库"><a href="#备份数据库和还原数据库" class="headerlink" title="备份数据库和还原数据库"></a>备份数据库和还原数据库</h3><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20200112182628.png"></p><h1 id="顺便推荐一个非常漂亮的主题"><a href="#顺便推荐一个非常漂亮的主题" class="headerlink" title="顺便推荐一个非常漂亮的主题"></a>顺便推荐一个非常漂亮的主题</h1><p><a href="https://zhebk.cn/Web/Akina.html">https://zhebk.cn/Web/Akina.html</a></p><h1 id="下面是相关命令和教程"><a href="#下面是相关命令和教程" class="headerlink" title="下面是相关命令和教程"></a>下面是相关命令和教程</h1><p>omv-firstaid<br>First aid 界面翻译</p><p>configure network interface 配置网络界面</p><p>configure web control panel 配置Web控制面板</p><p>change control panel administrator password 更改控制面板管理员密码</p><p>restore failed login attempt counter 恢复失败登录尝试计数器</p><p>restore configuration backup 恢复配置备份</p><p>check configuration status file 检查配置状态文件</p><p>check RRD database 检查RRD数据库</p><p>clear local upload package repository 清除本地上传包存储库</p><p>clean apt 清除apt</p><p>clear web control panel cache 清除Web控制面板缓存</p><p>submit diagnostic report to administrator 向管理员提交诊断<br>卸载相关<br>apt-get remove 会删除软件包而保留软件的配置文件<br>apt-get purge 会同时清除软件包和软件的配置文件<br>卸载openmediavault命令<br>apt-get purge openmediavault</p><p>armbian-config可视化操作里面有许多快捷的系统设置，<br>比如说基本的时间设置、网络设置，Wi-Fi设置，设置热点、安装桌面和远程、安装热门的第三方软件（诸如nginx Nextcloud、Plex、OpenMediaVault、Pi-hole、Transmission、Docker等热门软件）<br>下面收集了一些omv的相关教程，可以参考<br>omv使用</p><p>OMV安装NextCloud<br><a href="https://www.openmediavault.cn/read-omv-an-zhuang-nextcloud.html">https://www.openmediavault.cn/read-omv-an-zhuang-nextcloud.html</a></p><p>phicomm N1 armbian环境下安装功能丰富的开源NAS系统 OpenMediaVault<br><a href="https://www.right.com.cn/forum/thread-342164-1-1.html">https://www.right.com.cn/forum/thread-342164-1-1.html</a></p><p>N1 OpenMediaVault 使用DLNA+VLC多媒体应用的小白教程<br><a href="https://www.right.com.cn/forum/thread-342841-1-1.html">https://www.right.com.cn/forum/thread-342841-1-1.html</a></p><p>OpenMediaVault(OMV)配置Docker<br><a href="https://www.jianshu.com/p/5b0eacc61527">https://www.jianshu.com/p/5b0eacc61527</a></p><p>OMV安装可道云(kodexplorer)<br><a href="https://www.jianshu.com/p/4731a1ef01d1">https://www.jianshu.com/p/4731a1ef01d1</a></p><p>OMV安装web服务器详细教程<br><a href="https://jingyan.baidu.com/article/0aa223757304e688cd0d6464.html">https://jingyan.baidu.com/article/0aa223757304e688cd0d6464.html</a></p>]]></content>
    
    
    <categories>
      
      <category>斐讯N1</category>
      
      <category>omv</category>
      
      <category>typecho</category>
      
      <category>lnmp</category>
      
      <category>mysql</category>
      
      <category>nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>斐讯N1</tag>
      
      <tag>omv</tag>
      
      <tag>lnmp</tag>
      
      <tag>typecho</tag>
      
      <tag>mysql</tag>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>斐讯N1 docker安装homeassistant  配置斐讯dc1智能插座</title>
    <link href="/posts/6.html"/>
    <url>/posts/6.html</url>
    
    <content type="html"><![CDATA[<p>斐讯N1 docker安装homeassistant  配置斐讯dc1智能插座</p><p> 默认代码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -d --restart=always --name=<span class="hljs-string">&quot;home-assistant&quot;</span> -e TZ=Asia<span class="hljs-regexp">/Shanghai -v /</span>var<span class="hljs-regexp">/lib/</span>docker<span class="hljs-regexp">/homeassistant:/</span>config -p <span class="hljs-number">8123</span>:<span class="hljs-number">8123</span> -v <span class="hljs-regexp">/etc/</span>localtime:<span class="hljs-regexp">/etc/</span>localtime:ro --net=host homeassistant/aarch64-homeassistant:latest<br><br></code></pre></td></tr></table></figure><span id="more"></span><p>homeassistant:latest表示最新版的 用0.88.1顺手了，配置文件也有了，就不想安装最新版本的了。新版也试用过，不太好用<br> 刚开始用的代码是</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -d --restart=always --name=<span class="hljs-string">&quot;home-assistant&quot;</span> -e TZ=Asia<span class="hljs-regexp">/Shanghai -v /</span>var<span class="hljs-regexp">/lib/</span>docker<span class="hljs-regexp">/homeassistant:/</span>config -p <span class="hljs-number">8123</span>:<span class="hljs-number">8123</span> -v <span class="hljs-regexp">/etc/</span>localtime:<span class="hljs-regexp">/etc/</span>localtime:ro --net=host homeassistant/aarch64-homeassistant:<span class="hljs-number">0.88</span>.<span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><p> 没几天发现N1omv不能登陆，查询到内存储存已满，查找到var/lib/docker/homeassistant/config 里面有一个home-assistant_v2.db文件占了2G多，而且会不断的变大，更改 /docker/homeassistant的安装目录到移动硬盘<br> 这个是我的docker的安装目录，/sharedfolders/2t/docker<br> 所以修改后的代码就是把/var/lib/docker更换成/sharedfolders/2t/docker</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -d --restart=always --name=<span class="hljs-string">&quot;home-assistant&quot;</span> -e TZ=Asia<span class="hljs-regexp">/Shanghai -v /</span>sharedfolders<span class="hljs-regexp">/2t/</span>docker<span class="hljs-regexp">/homeassistant:/</span>config -p <span class="hljs-number">8123</span>:<span class="hljs-number">8123</span> -v <span class="hljs-regexp">/etc/</span>localtime:<span class="hljs-regexp">/etc/</span>localtime:ro --net=host homeassistant/aarch64-homeassistant:<span class="hljs-number">0.88</span>.<span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><p> 下载DCI配网工具<br> 给DC1配置好网络，要在路由里面找到DC1的ip就算完成了</p><p> 下载 20190628 HA Docker - DC1 M1.rar 里面有配置说明的<br> 蓝奏云网盘下载 <a href="https://www.lanzous.com/b987569">https://www.lanzous.com/b987569</a><br> 下载的文件里面有配置说明的，我也简单说下，把custom_components、M1（悟空净化器）、packages上传到/homeassistant根目录，下面内容复制进configuration.yaml底部<br> homeassistant:<br> packages: !include_dir_named packages<br> 斐讯K2老毛子固件路由。高级设置，内部网络，DHCP服务器，自定义配置文件 “hosts”<br> 增加以下两句<br> 192.168.123.24 Smartplugconnect.phicomm.com<br> 192.168.123.24 aircat.phicomm.com<br> 备注：192.168.123.24是我的斐讯N1的ip<br> 修改packages/phicomm_dc1m.yaml<br> ip修改成你在路由器里面看到DC1的ip</p><p> 配置根目录的automations.yaml<br> 我设置了饮水机06.30开 00.30关 打印机18.00开 00.00关，下面是代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">alias:</span> <span class="hljs-string">switch_on</span> <span class="hljs-number">06.30</span><br>  <span class="hljs-attr">initial_state:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">trigger:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">time</span><br>    <span class="hljs-attr">at:</span> <span class="hljs-string">&#x27;06:30:00&#x27;</span><br>  <span class="hljs-attr">action:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">service:</span> <span class="hljs-string">switch.turn_on</span> <br>    <span class="hljs-attr">entity_id:</span> <span class="hljs-string">switch.dc1_s1_template</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">alias:</span> <span class="hljs-string">switch_off</span> <span class="hljs-number">00.30</span><br>  <span class="hljs-attr">initial_state:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">trigger:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">time</span><br>    <span class="hljs-attr">at:</span> <span class="hljs-string">&#x27;00:30:00&#x27;</span><br>  <span class="hljs-attr">action:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">service:</span> <span class="hljs-string">switch.turn_off</span><br>    <span class="hljs-attr">entity_id:</span> <span class="hljs-string">switch.dc1_s1_template</span><br><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">alias:</span> <span class="hljs-string">switch_on</span> <span class="hljs-number">18.00</span><br>  <span class="hljs-attr">initial_state:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">trigger:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">time</span><br>    <span class="hljs-attr">at:</span> <span class="hljs-string">&#x27;18:00:00&#x27;</span><br>  <span class="hljs-attr">action:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">service:</span> <span class="hljs-string">switch.turn_on</span><br>    <span class="hljs-attr">entity_id:</span> <span class="hljs-string">switch.dc1_3_s3_template</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">alias:</span> <span class="hljs-string">switch_off</span> <span class="hljs-number">00.00</span><br>  <span class="hljs-attr">initial_state:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">trigger:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">time</span><br>    <span class="hljs-attr">at:</span> <span class="hljs-string">&#x27;00:00:00&#x27;</span><br>  <span class="hljs-attr">action:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">service:</span> <span class="hljs-string">switch.turn_off</span><br>    <span class="hljs-attr">entity_id:</span> <span class="hljs-string">switch.dc1_3_s3_template</span><br><br><br></code></pre></td></tr></table></figure><p> 配置过程发现问题解决的的3个方法<br> 1、斐讯DCI拔插头断电，再接电<br> 2、重启homeassistant<br> 3、退出homeassistant账户，重新登陆</p><p> 可以在docker重启homeassistant ，也可以在网页重启，配置好文件后可以按下图更改，0.88.1配置是这样的，新版貌似没有配置检查。<br> <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDkvMTYvNzFxSWZnT2N0WFFFckI1LnBuZw?x-oss-process=image/format,png" alt="dc1配置.png"></p>]]></content>
    
    
    <categories>
      
      <category>斐讯N1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>斐讯N1</tag>
      
      <tag>docker</tag>
      
      <tag>homeassistant</tag>
      
      <tag>斐讯DC1</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github 绑定域名添加https的方法2019年9月更新</title>
    <link href="/posts/5.html"/>
    <url>/posts/5.html</url>
    
    <content type="html"><![CDATA[<p>  官方教程<br> <a href="https://help.github.com/en/articles/using-a-custom-domain-with-github-pages">https://help.github.com/en/articles/using-a-custom-domain-with-github-pages</a><br> 打开 <a href="https://github.com/">https://github.com/</a><br> 打开 <a href="https://github.com/waimao8/waimao8.github.io/settings">https://github.com/waimao8/waimao8.github.io/settings</a><br> 绑定域名：163168.xyz</p><span id="more"></span><p> <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDkvMTQvT3djYURRVWxMdGQxN0Z2LnBuZw?x-oss-process=image/format,png" alt="1.png"></p><p> 打开你要绑定域名的项目，进入设置页面。并在 Github Pages - Custom domain 这一栏填上你的网址<br> 163168.xyz</p><p> 在source 目录添加一个新文件CNAME，不带任何后缀，这就是全称，里面写的是你的域名 163168.xyz<br> <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDkvMTQveVc1YWRzSE4zUVVEeHdxLnBuZw?x-oss-process=image/format,png" alt="2.png"></p><p> 免费https域名解析<br> <a href="https://dash.cloudflare.com/">https://dash.cloudflare.com/</a><br> 从域名服务商ns到下面两个地址<br> candy.ns.cloudflare.com<br> earl.ns.cloudflare.com<br> 电脑运行cmd ping waimao8.github.io<br> <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDkvMTQvdzFJOHVseG9HZmprc0RpLnBuZw?x-oss-process=image/format,png" alt="4.png"><br> 查询ip位<br> 185.199.108.153<br> 之前ping的是185.199.110.153</p><p> 从cloudflare解析域名 163168.xyz<br> 185.199.110.153<br> 185.199.111.153<br> <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDkvMTQvalpQblh1NGhrSm1NVHkxLnBuZw?x-oss-process=image/format,png" alt="6.png"><br> 等30分钟左右生效<br> 点击 <a href="https://163168.xyz/">https://163168.xyz/</a> 生效就可以访问了</p>]]></content>
    
    
    <categories>
      
      <category>Github</category>
      
      <category>hexo</category>
      
      <category>域名</category>
      
    </categories>
    
    
    <tags>
      
      <tag>域名</tag>
      
      <tag>hexo</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>chrome安装Tampermonkey，添加插件的过程</title>
    <link href="/posts/13.html"/>
    <url>/posts/13.html</url>
    
    <content type="html"><![CDATA[<p>chrome安装Tampermonkey，添加插件的过程</p><h1 id="安装谷歌访问助手"><a href="#安装谷歌访问助手" class="headerlink" title="安装谷歌访问助手"></a>安装谷歌访问助手</h1><p>打开google搜索和<a href="https://play.google.com/">https://play.google.com/</a>  的正确方式<br>下载谷歌访问助手<br><a href="https://github.com/haotian-wang/google-access-helper">https://github.com/haotian-wang/google-access-helper</a><br>解压文件后<br>将谷歌访问助手_v2.3.0.crx 重命名为谷歌访问助手_v2.3.0.zip</p><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191213133150.png"><br>打开开发者模式<br>将重命名为谷歌访问助手_v2.3.0.zip拖到浏览器就会自动安装了</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191213133526.png"></p><p>点击 <a href="https://google.com/">https://google.com</a> 或者 <a href="https://play.google.com/">https://play.google.com/</a> 就可以用了</p><h1 id="安装Tampermonkey"><a href="#安装Tampermonkey" class="headerlink" title="安装Tampermonkey"></a>安装Tampermonkey</h1><p>点击  <a href="https://greasyfork.org/zh-CN">https://greasyfork.org/zh-CN</a><br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191213134125.png"></p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191213134218.png"></p><h1 id="安装chrome看视频的vip插件"><a href="#安装chrome看视频的vip插件" class="headerlink" title="安装chrome看视频的vip插件"></a>安装chrome看视频的vip插件</h1><p>点击 <a href="https://greasyfork.org/zh-CN/scripts">https://greasyfork.org/zh-CN/scripts</a><br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191213134429.png"><br>点安装次脚步<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191213134506.png"><br>打开视频网站（随便哪一家）<br><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191213134811.png"><br>首次使用，随便输入一串数字，点击左边的VIP就可以观看了</p><p><img src="https://cdn.jsdelivr.net/gh/waimao8/image@master/20191213135010.png"></p><p>还有很多的插件都可以自己安装的，这里就不一一介绍了！</p>]]></content>
    
    
    <categories>
      
      <category>电脑软件</category>
      
      <category>chrome</category>
      
      <category>Tampermonkey</category>
      
      <category>cheome插件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cheome插件</tag>
      
      <tag>电脑软件</tag>
      
      <tag>chrome</tag>
      
      <tag>Tampermonkey</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo博客备份迁移教程</title>
    <link href="/posts/3.html"/>
    <url>/posts/3.html</url>
    
    <content type="html"><![CDATA[<h1 id="hexo备份"><a href="#hexo备份" class="headerlink" title="hexo备份"></a>hexo备份</h1><h2 id="新建repository"><a href="#新建repository" class="headerlink" title="新建repository"></a>新建repository</h2><p>在Github下创建一个新的repository，取名为myblog。(与本地的Hexo源码文件夹同名即可)<br>创建的时候最好为空，不要勾选创建README.md。</p><span id="more"></span><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>进入本地的Hexo文件夹(D:\hexo\blog\myblog)，在这个地方使用git Bash here执行以下命令创建仓库</p><h2 id="创建-gitignore文件"><a href="#创建-gitignore文件" class="headerlink" title="创建.gitignore文件"></a>创建.gitignore文件</h2><figure class="highlight irpf90"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs irpf90"><span class="hljs-keyword">touch</span> .gitignore<br></code></pre></td></tr></table></figure><p>参考我的 .gitignore：（下面的文件不备份）<br>.DS_Store<br>Thumbs.db<br>db.json<br><em>.log<br>node_modules/<br>public/<br>.deploy</em>/</p><h2 id="提交Hexo源码"><a href="#提交Hexo源码" class="headerlink" title="提交Hexo源码"></a>提交Hexo源码</h2><p>git add .<br>git commit -m “添加hexo源码文件作为备份”</p><h2 id="删除远程库"><a href="#删除远程库" class="headerlink" title="删除远程库"></a>删除远程库</h2><p>git remote rm origin</p><h2 id="添加远程-Git-仓库"><a href="#添加远程-Git-仓库" class="headerlink" title="添加远程 Git 仓库"></a>添加远程 Git 仓库</h2><p>git remote add origin <a href="mailto:&#103;&#105;&#x74;&#x40;&#x67;&#105;&#x74;&#104;&#117;&#98;&#46;&#99;&#111;&#x6d;">&#103;&#105;&#x74;&#x40;&#x67;&#105;&#x74;&#104;&#117;&#98;&#46;&#99;&#111;&#x6d;</a>:waimao8/myblog.git</p><h2 id="远程仓库合并到本地"><a href="#远程仓库合并到本地" class="headerlink" title="远程仓库合并到本地"></a>远程仓库合并到本地</h2><p>git pull –rebase origin master</p><h2 id="更新远程仓库"><a href="#更新远程仓库" class="headerlink" title="更新远程仓库"></a>更新远程仓库</h2><p>git push -u origin master</p><h1 id="hexo备份还原"><a href="#hexo备份还原" class="headerlink" title="hexo备份还原"></a>hexo备份还原</h1><p>在任何一台电脑上，只需要git remote add origin <a href="mailto:&#x67;&#x69;&#116;&#x40;&#103;&#x69;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#111;&#x6d;">&#x67;&#x69;&#116;&#x40;&#103;&#x69;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#111;&#x6d;</a>:waimao8/myblog.git,即可完成将Hexo源文件复制到本地</p><p>在本地编写完博客时，顺次执行实现三步骤，即可完成Hexo博客源文件更新同步</p><h2 id="提交Hexo源码-1"><a href="#提交Hexo源码-1" class="headerlink" title="提交Hexo源码"></a>提交Hexo源码</h2><p>git add .<br>git commit -m “添加hexo源码文件作为备份”</p><h2 id="远程仓库合并到本地-1"><a href="#远程仓库合并到本地-1" class="headerlink" title="远程仓库合并到本地"></a>远程仓库合并到本地</h2><p>git pull –rebase origin master</p><h2 id="更新远程仓库-1"><a href="#更新远程仓库-1" class="headerlink" title="更新远程仓库"></a>更新远程仓库</h2><p>git push -u origin master</p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>hexo备份还原</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>github搭建hexo博客和绑定域名的详细过程</title>
    <link href="/posts/2.html"/>
    <url>/posts/2.html</url>
    
    <content type="html"><![CDATA[<h2 id="1、https-github-com-先注册账号-比如我的是-waimao8"><a href="#1、https-github-com-先注册账号-比如我的是-waimao8" class="headerlink" title="1、https://github.com/ 先注册账号 比如我的是 waimao8"></a><a href=""></a>1、<a href="https://github.com/">https://github.com/</a> 先注册账号 比如我的是 waimao8</h2><h2 id="2、New-repository-waimao8-github-io"><a href="#2、New-repository-waimao8-github-io" class="headerlink" title="2、New repository waimao8.github.io"></a><a href=""></a>2、New repository waimao8.github.io</h2><h2 id="3、下载git-https-git-scm-com-downloads-默认安装-安装好后，用git-–version-来查看一下版本"><a href="#3、下载git-https-git-scm-com-downloads-默认安装-安装好后，用git-–version-来查看一下版本" class="headerlink" title="3、下载git https://git-scm.com/downloads 默认安装 安装好后，用git –version 来查看一下版本"></a><a href=""></a>3、下载git <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> 默认安装 安装好后，用git –version 来查看一下版本</h2><h2 id="4、下载-https-nodejs-org-en-download-选LTS-默认安装-，安装完后，打开命令行"><a href="#4、下载-https-nodejs-org-en-download-选LTS-默认安装-，安装完后，打开命令行" class="headerlink" title="4、下载 https://nodejs.org/en/download/ 选LTS 默认安装 ，安装完后，打开命令行"></a><a href=""></a>4、下载 <a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a> 选LTS 默认安装 ，安装完后，打开命令行</h2><span id="more"></span><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br><br></code></pre></td></tr></table></figure><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> -v<br><br></code></pre></td></tr></table></figure><h2 id="5、安装hexo"><a href="#5、安装hexo" class="headerlink" title="5、安装hexo"></a><a href=""></a>5、安装hexo</h2><p> 先创建一个文件夹blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）<br> 输入命令  <code>npm install -g hexo-cli</code><br> 用 hexo -v 查看一下版本<br> 初始化一下hexo<br> hexo init myblog 或者hexo init<br> cd /D/hexo/blog/myblog (每个人的安装目录都不一样，可参考我的</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span><br><br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><br></code></pre></td></tr></table></figure><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br><br></code></pre></td></tr></table></figure><p> 在浏览器输入localhost:4000就可以看到你生成的博客了</p><h2 id="6、生成SSH添加到GitHub"><a href="#6、生成SSH添加到GitHub" class="headerlink" title="6、生成SSH添加到GitHub"></a><a href=""></a>6、生成SSH添加到GitHub</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.name</span> <span class="hljs-string">&quot;yourname&quot;</span><br><br></code></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.email</span> <span class="hljs-string">&quot;youremail&quot;</span><br><br></code></pre></td></tr></table></figure><p> 这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱<br> 检查一下你有没有输对</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git config <span class="hljs-keyword">user</span>.name<br>git config <span class="hljs-keyword">user</span>.email<br><br></code></pre></td></tr></table></figure><p> 然后创建SSH,一路回车<br> ssh-keygen -t rsa -C “youremail”<br> 这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹<br> 一般在这个位置c/Users/Administrator/.ssh/<br> GitHub的最右上角setting中，找到SSH keys的设置选项，点击New SSH key<br> 把你的id_rsa.pub里面的信息复制进去<br> 在gitbash中，查看是否成功</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">ssh -T <span class="hljs-symbol">git@</span>github.com<br><br></code></pre></td></tr></table></figure><p> 如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">Hi liuxianan! You<span class="hljs-symbol">&#x27;ve</span> successfully authenticated, but GitHub does <span class="hljs-keyword">not</span> provide shell <span class="hljs-keyword">access</span>.<br><br></code></pre></td></tr></table></figure><p> 看到这个信息说明SSH已配置成功！</p><p> 此时你还需要配置：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.name</span> <span class="hljs-string">&quot;liuxianan&quot;</span><span class="hljs-comment">// 你的github用户名，非昵称</span><br><br></code></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.email</span>  <span class="hljs-string">&quot;xxx@qq.com&quot;</span><span class="hljs-comment">// 填写你的github注册邮箱</span><br><br></code></pre></td></tr></table></figure><h2 id="7、将hexo部署到GitHub"><a href="#7、将hexo部署到GitHub" class="headerlink" title="7、将hexo部署到GitHub"></a><a href=""></a>7、将hexo部署到GitHub</h2><p> 打开站点配置文件 _config.yml，翻到最后，修改为<br> YourgithubName就是你的GitHub账户</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//github.com/YourgithubName/YourgithubName.github.io.git</span><br>  或者 <br><span class="hljs-symbol">  repo:</span>git@github.com:waimao8/waimao8.github.io.git<br><span class="hljs-symbol">  branch:</span> master<br><br></code></pre></td></tr></table></figure><p> 安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br><br></code></pre></td></tr></table></figure><p> 然后</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo clean<br>hexo <span class="hljs-keyword">generate</span><br>hexo deploy<br><br></code></pre></td></tr></table></figure><p> hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写<br> hexo deploy 部署文章，可以用hexo d缩写</p><p> 注意deploy时可能要你输入username和password。</p><p> 得到下图就说明部署成功了，过一会儿就可以在 <a href="http://waimao8.github.io/">http://waimao8.github.io </a>这个网站看到你的博客了！！</p><h2 id="8、设置个人域名"><a href="#8、设置个人域名" class="headerlink" title="8、设置个人域名"></a><a href=""></a>8、设置个人域名</h2><p> 打开cmd<br> ping waimao8.github.io<br> 得到ip：185.199.110.153<br> 添加域名解析，A到185.199.110.153<br> ping下哪个ip的访问速度快，就A到哪里ip<br> 点击添加解析，记录类型选A或CNAME，A记录的记录值就是ip地址，github(官方文档)提供了两个IP地址，192.30.252.153和192.30.252.154，这两个IP地址为github的服务器地址，两个都要填上，解析记录设置两个www和@，线路就默认就行了，CNAME记录值填你的github博客网址 比如我的 waimao8.github.io<br> Settings）设置，然后在 GitHub Pages的 Custom domain设置里填上购买的域名<br> 新域名配置完成，可以访问了</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo安装后的使用教程</title>
    <link href="/posts/1.html"/>
    <url>/posts/1.html</url>
    
    <content type="html"><![CDATA[<p>​    </p><h1 id="安装主题（next）"><a href="#安装主题（next）" class="headerlink" title="安装主题（next）"></a>安装主题（next）</h1><p>git clone <a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a> themes/next</p><p> 下载主题解压后放到themes目录<br> 编辑主目录的_config.yml 查找language 设置 language: zh-CN  </p><span id="more"></span><p> 搜索Schemes<br> 切换到 scheme: Gemini<br> 搜索menu找到如下配置项，将about、tags、categories前的#号去掉</p><p>更新hexo或者主题可以复制 备份好的source  文件夹替换，新安装的博客可以按照下面教程重新安装</p><h1 id="添加分类"><a href="#添加分类" class="headerlink" title="添加分类"></a>添加分类</h1><p> 1、创建“分类”选项<br> 1.1 生成“分类”页并添加tpye属性<br> 打开命令行，进入博客所在文件夹。执行命令</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> categories<br><br></code></pre></td></tr></table></figure><p> 成功后会提示：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">INFO  Created: ~<span class="hljs-regexp">/Documents/</span>blog<span class="hljs-regexp">/source/</span>categories/index.md<br><br></code></pre></td></tr></table></figure><p> 根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章分类</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-04-07 0:30:00</span><br><span class="hljs-meta">---</span><br><br></code></pre></td></tr></table></figure><p> 添加type: “categories”到内容中，添加后是这样的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章分类</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-04-07 0:30:00</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">&quot;categories&quot;</span><br><span class="hljs-meta">---</span><br><br></code></pre></td></tr></table></figure><p> 保存并关闭文件。</p><h1 id="给文章添加“categories”属性"><a href="#给文章添加“categories”属性" class="headerlink" title="给文章添加“categories”属性"></a>给文章添加“categories”属性</h1><p> 打开需要添加分类的文章，为其添加categories属性。下方的categories: web前端表示添加这篇文章到“web前端”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- web前端”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- web前端”下的 “-xxx ”分类）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">jQuery对表单的操作及更多应用</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-04-07 0:31:22</span><br><span class="hljs-attr">categories:</span> <br><span class="hljs-bullet">-</span> <span class="hljs-string">web前端</span><br><span class="hljs-meta">---</span><br><br></code></pre></td></tr></table></figure><p> 至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了categories: xxx的文章才会被收录到首页的“分类”中。  </p><h1 id="创建“标签”选项"><a href="#创建“标签”选项" class="headerlink" title="创建“标签”选项"></a>创建“标签”选项</h1><p> 生成“标签”页并添加tpye属性<br> 打开命令行，进入博客所在文件夹。执行命令</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> tags<br><br></code></pre></td></tr></table></figure><p> 找到 source/tags/index.md<br> 添加type: “tags”到内容中，添加后是这样的</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章分类</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-04-07 0:33:55</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">&quot;tags&quot;</span><br><span class="hljs-meta">---</span><br><br></code></pre></td></tr></table></figure><p> 保存并关闭文件。  </p><h1 id="给文章添加标签和分类"><a href="#给文章添加标签和分类" class="headerlink" title="给文章添加标签和分类"></a>给文章添加标签和分类</h1><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title: title #文章標題<br>date: 2019<span class="hljs-string">-04</span><span class="hljs-string">-07</span> 00:43:12 #文章生成時間<br>categories: &quot;Hexo教程&quot; #文章分類目錄 可以省略<br><span class="hljs-keyword">tags:</span> #文章標籤 可以省略<br>     - 标签1<br>     - 标签2<br> description: #你對本頁的描述 可以省略<br><br></code></pre></td></tr></table></figure><h1 id="添加菜单"><a href="#添加菜单" class="headerlink" title="添加菜单"></a>添加菜单</h1><p> 编辑主题的_config.yml，查找menu，去掉 tags categories about 前面的#号就可以了  </p><h1 id="显示摘要-阅读全文"><a href="#显示摘要-阅读全文" class="headerlink" title="显示摘要 阅读全文"></a>显示摘要 阅读全文</h1><p>在文章下面添加，建议在3到5行处添加<br>  &lt; !–more–&gt;</p><h1 id="添加版权"><a href="#添加版权" class="headerlink" title="添加版权"></a>添加版权</h1><p>搜索 creative_commons<br>sidebar: false 改成  sidebar: true<br>post: false 改成 post: true</p><h1 id="文章Url固定链接（修改博客根目录的-config-yml）"><a href="#文章Url固定链接（修改博客根目录的-config-yml）" class="headerlink" title="文章Url固定链接（修改博客根目录的_config.yml）"></a>文章Url固定链接（修改博客根目录的_config.yml）</h1><p>查找 permalink: :year/:month/:day/:title/<br>替换成<br>permalink: archives/:abbrlink.html<br>写文章加上 abbrlink: 1（数字越大的，就是越新的文章）</p><h1 id="置顶"><a href="#置顶" class="headerlink" title="置顶"></a>置顶</h1><p><a href="https://github.com/netcan/hexo-generator-index-pin-top">支持置顶的仓库</a></p><p>可以直接用以下命令安装</p><p>$ npm uninstall hexo-generator-index –save<br>$ npm install hexo-generator-index-pin-top –save<br>然后在需要置顶的文章的Front-matter中加上top: true即可。</p><p>设置置顶标志<br>打开：/blog/themes/next/layout/_macro 目录下的post.swig文件<br>查找</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;post-meta&quot;</span>&gt;  <br></code></pre></td></tr></table></figure><p>下面添加</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> post.top %&#125;</span><br><span class="xml"> <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-thumb-tack&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span></span><br><span class="xml"> <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">7D26CD</span>&gt;</span>置顶<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></span><br><span class="xml"> <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br><br></code></pre></td></tr></table></figure><p>需要置顶文章需要添加    top: true</p><h1 id="添加不蒜子访问统计"><a href="#添加不蒜子访问统计" class="headerlink" title="添加不蒜子访问统计"></a>添加不蒜子访问统计</h1><p> 是否开启访问量统计功能(不蒜子)<br>busuanzi:<br> enable: true<br> 修改next主题的模板文件<br>需要修改的模板文件是theme/next/layout/_partials/footer.swig<br>在最后面添加</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> theme.footer.counter %&#125;</span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">async</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span>总访问量<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>次<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span>总访客<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>人<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><br><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br><br></code></pre></td></tr></table></figure><h1 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h1><p>Github大礼包：gitment， gitalk（推荐），gitter（推荐）; 三个都支持Markdown；基于leancloud的无后端评论系统：Valine（推荐，支持Markdown）<br>本站使用<br>Valine+Leancloud 国际版 <a href="https://console.leancloud.app/">https://console.leancloud.app</a><br>在存储-&gt;结构化数据创建一个class并命名为comment。<br>在设置-&gt;应用Keys可以看到自动生成的AppID和AppKey,填到下面对应的位置就可以了</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">valine:</span><br><span class="hljs-symbol">  enable:</span> ture<br><span class="hljs-symbol">  appid:</span> xxxxxxx<br><span class="hljs-symbol">  appkey:</span> xxxxxx<br><br></code></pre></td></tr></table></figure><h1 id="添加阅读人数（真实人数）"><a href="#添加阅读人数（真实人数）" class="headerlink" title="添加阅读人数（真实人数）"></a>添加阅读人数（真实人数）</h1><p>id和key 也可以用上面Leancloud 国际版 的AppID和AppKey,</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">leancloud_visitors:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">app_id:</span> <span class="hljs-string">xxxxx</span><br>  <span class="hljs-attr">app_key:</span> <span class="hljs-string">xxxxxx</span><br><br></code></pre></td></tr></table></figure><h1 id="添加阅读人数之不蒜子（虚高人数）"><a href="#添加阅读人数之不蒜子（虚高人数）" class="headerlink" title="添加阅读人数之不蒜子（虚高人数）"></a>添加阅读人数之不蒜子（虚高人数）</h1><p>打开不蒜子</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">busuanzi_count:</span><br><span class="hljs-symbol">  enable:</span> ture<br>  <br></code></pre></td></tr></table></figure><p>打开 next\layout_partials  找到footer.swig文件，在最下面添加</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs django"><br><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> theme.footer.counter %&#125;</span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">async</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span>总访问量<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>次<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span>总访客<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>人<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><br><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
      <category>网站</category>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网站</tag>
      
      <tag>hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
